

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon May 22 02:06:45 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           ; Version 1.42
    48                           ; Generated 13/04/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F2550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	nvBANK0
    83  0000AF                     __pnvBANK0:
    84                           	opt stack 0
    85  0000AF                     _state:
    86                           	opt stack 0
    87  0000AF                     	ds	2
    88  0000                     _RA3	set	31747
    89  0000                     _RA2	set	31746
    90  0000                     _RA5	set	31749
    91  0000                     _RB0	set	31752
    92  0000                     _RB1	set	31753
    93  0000                     _RB4	set	31756
    94  0000                     _RB3	set	31755
    95  0000                     _TRISA3	set	31891
    96  0000                     _TRISA5	set	31893
    97  0000                     _TRISA2	set	31890
    98  0000                     _TRISB1	set	31897
    99  0000                     _TRISB4	set	31900
   100  0000                     _TRISB3	set	31899
   101  0000                     _RB5	set	31757
   102  0000                     _ADCON1	set	4033
   103  0000                     _SSPCON1	set	4038
   104  0000                     _CCP2CON	set	4026
   105  0000                     _T0CON	set	4053
   106  0000                     _INTCON2	set	4081
   107  0000                     _INTCON	set	4082
   108  0000                     _INTCONbits	set	4082
   109  0000                     _TMR0IF	set	32658
   110  0000                     _RBIF	set	32656
   111                           
   112                           ; #config settings
   113  0000                     
   114                           	psect	cinit
   115  000AEA                     __pcinit:
   116                           	opt stack 0
   117  000AEA                     start_initialization:
   118                           	opt stack 0
   119  000AEA                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to BANK0 (13 bytes)
   123  000AEA  EE00  F0A2         	lfsr	0,__pbssBANK0
   124  000AEE  0E0D               	movlw	13
   125  000AF0                     clear_0:
   126  000AF0  6AEE               	clrf	postinc0,c
   127  000AF2  06E8               	decf	wreg,f,c
   128  000AF4  E1FD               	bnz	clear_0
   129                           
   130                           ; Clear objects allocated to COMRAM (3 bytes)
   131  000AF6  6A39               	clrf	(__pbssCOMRAM+2)& (0+255),c
   132  000AF8  6A38               	clrf	(__pbssCOMRAM+1)& (0+255),c
   133  000AFA  6A37               	clrf	__pbssCOMRAM& (0+255),c
   134  000AFC                     end_of_initialization:
   135                           	opt stack 0
   136  000AFC                     __end_of__initialization:
   137                           	opt stack 0
   138  000AFC  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   139  000AFE  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   140  000B00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  000B02  6EF8               	movwf	tblptru,c
   142  000B04  0100               	movlb	0
   143  000B06  EF64  F001         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           postinc0	equ	0xFEE
   146                           wreg	equ	0xFE8
   147                           
   148                           	psect	bssCOMRAM
   149  000037                     __pbssCOMRAM:
   150                           	opt stack 0
   151  000037                     _next:
   152                           	opt stack 0
   153  000037                     	ds	2
   154  000039                     _human_code:
   155                           	opt stack 0
   156  000039                     	ds	1
   157                           tblptru	equ	0xFF8
   158                           postinc0	equ	0xFEE
   159                           wreg	equ	0xFE8
   160                           
   161                           	psect	bssBANK0
   162  0000A2                     __pbssBANK0:
   163                           	opt stack 0
   164  0000A2                     _masked_digits:
   165                           	opt stack 0
   166  0000A2                     	ds	6
   167  0000A8                     _aux1:
   168                           	opt stack 0
   169  0000A8                     	ds	6
   170  0000AE                     _counter:
   171                           	opt stack 0
   172  0000AE                     	ds	1
   173                           tblptru	equ	0xFF8
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	cstackBANK0
   178  000060                     __pcstackBANK0:
   179                           	opt stack 0
   180  000060                     high_isr@code:
   181                           	opt stack 0
   182                           
   183                           ; 47 bytes @ 0x0
   184  000060                     	ds	47
   185  00008F                     high_isr@digits:
   186                           	opt stack 0
   187                           
   188                           ; 6 bytes @ 0x2F
   189  00008F                     	ds	6
   190  000095                     high_isr@aux:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x35
   194  000095                     	ds	1
   195  000096                     high_isr@final_code:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x36
   199  000096                     	ds	2
   200  000098                     high_isr@i:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x38
   204  000098                     	ds	2
   205  00009A                     high_isr@i_136:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x3A
   209  00009A                     	ds	2
   210  00009C                     get_time@data:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x3C
   214  00009C                     	ds	2
   215  00009E                     get_time@format:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x3E
   219  00009E                     	ds	1
   220  00009F                     ??_main:
   221                           
   222                           ; 1 bytes @ 0x3F
   223  00009F                     	ds	2
   224  0000A1                     main@format:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0x41
   228  0000A1                     	ds	1
   229                           tblptru	equ	0xFF8
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	cstackCOMRAM
   234  000001                     __pcstackCOMRAM:
   235                           	opt stack 0
   236  000001                     ??_put_num:
   237  000001                     ??i2_send_command:
   238  000001                     get_num@num:
   239                           	opt stack 0
   240  000001                     get_seconds_reg@res:
   241                           	opt stack 0
   242  000001                     get_hour_reg@res:
   243                           	opt stack 0
   244  000001                     ir_get_human_code@code:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248  000001                     	ds	1
   249  000002                     get_seconds_reg@seconds:
   250                           	opt stack 0
   251  000002                     get_hour_reg@hour:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x1
   255  000002                     	ds	1
   256  000003                     ??_ir_get_human_code:
   257  000003                     put_num@num:
   258                           	opt stack 0
   259  000003                     i2send_command@command:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x2
   263  000003                     	ds	1
   264  000004                     put_num@mask:
   265                           	opt stack 0
   266  000004                     i2send_command@i:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x3
   270  000004                     	ds	1
   271  000005                     ir_get_human_code@human_read_code:
   272                           	opt stack 0
   273  000005                     _put_num$858:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x4
   277  000005                     	ds	1
   278  000006                     byte_write@value:
   279                           	opt stack 0
   280  000006                     put_num@i:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x5
   284  000006                     	ds	1
   285  000007                     byte_write@address:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x6
   289  000007                     	ds	1
   290  000008                     set_time@minutes:
   291                           	opt stack 0
   292  000008                     put_nums@nums:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x7
   296  000008                     	ds	1
   297  000009                     set_time@hour:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x8
   301  000009                     	ds	1
   302  00000A                     set_time@seconds:
   303                           	opt stack 0
   304  00000A                     put_nums@i:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x9
   308  00000A                     	ds	1
   309  00000B                     set_time@sec_reg:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0xA
   313  00000B                     	ds	1
   314  00000C                     set_time@min_reg:
   315                           	opt stack 0
   316  00000C                     update_display@digits:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0xB
   320  00000C                     	ds	1
   321  00000D                     set_time@hour_reg:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0xC
   325  00000D                     	ds	1
   326  00000E                     ?_get_next_state:
   327                           	opt stack 0
   328  00000E                     get_next_state@state:
   329                           	opt stack 0
   330  00000E                     update_display@counter:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0xD
   334  00000E                     	ds	2
   335  000010                     get_next_state@code:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0xF
   339  000010                     	ds	2
   340  000012                     get_next_state@seconds:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x11
   344  000012                     	ds	1
   345  000013                     get_next_state@minutes:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x12
   349  000013                     	ds	1
   350  000014                     get_next_state@hour:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x13
   354  000014                     	ds	1
   355  000015                     ??_high_isr:
   356                           
   357                           ; 1 bytes @ 0x14
   358  000015                     	ds	17
   359  000026                     ??_send_command:
   360  000026                     ir_is_code_number@human_code:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x25
   364  000026                     	ds	2
   365  000028                     send_command@command:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x27
   369  000028                     	ds	1
   370  000029                     send_command@i:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x28
   374  000029                     	ds	2
   375  00002B                     ??_byte_read:
   376                           
   377                           ; 1 bytes @ 0x2A
   378  00002B                     	ds	2
   379  00002D                     byte_read@address:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x2C
   383  00002D                     	ds	1
   384  00002E                     byte_read@res:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x2D
   388  00002E                     	ds	1
   389  00002F                     byte_read@i:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x2E
   393  00002F                     	ds	2
   394  000031                     ??_get_time:
   395                           
   396                           ; 1 bytes @ 0x30
   397  000031                     	ds	1
   398  000032                     get_time@seconds:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x31
   402  000032                     	ds	1
   403  000033                     get_time@aux_hour:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x32
   407  000033                     	ds	1
   408  000034                     get_time@minutes:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x33
   412  000034                     	ds	1
   413  000035                     get_time@aux:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x34
   417  000035                     	ds	1
   418  000036                     get_time@hours:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x35
   422  000036                     	ds	1
   423                           tblptru	equ	0xFF8
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 37 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  format          1   65[BANK0 ] unsigned char 
   437 ;;  temp            1    0        unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   447 ;;      Params:         0       0       0       0       0       0       0       0       0
   448 ;;      Locals:         0       1       0       0       0       0       0       0       0
   449 ;;      Temps:          0       2       0       0       0       0       0       0       0
   450 ;;      Totals:         0       3       0       0       0       0       0       0       0
   451 ;;Total ram usage:        3 bytes
   452 ;; Hardware stack levels required when called:   10
   453 ;; This function calls:
   454 ;;		_ConfigureOscillator
   455 ;;		_InitApp
   456 ;;		_buzzer_disable
   457 ;;		_get_time
   458 ;;		_ir_is_code_number
   459 ;; This function is called by:
   460 ;;		Startup code after reset
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text0
   465  0002C8                     __ptext0:
   466                           	opt stack 0
   467  0002C8                     _main:
   468                           	opt stack 21
   469                           
   470                           ;main.c: 40: ConfigureOscillator();
   471                           
   472                           ;incstack = 0
   473  0002C8  ECB2  F005         	call	_ConfigureOscillator	;wreg free
   474                           
   475                           ;main.c: 43: InitApp();
   476  0002CC  EC05  F005         	call	_InitApp	;wreg free
   477                           
   478                           ;main.c: 48: aux1[0] = 1;
   479  0002D0  0E01               	movlw	1
   480  0002D2  0100               	movlb	0	; () banked
   481  0002D4  6FA8               	movwf	_aux1& (0+255),b
   482                           
   483                           ; BSR set to: 0
   484                           ;main.c: 49: aux1[1] = 2;
   485  0002D6  0E02               	movlw	2
   486  0002D8  0100               	movlb	0	; () banked
   487  0002DA  6FA9               	movwf	(_aux1+1)& (0+255),b
   488                           
   489                           ; BSR set to: 0
   490                           ;main.c: 50: aux1[2] = 3;
   491  0002DC  0E03               	movlw	3
   492  0002DE  0100               	movlb	0	; () banked
   493  0002E0  6FAA               	movwf	(_aux1+2)& (0+255),b
   494                           
   495                           ; BSR set to: 0
   496                           ;main.c: 51: aux1[3] = 4;
   497  0002E2  0E04               	movlw	4
   498  0002E4  0100               	movlb	0	; () banked
   499  0002E6  6FAB               	movwf	(_aux1+3)& (0+255),b
   500                           
   501                           ; BSR set to: 0
   502                           ;main.c: 52: aux1[4] = 5;
   503  0002E8  0E05               	movlw	5
   504  0002EA  0100               	movlb	0	; () banked
   505  0002EC  6FAC               	movwf	(_aux1+4)& (0+255),b
   506                           
   507                           ; BSR set to: 0
   508                           ;main.c: 53: aux1[5] = 6;
   509  0002EE  0E06               	movlw	6
   510  0002F0  0100               	movlb	0	; () banked
   511  0002F2  6FAD               	movwf	(_aux1+5)& (0+255),b
   512                           
   513                           ; BSR set to: 0
   514                           ;main.c: 55: char temp;
   515                           ;main.c: 56: char format = 1;
   516  0002F4  0E01               	movlw	1
   517  0002F6  0100               	movlb	0	; () banked
   518  0002F8  6FA1               	movwf	main@format& (0+255),b
   519                           
   520                           ; BSR set to: 0
   521                           ;main.c: 57: buzzer_disable();
   522  0002FA  ECA4  F005         	call	_buzzer_disable	;wreg free
   523  0002FE                     l2905:
   524                           
   525                           ;main.c: 59: {
   526                           ;main.c: 60: state = next;
   527  0002FE  C037  F0AF         	movff	_next,_state
   528  000302  C038  F0B0         	movff	_next+1,_state+1
   529                           
   530                           ;main.c: 62: switch(state){
   531  000306  D05E               	goto	l2959
   532  000308                     l2907:
   533                           
   534                           ;main.c: 65: if(human_code == 10)
   535  000308  0E0A               	movlw	10
   536  00030A  1839               	xorwf	_human_code,w,c
   537  00030C  A4D8               	btfss	status,2,c
   538  00030E  D002               	goto	l2911
   539                           
   540                           ;main.c: 66: format = 0;
   541  000310  0E00               	movlw	0
   542  000312  D005               	goto	L1
   543  000314                     l2911:
   544                           
   545                           ;main.c: 67: else if (human_code == 12)
   546  000314  0E0C               	movlw	12
   547  000316  1839               	xorwf	_human_code,w,c
   548  000318  A4D8               	btfss	status,2,c
   549  00031A  D003               	goto	l2915
   550                           
   551                           ;main.c: 68: format = 1;
   552  00031C  0E01               	movlw	1
   553  00031E                     L1:
   554  00031E  0100               	movlb	0	; () banked
   555  000320  6FA1               	movwf	main@format& (0+255),b
   556  000322                     l2915:
   557                           
   558                           ;main.c: 70: get_time(aux1,format);
   559  000322  0EA8               	movlw	low _aux1
   560  000324  0100               	movlb	0	; () banked
   561  000326  6F9C               	movwf	get_time@data& (0+255),b
   562  000328  0E00               	movlw	high _aux1
   563  00032A  0100               	movlb	0	; () banked
   564  00032C  6F9D               	movwf	(get_time@data+1)& (0+255),b
   565  00032E  C0A1  F09E         	movff	main@format,get_time@format
   566  000332  EC19  F003         	call	_get_time	;wreg free
   567                           
   568                           ;main.c: 77: break;
   569  000336  D7E3               	goto	l2905
   570  000338                     l2917:
   571                           
   572                           ;main.c: 81: if(ir_is_code_number(human_code) && human_code <=2)
   573  000338  5039               	movf	_human_code,w,c
   574  00033A  ECAF  F004         	call	_ir_is_code_number
   575  00033E  0900               	iorlw	0
   576  000340  B4D8               	btfsc	status,2,c
   577  000342  D7DD               	goto	l2905
   578  000344  0E03               	movlw	3
   579  000346  6039               	cpfslt	_human_code,c
   580  000348  D7DA               	goto	l2905
   581                           
   582                           ;main.c: 82: {
   583                           ;main.c: 83: aux1[3] = human_code;
   584  00034A  C039  F0AB         	movff	_human_code,_aux1+3
   585                           
   586                           ;main.c: 84: next = 2;
   587  00034E  0E00               	movlw	0
   588  000350  6E38               	movwf	_next+1,c
   589  000352  0E02               	movlw	2
   590  000354  D035               	goto	L4
   591  000356                     l2925:
   592                           
   593                           ;main.c: 85: human_code = -1;
   594  000356  6839               	setf	_human_code,c
   595                           
   596                           ;main.c: 86: }
   597                           ;main.c: 87: break;
   598  000358  D7D2               	goto	l2905
   599  00035A                     l2927:
   600                           
   601                           ;main.c: 90: if(ir_is_code_number(human_code) && ((aux1[2]<2 && human_code <=9) || human
      +                          _code <=3))
   602  00035A  5039               	movf	_human_code,w,c
   603  00035C  ECAF  F004         	call	_ir_is_code_number
   604  000360  0900               	iorlw	0
   605  000362  B4D8               	btfsc	status,2,c
   606  000364  D7CC               	goto	l2905
   607  000366  0E02               	movlw	2
   608  000368  0100               	movlb	0	; () banked
   609  00036A  61AA               	cpfslt	(_aux1+2)& (0+255),b
   610  00036C  D003               	goto	l2933
   611                           
   612                           ; BSR set to: 0
   613  00036E  0E09               	movlw	9
   614  000370  6439               	cpfsgt	_human_code,c
   615  000372  D003               	goto	l100
   616  000374                     l2933:
   617                           
   618                           ; BSR set to: 0
   619  000374  0E04               	movlw	4
   620  000376  6039               	cpfslt	_human_code,c
   621  000378  D7C2               	goto	l2905
   622  00037A                     l100:
   623                           
   624                           ; BSR set to: 0
   625                           ;main.c: 91: {
   626                           ;main.c: 92: aux1[2] = human_code;
   627  00037A  C039  F0AA         	movff	_human_code,_aux1+2
   628                           
   629                           ; BSR set to: 0
   630                           ;main.c: 93: next = 3;
   631  00037E  0E00               	movlw	0
   632  000380  6E38               	movwf	_next+1,c
   633  000382  0E03               	movlw	3
   634  000384  D01D               	goto	L4
   635  000386                     l2939:
   636                           
   637                           ; BSR set to: 0
   638                           ;main.c: 99: if(ir_is_code_number(human_code) && human_code <=5)
   639  000386  5039               	movf	_human_code,w,c
   640  000388  ECAF  F004         	call	_ir_is_code_number
   641  00038C  0900               	iorlw	0
   642  00038E  B4D8               	btfsc	status,2,c
   643  000390  D7B6               	goto	l2905
   644  000392  0E06               	movlw	6
   645  000394  6039               	cpfslt	_human_code,c
   646  000396  D7B3               	goto	l2905
   647                           
   648                           ;main.c: 100: {
   649                           ;main.c: 101: aux1[1] = human_code;
   650  000398  C039  F0A9         	movff	_human_code,_aux1+1
   651                           
   652                           ;main.c: 102: next = 4;
   653  00039C  0E00               	movlw	0
   654  00039E  6E38               	movwf	_next+1,c
   655  0003A0  0E04               	movlw	4
   656  0003A2  D00E               	goto	L4
   657  0003A4                     l2949:
   658                           
   659                           ;main.c: 108: if(ir_is_code_number(human_code) && human_code <=9)
   660  0003A4  5039               	movf	_human_code,w,c
   661  0003A6  ECAF  F004         	call	_ir_is_code_number
   662  0003AA  0900               	iorlw	0
   663  0003AC  B4D8               	btfsc	status,2,c
   664  0003AE  D7A7               	goto	l2905
   665  0003B0  0E0A               	movlw	10
   666  0003B2  6039               	cpfslt	_human_code,c
   667  0003B4  D7A4               	goto	l2905
   668                           
   669                           ;main.c: 109: {
   670                           ;main.c: 110: aux1[0] = human_code;
   671  0003B6  C039  F0A8         	movff	_human_code,_aux1
   672                           
   673                           ;main.c: 111: next = 1;
   674  0003BA  0E00               	movlw	0
   675  0003BC  6E38               	movwf	_next+1,c
   676  0003BE  0E01               	movlw	1
   677  0003C0                     L4:
   678  0003C0  6E37               	movwf	_next,c
   679  0003C2  D7C9               	goto	l2925
   680  0003C4                     l2959:
   681  0003C4  C0AF  F09F         	movff	_state,??_main
   682  0003C8  C0B0  F0A0         	movff	_state+1,??_main+1
   683                           
   684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   685                           ; Switch size 1, requested type "space"
   686                           ; Number of cases is 1, Range of values is 0 to 0
   687                           ; switch strategies available:
   688                           ; Name         Instructions Cycles
   689                           ; simple_byte            4     3 (average)
   690                           ;	Chosen strategy is simple_byte
   691  0003CC  0100               	movlb	0	; () banked
   692  0003CE  51A0               	movf	(??_main+1)& (0+255),w,b
   693  0003D0  0A00               	xorlw	0	; case 0
   694  0003D2  A4D8               	btfss	status,2,c
   695  0003D4  D794               	goto	l2905
   696                           
   697                           ; BSR set to: 0
   698                           ; Switch size 1, requested type "space"
   699                           ; Number of cases is 5, Range of values is 0 to 4
   700                           ; switch strategies available:
   701                           ; Name         Instructions Cycles
   702                           ; simple_byte           16     9 (average)
   703                           ;	Chosen strategy is simple_byte
   704  0003D6  0100               	movlb	0	; () banked
   705  0003D8  519F               	movf	??_main& (0+255),w,b
   706  0003DA  0A00               	xorlw	0	; case 0
   707  0003DC  B4D8               	btfsc	status,2,c
   708  0003DE  D794               	goto	l2907
   709  0003E0  0A01               	xorlw	1	; case 1
   710  0003E2  B4D8               	btfsc	status,2,c
   711  0003E4  D7A9               	goto	l2917
   712  0003E6  0A03               	xorlw	3	; case 2
   713  0003E8  B4D8               	btfsc	status,2,c
   714  0003EA  D7B7               	goto	l2927
   715  0003EC  0A01               	xorlw	1	; case 3
   716  0003EE  B4D8               	btfsc	status,2,c
   717  0003F0  D7CA               	goto	l2939
   718  0003F2  0A07               	xorlw	7	; case 4
   719  0003F4  B4D8               	btfsc	status,2,c
   720  0003F6  D7D6               	goto	l2949
   721                           
   722                           ; BSR set to: 0
   723                           
   724                           ; BSR set to: 0
   725  0003F8  D782               	goto	l2905
   726  0003FA                     __end_of_main:
   727                           	opt stack 0
   728                           tblptru	equ	0xFF8
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           status	equ	0xFD8
   732                           
   733 ;; *************** function _ir_is_code_number *****************
   734 ;; Defined at:
   735 ;;		line 357 in file "user.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  human_code      1    wreg     unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  human_code      1   37[COMRAM] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      unsigned char 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   749 ;;      Params:         0       0       0       0       0       0       0       0       0
   750 ;;      Locals:         1       0       0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0
   752 ;;      Totals:         1       0       0       0       0       0       0       0       0
   753 ;;Total ram usage:        1 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    6
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text1
   764  00095E                     __ptext1:
   765                           	opt stack 0
   766  00095E                     _ir_is_code_number:
   767                           	opt stack 24
   768                           
   769                           ; BSR set to: 0
   770                           ;incstack = 0
   771                           ;ir_is_code_number@human_code stored from wreg
   772  00095E  6E26               	movwf	ir_is_code_number@human_code,c
   773                           
   774                           ;user.c: 359: if(human_code == 0 || human_code == 1 || human_code == 2 || human_code == 
      +                          3 || human_code == 4
   775                           ;user.c: 360: || human_code == 5 || human_code == 6 || human_code == 7 || human_code == 
      +                          8 || human_code == 9)
   776  000960  5026               	movf	ir_is_code_number@human_code,w,c
   777  000962  B4D8               	btfsc	status,2,c
   778  000964  D023               	goto	l2875
   779  000966  0426               	decf	ir_is_code_number@human_code,w,c
   780  000968  B4D8               	btfsc	status,2,c
   781  00096A  D020               	goto	l2875
   782  00096C  0E02               	movlw	2
   783  00096E  1826               	xorwf	ir_is_code_number@human_code,w,c
   784  000970  B4D8               	btfsc	status,2,c
   785  000972  D01C               	goto	l2875
   786  000974  0E03               	movlw	3
   787  000976  1826               	xorwf	ir_is_code_number@human_code,w,c
   788  000978  B4D8               	btfsc	status,2,c
   789  00097A  D018               	goto	l2875
   790  00097C  0E04               	movlw	4
   791  00097E  1826               	xorwf	ir_is_code_number@human_code,w,c
   792  000980  B4D8               	btfsc	status,2,c
   793  000982  D014               	goto	l2875
   794  000984  0E05               	movlw	5
   795  000986  1826               	xorwf	ir_is_code_number@human_code,w,c
   796  000988  B4D8               	btfsc	status,2,c
   797  00098A  D010               	goto	l2875
   798  00098C  0E06               	movlw	6
   799  00098E  1826               	xorwf	ir_is_code_number@human_code,w,c
   800  000990  B4D8               	btfsc	status,2,c
   801  000992  D00C               	goto	l2875
   802  000994  0E07               	movlw	7
   803  000996  1826               	xorwf	ir_is_code_number@human_code,w,c
   804  000998  B4D8               	btfsc	status,2,c
   805  00099A  D008               	goto	l2875
   806  00099C  0E08               	movlw	8
   807  00099E  1826               	xorwf	ir_is_code_number@human_code,w,c
   808  0009A0  B4D8               	btfsc	status,2,c
   809  0009A2  D004               	goto	l2875
   810  0009A4  0E09               	movlw	9
   811  0009A6  1826               	xorwf	ir_is_code_number@human_code,w,c
   812  0009A8  A4D8               	btfss	status,2,c
   813  0009AA  D002               	goto	l2881
   814  0009AC                     l2875:
   815                           
   816                           ;user.c: 361: return 1;
   817  0009AC  0E01               	movlw	1
   818  0009AE  0012               	return	
   819  0009B0                     l2881:
   820                           
   821                           ;user.c: 362: else
   822                           ;user.c: 363: return 0;
   823  0009B0  0E00               	movlw	0
   824  0009B2  0012               	return	
   825  0009B4                     __end_of_ir_is_code_number:
   826                           	opt stack 0
   827                           tblptru	equ	0xFF8
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           status	equ	0xFD8
   831                           
   832 ;; *************** function _get_time *****************
   833 ;; Defined at:
   834 ;;		line 208 in file "user.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  data            2   60[BANK0 ] PTR unsigned char 
   837 ;;		 -> aux1(6), 
   838 ;;  format          1   62[BANK0 ] unsigned char 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  aux_hour        1   50[COMRAM] unsigned char 
   841 ;;  hours           1   53[COMRAM] unsigned char 
   842 ;;  aux             1   52[COMRAM] unsigned char 
   843 ;;  minutes         1   51[COMRAM] unsigned char 
   844 ;;  seconds         1   49[COMRAM] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   854 ;;      Params:         0       3       0       0       0       0       0       0       0
   855 ;;      Locals:         5       0       0       0       0       0       0       0       0
   856 ;;      Temps:          1       0       0       0       0       0       0       0       0
   857 ;;      Totals:         6       3       0       0       0       0       0       0       0
   858 ;;Total ram usage:        9 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    9
   861 ;; This function calls:
   862 ;;		_byte_read
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text2
   869  000632                     __ptext2:
   870                           	opt stack 0
   871  000632                     _get_time:
   872                           	opt stack 21
   873                           
   874                           ;user.c: 210: char aux = 0x81;
   875                           
   876                           ;incstack = 0
   877  000632  0E81               	movlw	129
   878  000634  6E35               	movwf	get_time@aux,c
   879                           
   880                           ;user.c: 211: char seconds = byte_read(aux);
   881  000636  5035               	movf	get_time@aux,w,c
   882  000638  ECF2  F003         	call	_byte_read
   883  00063C  6E32               	movwf	get_time@seconds,c
   884                           
   885                           ;user.c: 212: aux = 0x83;
   886  00063E  0E83               	movlw	131
   887  000640  6E35               	movwf	get_time@aux,c
   888                           
   889                           ;user.c: 213: char minutes = byte_read(aux);
   890  000642  5035               	movf	get_time@aux,w,c
   891  000644  ECF2  F003         	call	_byte_read
   892  000648  6E34               	movwf	get_time@minutes,c
   893                           
   894                           ;user.c: 214: aux = 0x85;
   895  00064A  0E85               	movlw	133
   896  00064C  6E35               	movwf	get_time@aux,c
   897                           
   898                           ;user.c: 215: char hours = byte_read(aux);
   899  00064E  5035               	movf	get_time@aux,w,c
   900  000650  ECF2  F003         	call	_byte_read
   901  000654  6E36               	movwf	get_time@hours,c
   902                           
   903                           ;user.c: 218: data[0] = minutes & 0x0f;
   904  000656  5034               	movf	get_time@minutes,w,c
   905  000658  0B0F               	andlw	15
   906  00065A  C09C  FFD9         	movff	get_time@data,fsr2l
   907  00065E  C09D  FFDA         	movff	get_time@data+1,fsr2h
   908  000662  6EDF               	movwf	indf2,c
   909                           
   910                           ;user.c: 219: data[1] = (minutes & 0xf0)>>4;
   911  000664  0100               	movlb	0	; () banked
   912  000666  EE20 F001          	lfsr	2,1
   913  00066A  519C               	movf	get_time@data& (0+255),w,b
   914  00066C  26D9               	addwf	fsr2l,f,c
   915  00066E  519D               	movf	(get_time@data+1)& (0+255),w,b
   916  000670  22DA               	addwfc	fsr2h,f,c
   917  000672  3834               	swapf	get_time@minutes,w,c
   918  000674  0B0F               	andlw	15
   919  000676  0B0F               	andlw	15
   920  000678  6EDF               	movwf	indf2,c
   921                           
   922                           ; BSR set to: 0
   923                           ;user.c: 221: if(format == 1)
   924  00067A  0100               	movlb	0	; () banked
   925  00067C  059E               	decf	get_time@format& (0+255),w,b
   926  00067E  A4D8               	btfss	status,2,c
   927  000680  D00A               	goto	l2845
   928                           
   929                           ; BSR set to: 0
   930                           ;user.c: 222: {
   931                           ;user.c: 224: data[4] = 1;
   932  000682  0100               	movlb	0	; () banked
   933  000684  EE20 F004          	lfsr	2,4
   934  000688  519C               	movf	get_time@data& (0+255),w,b
   935  00068A  26D9               	addwf	fsr2l,f,c
   936  00068C  519D               	movf	(get_time@data+1)& (0+255),w,b
   937  00068E  22DA               	addwfc	fsr2h,f,c
   938  000690  0E01               	movlw	1
   939  000692  6EDF               	movwf	indf2,c
   940  000694  D017               	goto	l2851
   941  000696                     l2845:
   942                           
   943                           ; BSR set to: 0
   944                           ;user.c: 229: else
   945                           ;user.c: 230: {
   946                           ;user.c: 231: data[4] = 2;
   947  000696  0100               	movlb	0	; () banked
   948  000698  EE20 F004          	lfsr	2,4
   949  00069C  519C               	movf	get_time@data& (0+255),w,b
   950  00069E  26D9               	addwf	fsr2l,f,c
   951  0006A0  519D               	movf	(get_time@data+1)& (0+255),w,b
   952  0006A2  22DA               	addwfc	fsr2h,f,c
   953  0006A4  0E02               	movlw	2
   954  0006A6  6EDF               	movwf	indf2,c
   955                           
   956                           ; BSR set to: 0
   957                           ;user.c: 232: char aux_hour = (hours>>4 & 0x0f)*10 + (hours & 0x0f);
   958  0006A8  C036  F031         	movff	get_time@hours,??_get_time
   959  0006AC  0E0F               	movlw	15
   960  0006AE  1631               	andwf	??_get_time,f,c
   961  0006B0  3836               	swapf	get_time@hours,w,c
   962  0006B2  0B0F               	andlw	15
   963  0006B4  0B0F               	andlw	15
   964  0006B6  0D0A               	mullw	10
   965  0006B8  50F3               	movf	prodl,w,c
   966  0006BA  2431               	addwf	??_get_time,w,c
   967  0006BC  6E33               	movwf	get_time@aux_hour,c
   968                           
   969                           ; BSR set to: 0
   970                           ;user.c: 233: if(aux_hour<=12)
   971  0006BE  0E0D               	movlw	13
   972  0006C0  6033               	cpfslt	get_time@aux_hour,c
   973  0006C2  D015               	goto	l2853
   974  0006C4                     l2851:
   975                           
   976                           ; BSR set to: 0
   977                           ;user.c: 234: {
   978                           ;user.c: 235: data[2] = hours & 0x0f;
   979  0006C4  0100               	movlb	0	; () banked
   980  0006C6  EE20 F002          	lfsr	2,2
   981  0006CA  519C               	movf	get_time@data& (0+255),w,b
   982  0006CC  26D9               	addwf	fsr2l,f,c
   983  0006CE  519D               	movf	(get_time@data+1)& (0+255),w,b
   984  0006D0  22DA               	addwfc	fsr2h,f,c
   985  0006D2  5036               	movf	get_time@hours,w,c
   986  0006D4  0B0F               	andlw	15
   987  0006D6  6EDF               	movwf	indf2,c
   988                           
   989                           ;user.c: 236: data[3] = (hours & 0xf0)>>4;
   990  0006D8  0100               	movlb	0	; () banked
   991  0006DA  EE20 F003          	lfsr	2,3
   992  0006DE  519C               	movf	get_time@data& (0+255),w,b
   993  0006E0  26D9               	addwf	fsr2l,f,c
   994  0006E2  519D               	movf	(get_time@data+1)& (0+255),w,b
   995  0006E4  22DA               	addwfc	fsr2h,f,c
   996  0006E6  3836               	swapf	get_time@hours,w,c
   997  0006E8  0B0F               	andlw	15
   998  0006EA  0B0F               	andlw	15
   999  0006EC  D01A               	goto	L5
  1000  0006EE                     l2853:
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;user.c: 238: else
  1004                           ;user.c: 239: {
  1005                           ;user.c: 240: data[2] = (hours & 0x0f) - 2;
  1006  0006EE  0100               	movlb	0	; () banked
  1007  0006F0  EE20 F002          	lfsr	2,2
  1008  0006F4  519C               	movf	get_time@data& (0+255),w,b
  1009  0006F6  26D9               	addwf	fsr2l,f,c
  1010  0006F8  519D               	movf	(get_time@data+1)& (0+255),w,b
  1011  0006FA  22DA               	addwfc	fsr2h,f,c
  1012  0006FC  5036               	movf	get_time@hours,w,c
  1013  0006FE  0B0F               	andlw	15
  1014  000700  0FFE               	addlw	254
  1015  000702  6EDF               	movwf	indf2,c
  1016                           
  1017                           ;user.c: 241: data[3] = (hours>>4 & 0x0f)-1;
  1018  000704  0100               	movlb	0	; () banked
  1019  000706  EE20 F003          	lfsr	2,3
  1020  00070A  519C               	movf	get_time@data& (0+255),w,b
  1021  00070C  26D9               	addwf	fsr2l,f,c
  1022  00070E  519D               	movf	(get_time@data+1)& (0+255),w,b
  1023  000710  22DA               	addwfc	fsr2h,f,c
  1024  000712  C036  F031         	movff	get_time@hours,??_get_time
  1025  000716  3A31               	swapf	??_get_time,f,c
  1026  000718  0E0F               	movlw	15
  1027  00071A  1631               	andwf	??_get_time,f,c
  1028  00071C  0E0F               	movlw	15
  1029  00071E  1631               	andwf	??_get_time,f,c
  1030  000720  0431               	decf	??_get_time,w,c
  1031  000722                     L5:
  1032  000722  6EDF               	movwf	indf2,c
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;user.c: 242: }
  1036                           ;user.c: 244: }
  1037                           ;user.c: 247: data[5] = 'H';
  1038                           
  1039                           ; BSR set to: 0
  1040  000724  0100               	movlb	0	; () banked
  1041  000726  EE20 F005          	lfsr	2,5
  1042  00072A  519C               	movf	get_time@data& (0+255),w,b
  1043  00072C  26D9               	addwf	fsr2l,f,c
  1044  00072E  519D               	movf	(get_time@data+1)& (0+255),w,b
  1045  000730  22DA               	addwfc	fsr2h,f,c
  1046  000732  0E48               	movlw	72
  1047  000734  6EDF               	movwf	indf2,c
  1048                           
  1049                           ; BSR set to: 0
  1050  000736  0012               	return		;funcret
  1051  000738                     __end_of_get_time:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           prodl	equ	0xFF3
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           indf2	equ	0xFDF
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _byte_read *****************
  1063 ;; Defined at:
  1064 ;;		line 158 in file "user.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  address         1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  address         1   44[COMRAM] unsigned char 
  1069 ;;  i               2   46[COMRAM] int 
  1070 ;;  res             1   45[COMRAM] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      unsigned char 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0
  1081 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1082 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1083 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1084 ;;Total ram usage:        6 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    8
  1087 ;; This function calls:
  1088 ;;		_ce_disable
  1089 ;;		_ce_enable
  1090 ;;		_io_as_input
  1091 ;;		_send_command
  1092 ;; This function is called by:
  1093 ;;		_get_time
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text3
  1098  0007E4                     __ptext3:
  1099                           	opt stack 0
  1100  0007E4                     _byte_read:
  1101                           	opt stack 21
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;incstack = 0
  1105                           ;byte_read@address stored from wreg
  1106  0007E4  6E2D               	movwf	byte_read@address,c
  1107                           
  1108                           ;user.c: 159: char res = 0;
  1109  0007E6  0E00               	movlw	0
  1110  0007E8  6E2E               	movwf	byte_read@res,c
  1111                           
  1112                           ;user.c: 162: ce_enable();
  1113  0007EA  ECA2  F005         	call	_ce_enable	;wreg free
  1114                           
  1115                           ;user.c: 164: send_command(address);
  1116  0007EE  502D               	movf	byte_read@address,w,c
  1117  0007F0  EC29  F004         	call	_send_command
  1118                           
  1119                           ;user.c: 165: io_as_input();
  1120  0007F4  ECA0  F005         	call	_io_as_input	;wreg free
  1121                           
  1122                           ;user.c: 166: int i;
  1123                           ;user.c: 167: for(i=0;i<8;i++)
  1124  0007F8  0E00               	movlw	0
  1125  0007FA  6E30               	movwf	byte_read@i+1,c
  1126  0007FC  0E00               	movlw	0
  1127  0007FE  6E2F               	movwf	byte_read@i,c
  1128  000800                     l2777:
  1129  000800  BE30               	btfsc	byte_read@i+1,7,c
  1130  000802  D006               	goto	l242
  1131  000804  5030               	movf	byte_read@i+1,w,c
  1132  000806  E121               	bnz	l2793
  1133  000808  0E08               	movlw	8
  1134  00080A  5C2F               	subwf	byte_read@i,w,c
  1135  00080C  B0D8               	btfsc	status,0,c
  1136  00080E  D01D               	goto	l2793
  1137  000810                     l242:
  1138                           
  1139                           ;user.c: 168: {
  1140                           ;user.c: 169: RA2 = 0;
  1141  000810  9480               	bcf	3968,2,c	;volatile
  1142                           
  1143                           ;user.c: 170: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  1144  000812  0E06               	movlw	6
  1145  000814                     u2127:
  1146  000814  2EE8               	decfsz	wreg,f,c
  1147  000816  D7FE               	bra	u2127
  1148  000818  D000               	nop2	
  1149                           
  1150                           ;user.c: 171: res |= RA3<<i;
  1151  00081A  C02F  F02B         	movff	byte_read@i,??_byte_read
  1152  00081E  A680               	btfss	3968,3,c	;volatile
  1153  000820  D003               	goto	u1830
  1154  000822  6A2C               	clrf	(??_byte_read+1)& (0+255),c
  1155  000824  2A2C               	incf	(??_byte_read+1)& (0+255),f,c
  1156  000826  D001               	goto	u1848
  1157  000828                     u1830:
  1158  000828  6A2C               	clrf	(??_byte_read+1)& (0+255),c
  1159  00082A                     u1848:
  1160  00082A  2A2B               	incf	??_byte_read,f,c
  1161  00082C  D002               	goto	u1854
  1162  00082E                     u1855:
  1163  00082E  90D8               	bcf	status,0,c
  1164  000830  362C               	rlcf	??_byte_read+1,f,c
  1165  000832                     u1854:
  1166  000832  2E2B               	decfsz	??_byte_read,f,c
  1167  000834  D7FC               	goto	u1855
  1168  000836  502C               	movf	??_byte_read+1,w,c
  1169  000838  122E               	iorwf	byte_read@res,f,c
  1170                           
  1171                           ;user.c: 172: RA2 = 1;
  1172  00083A  8480               	bsf	3968,2,c	;volatile
  1173                           
  1174                           ;user.c: 173: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  1175  00083C  0E10               	movlw	16
  1176  00083E                     u2137:
  1177  00083E  2EE8               	decfsz	wreg,f,c
  1178  000840  D7FE               	bra	u2137
  1179  000842  D000               	nop2	
  1180  000844  4A2F               	infsnz	byte_read@i,f,c
  1181  000846  2A30               	incf	byte_read@i+1,f,c
  1182  000848  D7DB               	goto	l2777
  1183  00084A                     l2793:
  1184                           
  1185                           ;user.c: 175: }
  1186                           ;user.c: 177: ce_disable();
  1187  00084A  EC98  F005         	call	_ce_disable	;wreg free
  1188                           
  1189                           ;user.c: 180: return res;
  1190  00084E  502E               	movf	byte_read@res,w,c
  1191  000850  0012               	return	
  1192  000852                     __end_of_byte_read:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           prodl	equ	0xFF3
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           indf2	equ	0xFDF
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _send_command *****************
  1204 ;; Defined at:
  1205 ;;		line 300 in file "user.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  command         1    wreg     unsigned char 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  command         1   39[COMRAM] unsigned char 
  1210 ;;  i               2   40[COMRAM] int 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0
  1221 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1224 ;;Total ram usage:        5 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    7
  1227 ;; This function calls:
  1228 ;;		_io_as_output
  1229 ;; This function is called by:
  1230 ;;		_byte_read
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text4
  1235  000852                     __ptext4:
  1236                           	opt stack 0
  1237  000852                     _send_command:
  1238                           	opt stack 21
  1239                           
  1240                           ;incstack = 0
  1241                           ;send_command@command stored from wreg
  1242  000852  6E28               	movwf	send_command@command,c
  1243                           
  1244                           ;user.c: 302: int i;
  1245                           ;user.c: 303: io_as_output();
  1246  000854  EC9E  F005         	call	_io_as_output	;wreg free
  1247                           
  1248                           ;user.c: 304: for(i=0; i<8; i++)
  1249  000858  0E00               	movlw	0
  1250  00085A  6E2A               	movwf	send_command@i+1,c
  1251  00085C  0E00               	movlw	0
  1252  00085E  6E29               	movwf	send_command@i,c
  1253  000860                     l2747:
  1254  000860  BE2A               	btfsc	send_command@i+1,7,c
  1255  000862  D006               	goto	l2751
  1256  000864  502A               	movf	send_command@i+1,w,c
  1257  000866  E121               	bnz	l282
  1258  000868  0E08               	movlw	8
  1259  00086A  5C29               	subwf	send_command@i,w,c
  1260  00086C  B0D8               	btfsc	status,0,c
  1261  00086E  0012               	return	
  1262  000870                     l2751:
  1263                           
  1264                           ;user.c: 305: {
  1265                           ;user.c: 306: RA3 = command>>i & 0x01;
  1266  000870  C029  F026         	movff	send_command@i,??_send_command
  1267  000874  C028  F027         	movff	send_command@command,??_send_command+1
  1268  000878  2A26               	incf	??_send_command,f,c
  1269  00087A  D002               	goto	u1784
  1270  00087C                     u1785:
  1271  00087C  90D8               	bcf	status,0,c
  1272  00087E  3227               	rrcf	??_send_command+1,f,c
  1273  000880                     u1784:
  1274  000880  2E26               	decfsz	??_send_command,f,c
  1275  000882  D7FC               	goto	u1785
  1276  000884  3027               	rrcf	??_send_command+1,w,c
  1277  000886  A0D8               	btfss	status,0,c
  1278  000888  D002               	goto	u1790
  1279  00088A  8680               	bsf	3968,3,c	;volatile
  1280  00088C  D001               	goto	l2753
  1281  00088E                     u1790:
  1282  00088E  9680               	bcf	3968,3,c	;volatile
  1283  000890                     l2753:
  1284                           
  1285                           ;user.c: 307: RA2 = 1;
  1286  000890  8480               	bsf	3968,2,c	;volatile
  1287                           
  1288                           ;user.c: 308: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  1289  000892  0E10               	movlw	16
  1290  000894                     u2147:
  1291  000894  2EE8               	decfsz	wreg,f,c
  1292  000896  D7FE               	bra	u2147
  1293  000898  D000               	nop2	
  1294                           
  1295                           ;user.c: 309: RA2 = 0;
  1296  00089A  9480               	bcf	3968,2,c	;volatile
  1297                           
  1298                           ;user.c: 310: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  1299  00089C  0E06               	movlw	6
  1300  00089E                     u2157:
  1301  00089E  2EE8               	decfsz	wreg,f,c
  1302  0008A0  D7FE               	bra	u2157
  1303  0008A2  D000               	nop2	
  1304  0008A4  4A29               	infsnz	send_command@i,f,c
  1305  0008A6  2A2A               	incf	send_command@i+1,f,c
  1306  0008A8  D7DB               	goto	l2747
  1307  0008AA                     l282:
  1308  0008AA  0012               	return		;funcret
  1309  0008AC                     __end_of_send_command:
  1310                           	opt stack 0
  1311                           tblptru	equ	0xFF8
  1312                           prodl	equ	0xFF3
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           indf2	equ	0xFDF
  1316                           fsr2h	equ	0xFDA
  1317                           fsr2l	equ	0xFD9
  1318                           status	equ	0xFD8
  1319                           
  1320 ;; *************** function _io_as_output *****************
  1321 ;; Defined at:
  1322 ;;		line 320 in file "user.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		None
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    6
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_send_command
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text5
  1351  000B3C                     __ptext5:
  1352                           	opt stack 0
  1353  000B3C                     _io_as_output:
  1354                           	opt stack 21
  1355                           
  1356                           ;user.c: 322: TRISA3 = 0;
  1357                           
  1358                           ;incstack = 0
  1359  000B3C  9692               	bcf	3986,3,c	;volatile
  1360  000B3E  0012               	return		;funcret
  1361  000B40                     __end_of_io_as_output:
  1362                           	opt stack 0
  1363                           tblptru	equ	0xFF8
  1364                           prodl	equ	0xFF3
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           indf2	equ	0xFDF
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8
  1371                           
  1372 ;; *************** function _io_as_input *****************
  1373 ;; Defined at:
  1374 ;;		line 315 in file "user.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		None
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    6
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_byte_read
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text6
  1403  000B40                     __ptext6:
  1404                           	opt stack 0
  1405  000B40                     _io_as_input:
  1406                           	opt stack 22
  1407                           
  1408                           ;user.c: 317: TRISA3 = 1;
  1409                           
  1410                           ;incstack = 0
  1411  000B40  8692               	bsf	3986,3,c	;volatile
  1412  000B42  0012               	return		;funcret
  1413  000B44                     __end_of_io_as_input:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           prodl	equ	0xFF3
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           indf2	equ	0xFDF
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _ce_enable *****************
  1425 ;; Defined at:
  1426 ;;		line 150 in file "user.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		None
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    6
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_byte_read
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text7
  1455  000B44                     __ptext7:
  1456                           	opt stack 0
  1457  000B44                     _ce_enable:
  1458                           	opt stack 22
  1459                           
  1460                           ;user.c: 151: RA5 = 1;
  1461                           
  1462                           ;incstack = 0
  1463  000B44  8A80               	bsf	3968,5,c	;volatile
  1464  000B46  0012               	return		;funcret
  1465  000B48                     __end_of_ce_enable:
  1466                           	opt stack 0
  1467                           tblptru	equ	0xFF8
  1468                           prodl	equ	0xFF3
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           indf2	equ	0xFDF
  1472                           fsr2h	equ	0xFDA
  1473                           fsr2l	equ	0xFD9
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _ce_disable *****************
  1477 ;; Defined at:
  1478 ;;		line 153 in file "user.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		None
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    6
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_byte_read
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text8
  1507  000B30                     __ptext8:
  1508                           	opt stack 0
  1509  000B30                     _ce_disable:
  1510                           	opt stack 22
  1511                           
  1512                           ;user.c: 154: RA5 = 0;
  1513                           
  1514                           ;incstack = 0
  1515  000B30  9A80               	bcf	3968,5,c	;volatile
  1516                           
  1517                           ;user.c: 155: RA2 = 0;
  1518  000B32  9480               	bcf	3968,2,c	;volatile
  1519  000B34  0012               	return		;funcret
  1520  000B36                     __end_of_ce_disable:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           prodl	equ	0xFF3
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           indf2	equ	0xFDF
  1527                           fsr2h	equ	0xFDA
  1528                           fsr2l	equ	0xFD9
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _buzzer_disable *****************
  1532 ;; Defined at:
  1533 ;;		line 137 in file "user.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		None
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    6
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;;		_buzzer_toggle
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text9
  1563  000B48                     __ptext9:
  1564                           	opt stack 0
  1565  000B48                     _buzzer_disable:
  1566                           	opt stack 24
  1567                           
  1568                           ;user.c: 139: RB0 = 0;
  1569                           
  1570                           ;incstack = 0
  1571  000B48  9081               	bcf	3969,0,c	;volatile
  1572  000B4A  0012               	return		;funcret
  1573  000B4C                     __end_of_buzzer_disable:
  1574                           	opt stack 0
  1575                           tblptru	equ	0xFF8
  1576                           prodl	equ	0xFF3
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           indf2	equ	0xFDF
  1580                           fsr2h	equ	0xFDA
  1581                           fsr2l	equ	0xFD9
  1582                           status	equ	0xFD8
  1583                           
  1584 ;; *************** function _InitApp *****************
  1585 ;; Defined at:
  1586 ;;		line 28 in file "user.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1603 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    6
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text10
  1615  000A0A                     __ptext10:
  1616                           	opt stack 0
  1617  000A0A                     _InitApp:
  1618                           	opt stack 24
  1619                           
  1620                           ;user.c: 32: TRISB3 = 0;
  1621                           
  1622                           ;incstack = 0
  1623  000A0A  9693               	bcf	3987,3,c	;volatile
  1624                           
  1625                           ;user.c: 33: TRISB4 = 0;
  1626  000A0C  9893               	bcf	3987,4,c	;volatile
  1627                           
  1628                           ;user.c: 35: CCP2CON = 0x00;
  1629  000A0E  0E00               	movlw	0
  1630  000A10  6EBA               	movwf	4026,c	;volatile
  1631                           
  1632                           ;user.c: 36: SSPCON1 = 0X00;
  1633  000A12  0E00               	movlw	0
  1634  000A14  6EC6               	movwf	4038,c	;volatile
  1635                           
  1636                           ;user.c: 37: ADCON1 = 0X0F;
  1637  000A16  0E0F               	movlw	15
  1638  000A18  6EC1               	movwf	4033,c	;volatile
  1639                           
  1640                           ;user.c: 38: INTCON = 0b10001000;
  1641  000A1A  0E88               	movlw	136
  1642  000A1C  6EF2               	movwf	intcon,c	;volatile
  1643                           
  1644                           ;user.c: 39: INTCON = 0b0;
  1645  000A1E  0E00               	movlw	0
  1646  000A20  6EF2               	movwf	intcon,c	;volatile
  1647                           
  1648                           ;user.c: 40: INTCON |= 1<<7;
  1649  000A22  8EF2               	bsf	intcon,7,c	;volatile
  1650                           
  1651                           ;user.c: 41: INTCON |= 1<<3;
  1652  000A24  86F2               	bsf	intcon,3,c	;volatile
  1653                           
  1654                           ;user.c: 42: INTCON |= 1<<5;
  1655  000A26  8AF2               	bsf	intcon,5,c	;volatile
  1656                           
  1657                           ;user.c: 43: INTCON2 = 0b10000101;
  1658  000A28  0E85               	movlw	133
  1659  000A2A  6EF1               	movwf	intcon2,c	;volatile
  1660                           
  1661                           ;user.c: 44: INTCON2 |= 1<2;
  1662  000A2C  80F1               	bsf	intcon2,0,c	;volatile
  1663                           
  1664                           ;user.c: 46: T0CON = 0b10000010;
  1665  000A2E  0E82               	movlw	130
  1666  000A30  6ED5               	movwf	4053,c	;volatile
  1667                           
  1668                           ;user.c: 47: TRISB1 = 0;
  1669  000A32  9293               	bcf	3987,1,c	;volatile
  1670                           
  1671                           ;user.c: 48: TRISA2 = 0;
  1672  000A34  9492               	bcf	3986,2,c	;volatile
  1673                           
  1674                           ;user.c: 49: TRISA5 = 0;
  1675  000A36  9A92               	bcf	3986,5,c	;volatile
  1676                           
  1677                           ;user.c: 50: TRISA3 = 0;
  1678  000A38  9692               	bcf	3986,3,c	;volatile
  1679                           
  1680                           ;user.c: 54: state = 0;
  1681  000A3A  0E00               	movlw	0
  1682  000A3C  0100               	movlb	0	; () banked
  1683  000A3E  6FB0               	movwf	(_state+1)& (0+255),b
  1684  000A40  0E00               	movlw	0
  1685  000A42  6FAF               	movwf	_state& (0+255),b
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;user.c: 55: next = 0;
  1689  000A44  0E00               	movlw	0
  1690  000A46  6E38               	movwf	_next+1,c
  1691  000A48  0E00               	movlw	0
  1692  000A4A  6E37               	movwf	_next,c
  1693                           
  1694                           ; BSR set to: 0
  1695  000A4C  0012               	return		;funcret
  1696  000A4E                     __end_of_InitApp:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           prodl	equ	0xFF3
  1700                           intcon	equ	0xFF2
  1701                           intcon2	equ	0xFF1
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           indf2	equ	0xFDF
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _ConfigureOscillator *****************
  1710 ;; Defined at:
  1711 ;;		line 24 in file "system.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		None
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    6
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text11
  1740  000B64                     __ptext11:
  1741                           	opt stack 0
  1742  000B64                     _ConfigureOscillator:
  1743                           	opt stack 24
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;incstack = 0
  1747  000B64  0012               	return		;funcret
  1748  000B66                     __end_of_ConfigureOscillator:
  1749                           	opt stack 0
  1750                           tblptru	equ	0xFF8
  1751                           prodl	equ	0xFF3
  1752                           intcon	equ	0xFF2
  1753                           intcon2	equ	0xFF1
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           indf2	equ	0xFDF
  1757                           fsr2h	equ	0xFDA
  1758                           fsr2l	equ	0xFD9
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _high_isr *****************
  1762 ;; Defined at:
  1763 ;;		line 32 in file "interrupts.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  digits          6   47[BANK0 ] unsigned char [6]
  1768 ;;  i               2   58[BANK0 ] int 
  1769 ;;  code           47    0[BANK0 ] unsigned char [47]
  1770 ;;  i               2   56[BANK0 ] int 
  1771 ;;  final_code      2   54[BANK0 ] int 
  1772 ;;  aux             1   53[BANK0 ] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         0      60       0       0       0       0       0       0       0
  1784 ;;      Temps:         17       0       0       0       0       0       0       0       0
  1785 ;;      Totals:        17      60       0       0       0       0       0       0       0
  1786 ;;Total ram usage:       77 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    5
  1789 ;; This function calls:
  1790 ;;		_buzzer_enable
  1791 ;;		_get_next_state
  1792 ;;		_ir_get_human_code
  1793 ;;		_point_disable
  1794 ;;		_point_enable
  1795 ;;		_update_display
  1796 ;;		i2_buzzer_disable
  1797 ;; This function is called by:
  1798 ;;		Interrupt level 2
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	intcode
  1803  000008                     __pintcode:
  1804                           	opt stack 0
  1805  000008                     _high_isr:
  1806                           	opt stack 21
  1807                           
  1808                           ;incstack = 0
  1809  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1810  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  1811                           tblptru	equ	0xFF8
  1812                           prodl	equ	0xFF3
  1813                           intcon	equ	0xFF2
  1814                           intcon2	equ	0xFF1
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           indf2	equ	0xFDF
  1818                           fsr2h	equ	0xFDA
  1819                           fsr2l	equ	0xFD9
  1820                           status	equ	0xFD8
  1821                           
  1822                           	psect	intcode_body
  1823  000012                     __pintcode_body:
  1824                           	opt stack 21
  1825  000012                     int_func:
  1826                           	opt stack 21
  1827  000012  0006               	pop		; remove dummy address from shadow register refresh
  1828  000014  CFFA F018          	movff	pclath,??_high_isr+3
  1829  000018  CFFB F019          	movff	pclatu,??_high_isr+4
  1830  00001C  CFE9 F01A          	movff	fsr0l,??_high_isr+5
  1831  000020  CFEA F01B          	movff	fsr0h,??_high_isr+6
  1832  000024  CFE1 F01C          	movff	fsr1l,??_high_isr+7
  1833  000028  CFE2 F01D          	movff	fsr1h,??_high_isr+8
  1834  00002C  CFD9 F01E          	movff	fsr2l,??_high_isr+9
  1835  000030  CFDA F01F          	movff	fsr2h,??_high_isr+10
  1836  000034  CFF3 F020          	movff	prodl,??_high_isr+11
  1837  000038  CFF4 F021          	movff	prodh,??_high_isr+12
  1838  00003C  CFF6 F022          	movff	tblptrl,??_high_isr+13
  1839  000040  CFF7 F023          	movff	tblptrh,??_high_isr+14
  1840  000044  CFF8 F024          	movff	tblptru,??_high_isr+15
  1841  000048  CFF5 F025          	movff	tablat,??_high_isr+16
  1842                           
  1843                           ;interrupts.c: 68: if (RBIF == 1)
  1844  00004C  A0F2               	btfss	intcon,0,c	;volatile
  1845  00004E  D089               	goto	i2l41
  1846                           
  1847                           ;interrupts.c: 69: {
  1848                           ;interrupts.c: 71: INTCONbits.GIE = 0;
  1849  000050  9EF2               	bcf	intcon,7,c	;volatile
  1850                           
  1851                           ;interrupts.c: 72: char aux = 0;
  1852  000052  0E00               	movlw	0
  1853  000054  0100               	movlb	0	; () banked
  1854  000056  6F95               	movwf	high_isr@aux& (0+255),b
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;interrupts.c: 74: int i;
  1858                           ;interrupts.c: 75: char code[47];
  1859                           ;interrupts.c: 77: _delay((unsigned long)((40.7)*(20000000L/4000.0)));
  1860  000058  0E02               	movlw	2
  1861  00005A  6E16               	movwf	(??_high_isr+1)& (0+255),c
  1862  00005C  0E09               	movlw	9
  1863  00005E  6E15               	movwf	??_high_isr& (0+255),c
  1864  000060  0E46               	movlw	70
  1865  000062                     i2u216_47:
  1866  000062  2EE8               	decfsz	wreg,f,c
  1867  000064  D7FE               	bra	i2u216_47
  1868  000066  2E15               	decfsz	??_high_isr& (0+255),f,c
  1869  000068  D7FC               	bra	i2u216_47
  1870  00006A  2E16               	decfsz	(??_high_isr+1)& (0+255),f,c
  1871  00006C  D7FA               	bra	i2u216_47
  1872                           
  1873                           ;interrupts.c: 78: for(i = 0; i < 47 ; i ++)
  1874  00006E  0E00               	movlw	0
  1875  000070  0100               	movlb	0	; () banked
  1876  000072  6F99               	movwf	(high_isr@i+1)& (0+255),b
  1877  000074  0E00               	movlw	0
  1878  000076  6F98               	movwf	high_isr@i& (0+255),b
  1879  000078                     i2l2337:
  1880                           
  1881                           ; BSR set to: 0
  1882  000078  0100               	movlb	0	; () banked
  1883  00007A  BF99               	btfsc	(high_isr@i+1)& (0+255),7,b
  1884  00007C  D008               	goto	i2l2341
  1885  00007E  0100               	movlb	0	; () banked
  1886  000080  5199               	movf	(high_isr@i+1)& (0+255),w,b
  1887  000082  E11D               	bnz	i2l2349
  1888  000084  0E2F               	movlw	47
  1889  000086  0100               	movlb	0	; () banked
  1890  000088  5D98               	subwf	high_isr@i& (0+255),w,b
  1891  00008A  B0D8               	btfsc	status,0,c
  1892  00008C  D018               	goto	i2l2349
  1893  00008E                     i2l2341:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;interrupts.c: 79: {
  1897                           ;interrupts.c: 80: code[i] = RB5;
  1898  00008E  0E60               	movlw	low high_isr@code
  1899  000090  0100               	movlb	0	; () banked
  1900  000092  2598               	addwf	high_isr@i& (0+255),w,b
  1901  000094  6ED9               	movwf	fsr2l,c
  1902  000096  0E00               	movlw	high high_isr@code
  1903  000098  0100               	movlb	0	; () banked
  1904  00009A  2199               	addwfc	(high_isr@i+1)& (0+255),w,b
  1905  00009C  6EDA               	movwf	fsr2h,c
  1906  00009E  0E00               	movlw	0
  1907  0000A0  BA81               	btfsc	3969,5,c	;volatile
  1908  0000A2  0E01               	movlw	1
  1909  0000A4  6EDF               	movwf	indf2,c
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;interrupts.c: 81: _delay((unsigned long)((565)*(20000000L/4000000.0)));
  1913  0000A6  0E04               	movlw	4
  1914  0000A8  6E15               	movwf	??_high_isr& (0+255),c
  1915  0000AA  0EAA               	movlw	170
  1916  0000AC                     i2u217_47:
  1917  0000AC  2EE8               	decfsz	wreg,f,c
  1918  0000AE  D7FE               	bra	i2u217_47
  1919  0000B0  2E15               	decfsz	??_high_isr& (0+255),f,c
  1920  0000B2  D7FC               	bra	i2u217_47
  1921  0000B4  F000               	nop	
  1922  0000B6  0100               	movlb	0	; () banked
  1923  0000B8  4B98               	infsnz	high_isr@i& (0+255),f,b
  1924  0000BA  2B99               	incf	(high_isr@i+1)& (0+255),f,b
  1925  0000BC  D7DD               	goto	i2l2337
  1926  0000BE                     i2l2349:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;interrupts.c: 82: }
  1930                           ;interrupts.c: 83: int final_code = 0;
  1931  0000BE  0E00               	movlw	0
  1932  0000C0  0100               	movlb	0	; () banked
  1933  0000C2  6F97               	movwf	(high_isr@final_code+1)& (0+255),b
  1934  0000C4  0E00               	movlw	0
  1935  0000C6  6F96               	movwf	high_isr@final_code& (0+255),b
  1936                           
  1937                           ;interrupts.c: 84: for(i = 0; i<16;i++)
  1938  0000C8  0E00               	movlw	0
  1939  0000CA  0100               	movlb	0	; () banked
  1940  0000CC  6F99               	movwf	(high_isr@i+1)& (0+255),b
  1941  0000CE  0E00               	movlw	0
  1942  0000D0  6F98               	movwf	high_isr@i& (0+255),b
  1943  0000D2                     i2l2351:
  1944                           
  1945                           ; BSR set to: 0
  1946  0000D2  0100               	movlb	0	; () banked
  1947  0000D4  BF99               	btfsc	(high_isr@i+1)& (0+255),7,b
  1948  0000D6  D008               	goto	i2l2355
  1949  0000D8  0100               	movlb	0	; () banked
  1950  0000DA  5199               	movf	(high_isr@i+1)& (0+255),w,b
  1951  0000DC  E123               	bnz	i2l2361
  1952  0000DE  0E10               	movlw	16
  1953  0000E0  0100               	movlb	0	; () banked
  1954  0000E2  5D98               	subwf	high_isr@i& (0+255),w,b
  1955  0000E4  B0D8               	btfsc	status,0,c
  1956  0000E6  D01E               	goto	i2l2361
  1957  0000E8                     i2l2355:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;interrupts.c: 85: {
  1961                           ;interrupts.c: 86: final_code |= code[i]<<i;
  1962  0000E8  C098  F015         	movff	high_isr@i,??_high_isr
  1963  0000EC  0E60               	movlw	low high_isr@code
  1964  0000EE  0100               	movlb	0	; () banked
  1965  0000F0  2598               	addwf	high_isr@i& (0+255),w,b
  1966  0000F2  6ED9               	movwf	fsr2l,c
  1967  0000F4  0E00               	movlw	high high_isr@code
  1968  0000F6  0100               	movlb	0	; () banked
  1969  0000F8  2199               	addwfc	(high_isr@i+1)& (0+255),w,b
  1970  0000FA  6EDA               	movwf	fsr2h,c
  1971  0000FC  50DF               	movf	indf2,w,c
  1972  0000FE  6E16               	movwf	(??_high_isr+1)& (0+255),c
  1973  000100  6A17               	clrf	(??_high_isr+2)& (0+255),c
  1974  000102  2A15               	incf	??_high_isr,f,c
  1975  000104  D003               	goto	i2u150_44
  1976  000106                     i2u150_45:
  1977  000106  90D8               	bcf	status,0,c
  1978  000108  3616               	rlcf	??_high_isr+1,f,c
  1979  00010A  3617               	rlcf	??_high_isr+2,f,c
  1980  00010C                     i2u150_44:
  1981  00010C  2E15               	decfsz	??_high_isr,f,c
  1982  00010E  D7FB               	goto	i2u150_45
  1983  000110  5016               	movf	??_high_isr+1,w,c
  1984  000112  0100               	movlb	0	; () banked
  1985  000114  1396               	iorwf	high_isr@final_code& (0+255),f,b
  1986  000116  5017               	movf	??_high_isr+2,w,c
  1987  000118  0100               	movlb	0	; () banked
  1988  00011A  1397               	iorwf	(high_isr@final_code+1)& (0+255),f,b
  1989                           
  1990                           ; BSR set to: 0
  1991  00011C  0100               	movlb	0	; () banked
  1992  00011E  4B98               	infsnz	high_isr@i& (0+255),f,b
  1993  000120  2B99               	incf	(high_isr@i+1)& (0+255),f,b
  1994  000122  D7D7               	goto	i2l2351
  1995  000124                     i2l2361:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;interrupts.c: 87: }
  1999                           ;interrupts.c: 92: if(final_code !=0xffff)
  2000  000124  0100               	movlb	0	; () banked
  2001  000126  2996               	incf	high_isr@final_code& (0+255),w,b
  2002  000128  E104               	bnz	i2u152_40
  2003  00012A  0100               	movlb	0	; () banked
  2004  00012C  2997               	incf	(high_isr@final_code+1)& (0+255),w,b
  2005  00012E  B4D8               	btfsc	status,2,c
  2006  000130  D015               	goto	i2l2367
  2007  000132                     i2u152_40:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;interrupts.c: 93: {
  2011                           ;interrupts.c: 94: human_code = ir_get_human_code(final_code);
  2012  000132  C096  F001         	movff	high_isr@final_code,ir_get_human_code@code
  2013  000136  C097  F002         	movff	high_isr@final_code+1,ir_get_human_code@code+1
  2014  00013A  ECFD  F001         	call	_ir_get_human_code	;wreg free
  2015  00013E  6E39               	movwf	_human_code,c
  2016                           
  2017                           ;interrupts.c: 95: next = get_next_state(state,final_code);
  2018  000140  C0AF  F00E         	movff	_state,get_next_state@state
  2019  000144  C0B0  F00F         	movff	_state+1,get_next_state@state+1
  2020  000148  C096  F010         	movff	high_isr@final_code,get_next_state@code
  2021  00014C  C097  F011         	movff	high_isr@final_code+1,get_next_state@code+1
  2022  000150  EC94  F002         	call	_get_next_state	;wreg free
  2023  000154  C00E  F037         	movff	?_get_next_state,_next
  2024  000158  C00F  F038         	movff	?_get_next_state+1,_next+1
  2025  00015C                     i2l2367:
  2026                           
  2027                           ;interrupts.c: 96: }
  2028                           ;interrupts.c: 98: RBIF = 0;
  2029  00015C  90F2               	bcf	intcon,0,c	;volatile
  2030                           
  2031                           ;interrupts.c: 99: INTCONbits.GIE = 1;
  2032  00015E  8EF2               	bsf	intcon,7,c	;volatile
  2033                           
  2034                           ;interrupts.c: 100: }
  2035  000160  D095               	goto	i2l65
  2036  000162                     i2l41:
  2037                           
  2038                           ;interrupts.c: 101: else if (TMR0IF == 1)
  2039  000162  A4F2               	btfss	intcon,2,c	;volatile
  2040  000164  D093               	goto	i2l65
  2041                           
  2042                           ;interrupts.c: 102: {
  2043                           ;interrupts.c: 103: int i;
  2044                           ;interrupts.c: 104: for(i=0; i<6;i++)
  2045  000166  0E00               	movlw	0
  2046  000168  0100               	movlb	0	; () banked
  2047  00016A  6F9B               	movwf	(high_isr@i_136+1)& (0+255),b
  2048  00016C  0E00               	movlw	0
  2049  00016E  6F9A               	movwf	high_isr@i_136& (0+255),b
  2050  000170                     i2l2373:
  2051                           
  2052                           ; BSR set to: 0
  2053  000170  0100               	movlb	0	; () banked
  2054  000172  BF9B               	btfsc	(high_isr@i_136+1)& (0+255),7,b
  2055  000174  D008               	goto	i2l2377
  2056  000176  0100               	movlb	0	; () banked
  2057  000178  519B               	movf	(high_isr@i_136+1)& (0+255),w,b
  2058  00017A  E11B               	bnz	i2l2383
  2059  00017C  0E06               	movlw	6
  2060  00017E  0100               	movlb	0	; () banked
  2061  000180  5D9A               	subwf	high_isr@i_136& (0+255),w,b
  2062  000182  B0D8               	btfsc	status,0,c
  2063  000184  D016               	goto	i2l2383
  2064  000186                     i2l2377:
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;interrupts.c: 105: {
  2068                           ;interrupts.c: 106: masked_digits[i] = aux1[i];
  2069  000186  0EA8               	movlw	low _aux1
  2070  000188  0100               	movlb	0	; () banked
  2071  00018A  259A               	addwf	high_isr@i_136& (0+255),w,b
  2072  00018C  6ED9               	movwf	fsr2l,c
  2073  00018E  0E00               	movlw	high _aux1
  2074  000190  0100               	movlb	0	; () banked
  2075  000192  219B               	addwfc	(high_isr@i_136+1)& (0+255),w,b
  2076  000194  6EDA               	movwf	fsr2h,c
  2077  000196  0EA2               	movlw	low _masked_digits
  2078  000198  0100               	movlb	0	; () banked
  2079  00019A  259A               	addwf	high_isr@i_136& (0+255),w,b
  2080  00019C  6EE1               	movwf	fsr1l,c
  2081  00019E  0E00               	movlw	high _masked_digits
  2082  0001A0  0100               	movlb	0	; () banked
  2083  0001A2  219B               	addwfc	(high_isr@i_136+1)& (0+255),w,b
  2084  0001A4  6EE2               	movwf	fsr1h,c
  2085  0001A6  CFDF FFE7          	movff	indf2,indf1
  2086                           
  2087                           ; BSR set to: 0
  2088  0001AA  0100               	movlb	0	; () banked
  2089  0001AC  4B9A               	infsnz	high_isr@i_136& (0+255),f,b
  2090  0001AE  2B9B               	incf	(high_isr@i_136+1)& (0+255),f,b
  2091  0001B0  D7DF               	goto	i2l2373
  2092  0001B2                     i2l2383:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;interrupts.c: 107: }
  2096                           ;interrupts.c: 109: if(counter < 10 - 1)
  2097  0001B2  0E09               	movlw	9
  2098  0001B4  0100               	movlb	0	; () banked
  2099  0001B6  61AE               	cpfslt	_counter& (0+255),b
  2100  0001B8  D003               	goto	i2l2387
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;interrupts.c: 110: {
  2104                           ;interrupts.c: 111: counter = counter + 1;
  2105  0001BA  0100               	movlb	0	; () banked
  2106  0001BC  29AE               	incf	_counter& (0+255),w,b
  2107  0001BE  D001               	goto	L6
  2108  0001C0                     i2l2387:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;interrupts.c: 113: else
  2112                           ;interrupts.c: 114: {
  2113                           ;interrupts.c: 115: counter = 0;
  2114  0001C0  0E00               	movlw	0
  2115  0001C2                     L6:
  2116  0001C2  0100               	movlb	0	; () banked
  2117  0001C4  6FAE               	movwf	_counter& (0+255),b
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;interrupts.c: 116: }
  2121                           ;interrupts.c: 118: char digits[6];
  2122                           ;interrupts.c: 119: int i;
  2123                           ;interrupts.c: 121: for (i=0; i<6;i++)
  2124  0001C6  0E00               	movlw	0
  2125  0001C8  0100               	movlb	0	; () banked
  2126  0001CA  6F9B               	movwf	(high_isr@i_136+1)& (0+255),b
  2127  0001CC  0E00               	movlw	0
  2128  0001CE  6F9A               	movwf	high_isr@i_136& (0+255),b
  2129  0001D0                     i2l2389:
  2130                           
  2131                           ; BSR set to: 0
  2132  0001D0  0100               	movlb	0	; () banked
  2133  0001D2  BF9B               	btfsc	(high_isr@i_136+1)& (0+255),7,b
  2134  0001D4  D008               	goto	i2l53
  2135  0001D6  0100               	movlb	0	; () banked
  2136  0001D8  519B               	movf	(high_isr@i_136+1)& (0+255),w,b
  2137  0001DA  E10B               	bnz	i2l2397
  2138  0001DC  0E06               	movlw	6
  2139  0001DE  0100               	movlb	0	; () banked
  2140  0001E0  5D9A               	subwf	high_isr@i_136& (0+255),w,b
  2141  0001E2  B0D8               	btfsc	status,0,c
  2142  0001E4  D006               	goto	i2l2397
  2143  0001E6                     i2l53:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;interrupts.c: 122: digits[6] = i;
  2147  0001E6  C09A  F095         	movff	high_isr@i_136,high_isr@digits+6
  2148                           
  2149                           ; BSR set to: 0
  2150  0001EA  0100               	movlb	0	; () banked
  2151  0001EC  4B9A               	infsnz	high_isr@i_136& (0+255),f,b
  2152  0001EE  2B9B               	incf	(high_isr@i_136+1)& (0+255),f,b
  2153  0001F0  D7EF               	goto	i2l2389
  2154  0001F2                     i2l2397:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;interrupts.c: 124: if(counter == 0 )
  2158  0001F2  0100               	movlb	0	; () banked
  2159  0001F4  51AE               	movf	_counter& (0+255),w,b
  2160  0001F6  A4D8               	btfss	status,2,c
  2161  0001F8  D005               	goto	i2l2401
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;interrupts.c: 125: {
  2165                           ;interrupts.c: 126: point_enable();
  2166  0001FA  ECA8  F005         	call	_point_enable	;wreg free
  2167                           
  2168                           ;interrupts.c: 127: buzzer_enable();
  2169  0001FE  ECB0  F005         	call	_buzzer_enable	;wreg free
  2170                           
  2171                           ;interrupts.c: 128: }
  2172  000202  D00F               	goto	i2l2407
  2173  000204                     i2l2401:
  2174                           
  2175                           ;interrupts.c: 129: else if(counter == 5 && state == 0)
  2176  000204  0E05               	movlw	5
  2177  000206  0100               	movlb	0	; () banked
  2178  000208  19AE               	xorwf	_counter& (0+255),w,b
  2179  00020A  A4D8               	btfss	status,2,c
  2180  00020C  D00A               	goto	i2l2407
  2181                           
  2182                           ; BSR set to: 0
  2183  00020E  0100               	movlb	0	; () banked
  2184  000210  51AF               	movf	_state& (0+255),w,b
  2185  000212  0100               	movlb	0	; () banked
  2186  000214  11B0               	iorwf	(_state+1)& (0+255),w,b
  2187  000216  A4D8               	btfss	status,2,c
  2188  000218  D004               	goto	i2l2407
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;interrupts.c: 130: {
  2192                           ;interrupts.c: 131: point_disable();
  2193  00021A  ECAA  F005         	call	_point_disable	;wreg free
  2194                           
  2195                           ;interrupts.c: 132: buzzer_disable();
  2196  00021E  ECA6  F005         	call	i2_buzzer_disable	;wreg free
  2197  000222                     i2l2407:
  2198                           
  2199                           ;interrupts.c: 133: }
  2200                           ;interrupts.c: 135: if(counter >= 5)
  2201  000222  0E04               	movlw	4
  2202  000224  0100               	movlb	0	; () banked
  2203  000226  65AE               	cpfsgt	_counter& (0+255),b
  2204  000228  D026               	goto	i2l2423
  2205  00022A  D010               	goto	i2l2421
  2206  00022C                     i2l2411:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;interrupts.c: 140: masked_digits[3] = 'V';
  2210  00022C  0E56               	movlw	86
  2211  00022E  0100               	movlb	0	; () banked
  2212  000230  6FA5               	movwf	(_masked_digits+3)& (0+255),b
  2213                           
  2214                           ;interrupts.c: 141: break;
  2215  000232  D021               	goto	i2l2423
  2216  000234                     i2l2413:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;interrupts.c: 143: masked_digits[2] = 'V';
  2220  000234  0E56               	movlw	86
  2221  000236  0100               	movlb	0	; () banked
  2222  000238  6FA4               	movwf	(_masked_digits+2)& (0+255),b
  2223                           
  2224                           ;interrupts.c: 144: break;
  2225  00023A  D01D               	goto	i2l2423
  2226  00023C                     i2l2415:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;interrupts.c: 146: masked_digits[1] = 'V';
  2230  00023C  0E56               	movlw	86
  2231  00023E  0100               	movlb	0	; () banked
  2232  000240  6FA3               	movwf	(_masked_digits+1)& (0+255),b
  2233                           
  2234                           ;interrupts.c: 147: break;
  2235  000242  D019               	goto	i2l2423
  2236  000244                     i2l2417:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;interrupts.c: 149: masked_digits[0] = 'V';
  2240  000244  0E56               	movlw	86
  2241  000246  0100               	movlb	0	; () banked
  2242  000248  6FA2               	movwf	_masked_digits& (0+255),b
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;interrupts.c: 151: }
  2246                           
  2247                           ;interrupts.c: 150: break;
  2248  00024A  D015               	goto	i2l2423
  2249  00024C                     i2l2421:
  2250                           
  2251                           ; BSR set to: 0
  2252  00024C  C0AF  F015         	movff	_state,??_high_isr
  2253  000250  C0B0  F016         	movff	_state+1,??_high_isr+1
  2254                           
  2255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2256                           ; Switch size 1, requested type "space"
  2257                           ; Number of cases is 1, Range of values is 0 to 0
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte            4     3 (average)
  2261                           ;	Chosen strategy is simple_byte
  2262  000254  5016               	movf	??_high_isr+1,w,c
  2263  000256  0A00               	xorlw	0	; case 0
  2264  000258  A4D8               	btfss	status,2,c
  2265  00025A  D00D               	goto	i2l2423
  2266                           
  2267                           ; BSR set to: 0
  2268                           ; Switch size 1, requested type "space"
  2269                           ; Number of cases is 4, Range of values is 1 to 4
  2270                           ; switch strategies available:
  2271                           ; Name         Instructions Cycles
  2272                           ; simple_byte           13     7 (average)
  2273                           ;	Chosen strategy is simple_byte
  2274  00025C  5015               	movf	??_high_isr,w,c
  2275  00025E  0A01               	xorlw	1	; case 1
  2276  000260  B4D8               	btfsc	status,2,c
  2277  000262  D7E4               	goto	i2l2411
  2278  000264  0A03               	xorlw	3	; case 2
  2279  000266  B4D8               	btfsc	status,2,c
  2280  000268  D7E5               	goto	i2l2413
  2281  00026A  0A01               	xorlw	1	; case 3
  2282  00026C  B4D8               	btfsc	status,2,c
  2283  00026E  D7E6               	goto	i2l2415
  2284  000270  0A07               	xorlw	7	; case 4
  2285  000272  B4D8               	btfsc	status,2,c
  2286  000274  D7E7               	goto	i2l2417
  2287  000276                     i2l2423:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;interrupts.c: 152: }
  2291                           ;interrupts.c: 154: update_display(masked_digits, &counter);
  2292  000276  0EA2               	movlw	low _masked_digits
  2293  000278  6E0C               	movwf	update_display@digits,c
  2294  00027A  0E00               	movlw	high _masked_digits
  2295  00027C  6E0D               	movwf	update_display@digits+1,c
  2296  00027E  0EAE               	movlw	low _counter
  2297  000280  6E0E               	movwf	update_display@counter,c
  2298  000282  0E00               	movlw	high _counter
  2299  000284  6E0F               	movwf	update_display@counter+1,c
  2300  000286  EC91  F005         	call	_update_display	;wreg free
  2301                           
  2302                           ;interrupts.c: 155: TMR0IF = 0;
  2303  00028A  94F2               	bcf	intcon,2,c	;volatile
  2304  00028C                     i2l65:
  2305  00028C  C025  FFF5         	movff	??_high_isr+16,tablat
  2306  000290  C024  FFF8         	movff	??_high_isr+15,tblptru
  2307  000294  C023  FFF7         	movff	??_high_isr+14,tblptrh
  2308  000298  C022  FFF6         	movff	??_high_isr+13,tblptrl
  2309  00029C  C021  FFF4         	movff	??_high_isr+12,prodh
  2310  0002A0  C020  FFF3         	movff	??_high_isr+11,prodl
  2311  0002A4  C01F  FFDA         	movff	??_high_isr+10,fsr2h
  2312  0002A8  C01E  FFD9         	movff	??_high_isr+9,fsr2l
  2313  0002AC  C01D  FFE2         	movff	??_high_isr+8,fsr1h
  2314  0002B0  C01C  FFE1         	movff	??_high_isr+7,fsr1l
  2315  0002B4  C01B  FFEA         	movff	??_high_isr+6,fsr0h
  2316  0002B8  C01A  FFE9         	movff	??_high_isr+5,fsr0l
  2317  0002BC  C019  FFFB         	movff	??_high_isr+4,pclatu
  2318  0002C0  C018  FFFA         	movff	??_high_isr+3,pclath
  2319  0002C4  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2320  0002C6  0011               	retfie		f
  2321  0002C8                     __end_of_high_isr:
  2322                           	opt stack 0
  2323                           pclatu	equ	0xFFB
  2324                           pclath	equ	0xFFA
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           intcon	equ	0xFF2
  2332                           intcon2	equ	0xFF1
  2333                           postinc0	equ	0xFEE
  2334                           fsr0h	equ	0xFEA
  2335                           fsr0l	equ	0xFE9
  2336                           wreg	equ	0xFE8
  2337                           indf1	equ	0xFE7
  2338                           fsr1h	equ	0xFE2
  2339                           fsr1l	equ	0xFE1
  2340                           indf2	equ	0xFDF
  2341                           fsr2h	equ	0xFDA
  2342                           fsr2l	equ	0xFD9
  2343                           status	equ	0xFD8
  2344                           
  2345 ;; *************** function i2_buzzer_disable *****************
  2346 ;; Defined at:
  2347 ;;		line 137 in file "user.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		None
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_high_isr
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text13
  2375  000B4C                     __ptext13:
  2376                           	opt stack 0
  2377  000B4C                     i2_buzzer_disable:
  2378                           	opt stack 25
  2379                           
  2380                           ;user.c: 139: RB0 = 0;
  2381                           
  2382                           ;incstack = 0
  2383  000B4C  9081               	bcf	3969,0,c	;volatile
  2384  000B4E  0012               	return		;funcret
  2385  000B50                     __end_ofi2_buzzer_disable:
  2386                           	opt stack 0
  2387                           pclatu	equ	0xFFB
  2388                           pclath	equ	0xFFA
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           prodh	equ	0xFF4
  2394                           prodl	equ	0xFF3
  2395                           intcon	equ	0xFF2
  2396                           intcon2	equ	0xFF1
  2397                           postinc0	equ	0xFEE
  2398                           fsr0h	equ	0xFEA
  2399                           fsr0l	equ	0xFE9
  2400                           wreg	equ	0xFE8
  2401                           indf1	equ	0xFE7
  2402                           fsr1h	equ	0xFE2
  2403                           fsr1l	equ	0xFE1
  2404                           indf2	equ	0xFDF
  2405                           fsr2h	equ	0xFDA
  2406                           fsr2l	equ	0xFD9
  2407                           status	equ	0xFD8
  2408                           
  2409 ;; *************** function _update_display *****************
  2410 ;; Defined at:
  2411 ;;		line 431 in file "user.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  digits          2   11[COMRAM] PTR unsigned char 
  2414 ;;		 -> masked_digits(6), 
  2415 ;;  counter         2   13[COMRAM] PTR unsigned char 
  2416 ;;		 -> counter(1), 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         4       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        4 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    2
  2435 ;; This function calls:
  2436 ;;		_put_nums
  2437 ;; This function is called by:
  2438 ;;		_high_isr
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text14
  2443  000B22                     __ptext14:
  2444                           	opt stack 0
  2445  000B22                     _update_display:
  2446                           	opt stack 23
  2447                           
  2448                           ;user.c: 433: put_nums(digits);
  2449                           
  2450                           ;incstack = 0
  2451  000B22  C00C  F008         	movff	update_display@digits,put_nums@nums
  2452  000B26  C00D  F009         	movff	update_display@digits+1,put_nums@nums+1
  2453  000B2A  EC44  F005         	call	_put_nums	;wreg free
  2454  000B2E  0012               	return		;funcret
  2455  000B30                     __end_of_update_display:
  2456                           	opt stack 0
  2457                           pclatu	equ	0xFFB
  2458                           pclath	equ	0xFFA
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           intcon	equ	0xFF2
  2466                           intcon2	equ	0xFF1
  2467                           postinc0	equ	0xFEE
  2468                           fsr0h	equ	0xFEA
  2469                           fsr0l	equ	0xFE9
  2470                           wreg	equ	0xFE8
  2471                           indf1	equ	0xFE7
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           indf2	equ	0xFDF
  2475                           fsr2h	equ	0xFDA
  2476                           fsr2l	equ	0xFD9
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _put_nums *****************
  2480 ;; Defined at:
  2481 ;;		line 71 in file "user.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  nums            2    7[COMRAM] PTR unsigned char 
  2484 ;;		 -> masked_digits(6), 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  i               2    9[COMRAM] int 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2496 ;;      Params:         2       0       0       0       0       0       0       0       0
  2497 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2499 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2500 ;;Total ram usage:        4 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    1
  2503 ;; This function calls:
  2504 ;;		_get_num
  2505 ;;		_put_num
  2506 ;; This function is called by:
  2507 ;;		_update_display
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text15
  2512  000A88                     __ptext15:
  2513                           	opt stack 0
  2514  000A88                     _put_nums:
  2515                           	opt stack 23
  2516                           
  2517                           ;user.c: 73: int i;
  2518                           ;user.c: 74: for(i=0;i<6;i++)
  2519                           
  2520                           ;incstack = 0
  2521  000A88  0E00               	movlw	0
  2522  000A8A  6E0B               	movwf	put_nums@i+1,c
  2523  000A8C  0E00               	movlw	0
  2524  000A8E  6E0A               	movwf	put_nums@i,c
  2525  000A90                     i2l2063:
  2526  000A90  BE0B               	btfsc	put_nums@i+1,7,c
  2527  000A92  D006               	goto	i2l2067
  2528  000A94  500B               	movf	put_nums@i+1,w,c
  2529  000A96  E112               	bnz	i2l186
  2530  000A98  0E06               	movlw	6
  2531  000A9A  5C0A               	subwf	put_nums@i,w,c
  2532  000A9C  B0D8               	btfsc	status,0,c
  2533  000A9E  0012               	return	
  2534  000AA0                     i2l2067:
  2535                           
  2536                           ;user.c: 75: {
  2537                           ;user.c: 76: put_num(get_num(nums[i]));
  2538  000AA0  500A               	movf	put_nums@i,w,c
  2539  000AA2  2408               	addwf	put_nums@nums,w,c
  2540  000AA4  6ED9               	movwf	fsr2l,c
  2541  000AA6  500B               	movf	put_nums@i+1,w,c
  2542  000AA8  2009               	addwfc	put_nums@nums+1,w,c
  2543  000AAA  6EDA               	movwf	fsr2h,c
  2544  000AAC  50DF               	movf	indf2,w,c
  2545  000AAE  EC9C  F003         	call	_get_num
  2546  000AB2  EC83  F004         	call	_put_num
  2547  000AB6  4A0A               	infsnz	put_nums@i,f,c
  2548  000AB8  2A0B               	incf	put_nums@i+1,f,c
  2549  000ABA  D7EA               	goto	i2l2063
  2550  000ABC                     i2l186:
  2551  000ABC  0012               	return		;funcret
  2552  000ABE                     __end_of_put_nums:
  2553                           	opt stack 0
  2554                           pclatu	equ	0xFFB
  2555                           pclath	equ	0xFFA
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           prodh	equ	0xFF4
  2561                           prodl	equ	0xFF3
  2562                           intcon	equ	0xFF2
  2563                           intcon2	equ	0xFF1
  2564                           postinc0	equ	0xFEE
  2565                           fsr0h	equ	0xFEA
  2566                           fsr0l	equ	0xFE9
  2567                           wreg	equ	0xFE8
  2568                           indf1	equ	0xFE7
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           indf2	equ	0xFDF
  2572                           fsr2h	equ	0xFDA
  2573                           fsr2l	equ	0xFD9
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function _put_num *****************
  2577 ;; Defined at:
  2578 ;;		line 59 in file "user.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  num             1    wreg     unsigned char 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  num             1    2[COMRAM] unsigned char 
  2583 ;;  i               2    5[COMRAM] int 
  2584 ;;  mask            1    3[COMRAM] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0
  2595 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2596 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2597 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2598 ;;Total ram usage:        7 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_put_nums
  2604 ;;		_put_nums_individual
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text16
  2609  000906                     __ptext16:
  2610                           	opt stack 0
  2611  000906                     _put_num:
  2612                           	opt stack 23
  2613                           
  2614                           ;incstack = 0
  2615                           ;put_num@num stored from wreg
  2616  000906  6E03               	movwf	put_num@num,c
  2617                           
  2618                           ;user.c: 61: char mask = 0x01;
  2619  000908  0E01               	movlw	1
  2620  00090A  6E04               	movwf	put_num@mask,c
  2621                           
  2622                           ;user.c: 62: int i;
  2623                           ;user.c: 63: for(i= 0; i<8; i++)
  2624  00090C  0E00               	movlw	0
  2625  00090E  6E07               	movwf	put_num@i+1,c
  2626  000910  0E00               	movlw	0
  2627  000912  6E06               	movwf	put_num@i,c
  2628  000914                     i2l1887:
  2629  000914  BE07               	btfsc	put_num@i+1,7,c
  2630  000916  D006               	goto	i2l1891
  2631  000918  5007               	movf	put_num@i+1,w,c
  2632  00091A  E120               	bnz	i2l181
  2633  00091C  0E08               	movlw	8
  2634  00091E  5C06               	subwf	put_num@i,w,c
  2635  000920  B0D8               	btfsc	status,0,c
  2636  000922  0012               	return	
  2637  000924                     i2l1891:
  2638                           
  2639                           ;user.c: 64: {
  2640                           ;user.c: 65: RB3 = num>>i & mask;
  2641  000924  0E00               	movlw	0
  2642  000926  6E05               	movwf	_put_num$858,c
  2643  000928  C006  F001         	movff	put_num@i,??_put_num
  2644  00092C  C003  F002         	movff	put_num@num,??_put_num+1
  2645  000930  2A01               	incf	??_put_num,f,c
  2646  000932  D002               	goto	i2u95_44
  2647  000934                     i2u95_45:
  2648  000934  90D8               	bcf	status,0,c
  2649  000936  3202               	rrcf	??_put_num+1,f,c
  2650  000938                     i2u95_44:
  2651  000938  2E01               	decfsz	??_put_num,f,c
  2652  00093A  D7FC               	goto	i2u95_45
  2653  00093C  3002               	rrcf	??_put_num+1,w,c
  2654  00093E  B0D8               	btfsc	status,0,c
  2655  000940  A004               	btfss	put_num@mask,0,c
  2656  000942  D002               	goto	i2l1899
  2657  000944  0E01               	movlw	1
  2658  000946  6E05               	movwf	_put_num$858,c
  2659  000948                     i2l1899:
  2660  000948  B005               	btfsc	_put_num$858,0,c
  2661  00094A  D002               	bra	i2u98_45
  2662  00094C  9681               	bcf	3969,3,c	;volatile
  2663  00094E  D001               	bra	i2u98_46
  2664  000950                     i2u98_45:
  2665  000950  8681               	bsf	3969,3,c	;volatile
  2666  000952                     i2u98_46:
  2667                           
  2668                           ;user.c: 66: RB4 = 0;
  2669  000952  9881               	bcf	3969,4,c	;volatile
  2670                           
  2671                           ;user.c: 67: RB4 = 1;
  2672  000954  8881               	bsf	3969,4,c	;volatile
  2673  000956  4A06               	infsnz	put_num@i,f,c
  2674  000958  2A07               	incf	put_num@i+1,f,c
  2675  00095A  D7DC               	goto	i2l1887
  2676  00095C                     i2l181:
  2677  00095C  0012               	return		;funcret
  2678  00095E                     __end_of_put_num:
  2679                           	opt stack 0
  2680                           pclatu	equ	0xFFB
  2681                           pclath	equ	0xFFA
  2682                           tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           prodh	equ	0xFF4
  2687                           prodl	equ	0xFF3
  2688                           intcon	equ	0xFF2
  2689                           intcon2	equ	0xFF1
  2690                           postinc0	equ	0xFEE
  2691                           fsr0h	equ	0xFEA
  2692                           fsr0l	equ	0xFE9
  2693                           wreg	equ	0xFE8
  2694                           indf1	equ	0xFE7
  2695                           fsr1h	equ	0xFE2
  2696                           fsr1l	equ	0xFE1
  2697                           indf2	equ	0xFDF
  2698                           fsr2h	equ	0xFDA
  2699                           fsr2l	equ	0xFD9
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _get_num *****************
  2703 ;; Defined at:
  2704 ;;		line 90 in file "user.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  num             1    wreg     unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  num             1    0[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2721 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_put_nums
  2728 ;;		_put_nums_individual
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text17
  2733  000738                     __ptext17:
  2734                           	opt stack 0
  2735  000738                     _get_num:
  2736                           	opt stack 23
  2737                           
  2738                           ;incstack = 0
  2739                           ;get_num@num stored from wreg
  2740  000738  6E01               	movwf	get_num@num,c
  2741                           
  2742                           ;user.c: 92: switch(num)
  2743  00073A  D022               	goto	i2l1981
  2744  00073C                     i2l1911:
  2745  00073C  0E30               	movlw	48
  2746  00073E  0012               	return	
  2747  000740                     i2l1915:
  2748  000740  0E6D               	movlw	109
  2749  000742  0012               	return	
  2750  000744                     i2l1919:
  2751  000744  0E79               	movlw	121
  2752  000746  0012               	return	
  2753  000748                     i2l1923:
  2754  000748  0E33               	movlw	51
  2755  00074A  0012               	return	
  2756  00074C                     i2l1927:
  2757  00074C  0E5B               	movlw	91
  2758  00074E  0012               	return	
  2759  000750                     i2l1931:
  2760  000750  0E5F               	movlw	95
  2761  000752  0012               	return	
  2762  000754                     i2l1935:
  2763  000754  0E70               	movlw	112
  2764  000756  0012               	return	
  2765  000758                     i2l1939:
  2766  000758  0E7F               	movlw	127
  2767  00075A  0012               	return	
  2768  00075C                     i2l1943:
  2769  00075C  0E73               	movlw	115
  2770  00075E  0012               	return	
  2771  000760                     i2l1947:
  2772  000760  0E7E               	movlw	126
  2773  000762  0012               	return	
  2774  000764                     i2l1951:
  2775  000764  0E3E               	movlw	62
  2776  000766  0012               	return	
  2777  000768                     i2l1955:
  2778  000768  0E67               	movlw	103
  2779  00076A  0012               	return	
  2780  00076C                     i2l1959:
  2781  00076C  0E37               	movlw	55
  2782  00076E  0012               	return	
  2783  000770                     i2l1963:
  2784  000770  0E3D               	movlw	61
  2785  000772  0012               	return	
  2786  000774                     i2l1967:
  2787  000774  0E15               	movlw	21
  2788  000776  0012               	return	
  2789  000778                     i2l1971:
  2790  000778  0E00               	movlw	0
  2791  00077A  0012               	return	
  2792  00077C                     i2l1975:
  2793  00077C  0E7F               	movlw	127
  2794                           
  2795                           ;user.c: 111: }
  2796  00077E  0012               	return	
  2797  000780                     i2l1981:
  2798  000780  5001               	movf	get_num@num,w,c
  2799                           
  2800                           ; Switch size 1, requested type "space"
  2801                           ; Number of cases is 16, Range of values is 0 to 86
  2802                           ; switch strategies available:
  2803                           ; Name         Instructions Cycles
  2804                           ; simple_byte           49    25 (average)
  2805                           ;	Chosen strategy is simple_byte
  2806  000782  0A00               	xorlw	0	; case 0
  2807  000784  B4D8               	btfsc	status,2,c
  2808  000786  D7EC               	goto	i2l1947
  2809  000788  0A01               	xorlw	1	; case 1
  2810  00078A  B4D8               	btfsc	status,2,c
  2811  00078C  D7D7               	goto	i2l1911
  2812  00078E  0A03               	xorlw	3	; case 2
  2813  000790  B4D8               	btfsc	status,2,c
  2814  000792  D7D6               	goto	i2l1915
  2815  000794  0A01               	xorlw	1	; case 3
  2816  000796  B4D8               	btfsc	status,2,c
  2817  000798  D7D5               	goto	i2l1919
  2818  00079A  0A07               	xorlw	7	; case 4
  2819  00079C  B4D8               	btfsc	status,2,c
  2820  00079E  D7D4               	goto	i2l1923
  2821  0007A0  0A01               	xorlw	1	; case 5
  2822  0007A2  B4D8               	btfsc	status,2,c
  2823  0007A4  D7D3               	goto	i2l1927
  2824  0007A6  0A03               	xorlw	3	; case 6
  2825  0007A8  B4D8               	btfsc	status,2,c
  2826  0007AA  D7D2               	goto	i2l1931
  2827  0007AC  0A01               	xorlw	1	; case 7
  2828  0007AE  B4D8               	btfsc	status,2,c
  2829  0007B0  D7D1               	goto	i2l1935
  2830  0007B2  0A0F               	xorlw	15	; case 8
  2831  0007B4  B4D8               	btfsc	status,2,c
  2832  0007B6  D7D0               	goto	i2l1939
  2833  0007B8  0A01               	xorlw	1	; case 9
  2834  0007BA  B4D8               	btfsc	status,2,c
  2835  0007BC  D7CF               	goto	i2l1943
  2836  0007BE  0A4D               	xorlw	77	; case 68
  2837  0007C0  B4D8               	btfsc	status,2,c
  2838  0007C2  D7D6               	goto	i2l1963
  2839  0007C4  0A0C               	xorlw	12	; case 72
  2840  0007C6  B4D8               	btfsc	status,2,c
  2841  0007C8  D7D1               	goto	i2l1959
  2842  0007CA  0A06               	xorlw	6	; case 78
  2843  0007CC  B4D8               	btfsc	status,2,c
  2844  0007CE  D7D2               	goto	i2l1967
  2845  0007D0  0A1E               	xorlw	30	; case 80
  2846  0007D2  B4D8               	btfsc	status,2,c
  2847  0007D4  D7C9               	goto	i2l1955
  2848  0007D6  0A05               	xorlw	5	; case 85
  2849  0007D8  B4D8               	btfsc	status,2,c
  2850  0007DA  D7C4               	goto	i2l1951
  2851  0007DC  0A03               	xorlw	3	; case 86
  2852  0007DE  B4D8               	btfsc	status,2,c
  2853  0007E0  D7CB               	goto	i2l1971
  2854  0007E2  D7CC               	goto	i2l1975
  2855  0007E4                     __end_of_get_num:
  2856                           	opt stack 0
  2857                           pclatu	equ	0xFFB
  2858                           pclath	equ	0xFFA
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon	equ	0xFF2
  2866                           intcon2	equ	0xFF1
  2867                           postinc0	equ	0xFEE
  2868                           fsr0h	equ	0xFEA
  2869                           fsr0l	equ	0xFE9
  2870                           wreg	equ	0xFE8
  2871                           indf1	equ	0xFE7
  2872                           fsr1h	equ	0xFE2
  2873                           fsr1l	equ	0xFE1
  2874                           indf2	equ	0xFDF
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _point_enable *****************
  2880 ;; Defined at:
  2881 ;;		line 114 in file "user.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		None
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_high_isr
  2905 ;;		_point_toggle
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text18
  2910  000B50                     __ptext18:
  2911                           	opt stack 0
  2912  000B50                     _point_enable:
  2913                           	opt stack 25
  2914                           
  2915                           ;user.c: 116: RB1 = 1;
  2916                           
  2917                           ;incstack = 0
  2918  000B50  8281               	bsf	3969,1,c	;volatile
  2919  000B52  0012               	return		;funcret
  2920  000B54                     __end_of_point_enable:
  2921                           	opt stack 0
  2922                           pclatu	equ	0xFFB
  2923                           pclath	equ	0xFFA
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           prodh	equ	0xFF4
  2929                           prodl	equ	0xFF3
  2930                           intcon	equ	0xFF2
  2931                           intcon2	equ	0xFF1
  2932                           postinc0	equ	0xFEE
  2933                           fsr0h	equ	0xFEA
  2934                           fsr0l	equ	0xFE9
  2935                           wreg	equ	0xFE8
  2936                           indf1	equ	0xFE7
  2937                           fsr1h	equ	0xFE2
  2938                           fsr1l	equ	0xFE1
  2939                           indf2	equ	0xFDF
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8
  2943                           
  2944 ;; *************** function _point_disable *****************
  2945 ;; Defined at:
  2946 ;;		line 119 in file "user.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		None
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_high_isr
  2970 ;;		_point_toggle
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text19
  2975  000B54                     __ptext19:
  2976                           	opt stack 0
  2977  000B54                     _point_disable:
  2978                           	opt stack 25
  2979                           
  2980                           ;user.c: 121: RB1 = 0;
  2981                           
  2982                           ;incstack = 0
  2983  000B54  9281               	bcf	3969,1,c	;volatile
  2984  000B56  0012               	return		;funcret
  2985  000B58                     __end_of_point_disable:
  2986                           	opt stack 0
  2987                           pclatu	equ	0xFFB
  2988                           pclath	equ	0xFFA
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           prodh	equ	0xFF4
  2994                           prodl	equ	0xFF3
  2995                           intcon	equ	0xFF2
  2996                           intcon2	equ	0xFF1
  2997                           postinc0	equ	0xFEE
  2998                           fsr0h	equ	0xFEA
  2999                           fsr0l	equ	0xFE9
  3000                           wreg	equ	0xFE8
  3001                           indf1	equ	0xFE7
  3002                           fsr1h	equ	0xFE2
  3003                           fsr1l	equ	0xFE1
  3004                           indf2	equ	0xFDF
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           status	equ	0xFD8
  3008                           
  3009 ;; *************** function _ir_get_human_code *****************
  3010 ;; Defined at:
  3011 ;;		line 367 in file "user.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  code            2    0[COMRAM] int 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  human_read_c    1    4[COMRAM] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      unsigned char 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3025 ;;      Params:         2       0       0       0       0       0       0       0       0
  3026 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3027 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3028 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3029 ;;Total ram usage:        5 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_high_isr
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text20
  3039  0003FA                     __ptext20:
  3040                           	opt stack 0
  3041  0003FA                     _ir_get_human_code:
  3042                           	opt stack 25
  3043                           
  3044                           ;user.c: 369: char human_read_code;
  3045                           ;user.c: 370: switch(code)
  3046                           
  3047                           ;incstack = 0
  3048  0003FA  D035               	goto	i2l2149
  3049  0003FC                     i2l2109:
  3050                           
  3051                           ;user.c: 373: human_read_code = 10;
  3052  0003FC  0E0A               	movlw	10
  3053  0003FE  6E05               	movwf	ir_get_human_code@human_read_code,c
  3054                           
  3055                           ;user.c: 374: break;
  3056  000400  0012               	return	
  3057  000402                     i2l2111:
  3058                           
  3059                           ;user.c: 376: human_read_code = 11;
  3060  000402  0E0B               	movlw	11
  3061  000404  6E05               	movwf	ir_get_human_code@human_read_code,c
  3062                           
  3063                           ;user.c: 377: break;
  3064  000406  0012               	return	
  3065  000408                     i2l2113:
  3066                           
  3067                           ;user.c: 379: human_read_code = 12;
  3068  000408  0E0C               	movlw	12
  3069  00040A  6E05               	movwf	ir_get_human_code@human_read_code,c
  3070                           
  3071                           ;user.c: 380: break;
  3072  00040C  0012               	return	
  3073  00040E                     i2l2115:
  3074                           
  3075                           ;user.c: 382: human_read_code = 13;
  3076  00040E  0E0D               	movlw	13
  3077  000410  6E05               	movwf	ir_get_human_code@human_read_code,c
  3078                           
  3079                           ;user.c: 383: break;
  3080  000412  0012               	return	
  3081  000414                     i2l2117:
  3082                           
  3083                           ;user.c: 385: human_read_code = 14;
  3084  000414  0E0E               	movlw	14
  3085  000416  6E05               	movwf	ir_get_human_code@human_read_code,c
  3086                           
  3087                           ;user.c: 386: break;
  3088  000418  0012               	return	
  3089  00041A                     i2l2119:
  3090                           
  3091                           ;user.c: 388: human_read_code = 1;
  3092  00041A  0E01               	movlw	1
  3093  00041C  6E05               	movwf	ir_get_human_code@human_read_code,c
  3094                           
  3095                           ;user.c: 389: break;
  3096  00041E  0012               	return	
  3097  000420                     i2l2121:
  3098                           
  3099                           ;user.c: 391: human_read_code = 2;
  3100  000420  0E02               	movlw	2
  3101  000422  6E05               	movwf	ir_get_human_code@human_read_code,c
  3102                           
  3103                           ;user.c: 392: break;
  3104  000424  0012               	return	
  3105  000426                     i2l2123:
  3106                           
  3107                           ;user.c: 394: human_read_code = 3;
  3108  000426  0E03               	movlw	3
  3109  000428  6E05               	movwf	ir_get_human_code@human_read_code,c
  3110                           
  3111                           ;user.c: 395: break;
  3112  00042A  0012               	return	
  3113  00042C                     i2l2125:
  3114                           
  3115                           ;user.c: 397: human_read_code = 4;
  3116  00042C  0E04               	movlw	4
  3117  00042E  6E05               	movwf	ir_get_human_code@human_read_code,c
  3118                           
  3119                           ;user.c: 398: break;
  3120  000430  0012               	return	
  3121  000432                     i2l2127:
  3122                           
  3123                           ;user.c: 400: human_read_code = 5;
  3124  000432  0E05               	movlw	5
  3125  000434  6E05               	movwf	ir_get_human_code@human_read_code,c
  3126                           
  3127                           ;user.c: 401: break;
  3128  000436  0012               	return	
  3129  000438                     i2l2129:
  3130                           
  3131                           ;user.c: 403: human_read_code = 6;
  3132  000438  0E06               	movlw	6
  3133  00043A  6E05               	movwf	ir_get_human_code@human_read_code,c
  3134                           
  3135                           ;user.c: 404: break;
  3136  00043C  0012               	return	
  3137  00043E                     i2l2131:
  3138                           
  3139                           ;user.c: 406: human_read_code = 7;
  3140  00043E  0E07               	movlw	7
  3141  000440  6E05               	movwf	ir_get_human_code@human_read_code,c
  3142                           
  3143                           ;user.c: 407: break;
  3144  000442  0012               	return	
  3145  000444                     i2l2133:
  3146                           
  3147                           ;user.c: 409: human_read_code = 8;
  3148  000444  0E08               	movlw	8
  3149  000446  6E05               	movwf	ir_get_human_code@human_read_code,c
  3150                           
  3151                           ;user.c: 410: break;
  3152  000448  0012               	return	
  3153  00044A                     i2l2135:
  3154                           
  3155                           ;user.c: 412: human_read_code = 9;
  3156  00044A  0E09               	movlw	9
  3157  00044C  6E05               	movwf	ir_get_human_code@human_read_code,c
  3158                           
  3159                           ;user.c: 413: break;
  3160  00044E  0012               	return	
  3161  000450                     i2l2137:
  3162                           
  3163                           ;user.c: 415: human_read_code = 0;
  3164  000450  0E00               	movlw	0
  3165  000452  6E05               	movwf	ir_get_human_code@human_read_code,c
  3166                           
  3167                           ;user.c: 416: break;
  3168  000454  0012               	return	
  3169  000456                     i2l2139:
  3170                           
  3171                           ;user.c: 418: human_read_code = 15;
  3172  000456  0E0F               	movlw	15
  3173  000458  6E05               	movwf	ir_get_human_code@human_read_code,c
  3174                           
  3175                           ;user.c: 419: break;
  3176  00045A  0012               	return	
  3177  00045C                     i2l2141:
  3178                           
  3179                           ;user.c: 421: human_read_code = 16;
  3180  00045C  0E10               	movlw	16
  3181  00045E  6E05               	movwf	ir_get_human_code@human_read_code,c
  3182                           
  3183                           ;user.c: 422: break;
  3184  000460  0012               	return	
  3185  000462                     i2l2143:
  3186                           
  3187                           ;user.c: 424: return -1;
  3188  000462  0EFF               	movlw	255
  3189                           
  3190                           ;user.c: 425: }
  3191  000464  0012               	return	
  3192  000466                     i2l2149:
  3193  000466  C001  F003         	movff	ir_get_human_code@code,??_ir_get_human_code
  3194  00046A  C002  F004         	movff	ir_get_human_code@code+1,??_ir_get_human_code+1
  3195                           
  3196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 8 sub-sw
      +                          itches
  3197                           ; Switch size 1, requested type "space"
  3198                           ; Number of cases is 8, Range of values is 170 to 238
  3199                           ; switch strategies available:
  3200                           ; Name         Instructions Cycles
  3201                           ; simple_byte           25    13 (average)
  3202                           ;	Chosen strategy is simple_byte
  3203  00046E  5004               	movf	??_ir_get_human_code+1,w,c
  3204  000470  0AAA               	xorlw	170	; case 170
  3205  000472  B4D8               	btfsc	status,2,c
  3206  000474  D016               	goto	i2l3185
  3207  000476  0A01               	xorlw	1	; case 171
  3208  000478  B4D8               	btfsc	status,2,c
  3209  00047A  D01E               	goto	i2l3187
  3210  00047C  0A05               	xorlw	5	; case 174
  3211  00047E  B4D8               	btfsc	status,2,c
  3212  000480  D023               	goto	i2l3189
  3213  000482  0A14               	xorlw	20	; case 186
  3214  000484  B4D8               	btfsc	status,2,c
  3215  000486  D028               	goto	i2l3191
  3216  000488  0A01               	xorlw	1	; case 187
  3217  00048A  B4D8               	btfsc	status,2,c
  3218  00048C  D02A               	goto	i2l3193
  3219  00048E  0A51               	xorlw	81	; case 234
  3220  000490  B4D8               	btfsc	status,2,c
  3221  000492  D032               	goto	i2l3195
  3222  000494  0A01               	xorlw	1	; case 235
  3223  000496  B4D8               	btfsc	status,2,c
  3224  000498  D034               	goto	i2l3197
  3225  00049A  0A05               	xorlw	5	; case 238
  3226  00049C  B4D8               	btfsc	status,2,c
  3227  00049E  D039               	goto	i2l3199
  3228  0004A0  D7E0               	goto	i2l2143
  3229  0004A2                     i2l3185:
  3230                           
  3231                           ; Switch size 1, requested type "space"
  3232                           ; Number of cases is 3, Range of values is 186 to 238
  3233                           ; switch strategies available:
  3234                           ; Name         Instructions Cycles
  3235                           ; simple_byte           10     6 (average)
  3236                           ;	Chosen strategy is simple_byte
  3237  0004A2  5003               	movf	??_ir_get_human_code,w,c
  3238  0004A4  0ABA               	xorlw	186	; case 186
  3239  0004A6  B4D8               	btfsc	status,2,c
  3240  0004A8  D7D6               	goto	i2l2139
  3241  0004AA  0A50               	xorlw	80	; case 234
  3242  0004AC  B4D8               	btfsc	status,2,c
  3243  0004AE  D7AF               	goto	i2l2115
  3244  0004B0  0A04               	xorlw	4	; case 238
  3245  0004B2  B4D8               	btfsc	status,2,c
  3246  0004B4  D7AF               	goto	i2l2117
  3247  0004B6  D7D5               	goto	i2l2143
  3248  0004B8                     i2l3187:
  3249                           
  3250                           ; Switch size 1, requested type "space"
  3251                           ; Number of cases is 2, Range of values is 170 to 186
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte            7     4 (average)
  3255                           ;	Chosen strategy is simple_byte
  3256  0004B8  5003               	movf	??_ir_get_human_code,w,c
  3257  0004BA  0AAA               	xorlw	170	; case 170
  3258  0004BC  B4D8               	btfsc	status,2,c
  3259  0004BE  D7BF               	goto	i2l2131
  3260  0004C0  0A10               	xorlw	16	; case 186
  3261  0004C2  B4D8               	btfsc	status,2,c
  3262  0004C4  D79B               	goto	i2l2109
  3263  0004C6  D7CD               	goto	i2l2143
  3264  0004C8                     i2l3189:
  3265                           
  3266                           ; Switch size 1, requested type "space"
  3267                           ; Number of cases is 2, Range of values is 186 to 234
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            7     4 (average)
  3271                           ;	Chosen strategy is simple_byte
  3272  0004C8  5003               	movf	??_ir_get_human_code,w,c
  3273  0004CA  0ABA               	xorlw	186	; case 186
  3274  0004CC  B4D8               	btfsc	status,2,c
  3275  0004CE  D7C6               	goto	i2l2141
  3276  0004D0  0A50               	xorlw	80	; case 234
  3277  0004D2  B4D8               	btfsc	status,2,c
  3278  0004D4  D7AB               	goto	i2l2125
  3279  0004D6  D7C5               	goto	i2l2143
  3280  0004D8                     i2l3191:
  3281                           
  3282                           ; Switch size 1, requested type "space"
  3283                           ; Number of cases is 1, Range of values is 186 to 186
  3284                           ; switch strategies available:
  3285                           ; Name         Instructions Cycles
  3286                           ; simple_byte            4     3 (average)
  3287                           ;	Chosen strategy is simple_byte
  3288  0004D8  5003               	movf	??_ir_get_human_code,w,c
  3289  0004DA  0ABA               	xorlw	186	; case 186
  3290  0004DC  B4D8               	btfsc	status,2,c
  3291  0004DE  D7B8               	goto	i2l2137
  3292  0004E0  D7C0               	goto	i2l2143
  3293  0004E2                     i2l3193:
  3294                           
  3295                           ; Switch size 1, requested type "space"
  3296                           ; Number of cases is 3, Range of values is 170 to 186
  3297                           ; switch strategies available:
  3298                           ; Name         Instructions Cycles
  3299                           ; simple_byte           10     6 (average)
  3300                           ;	Chosen strategy is simple_byte
  3301  0004E2  5003               	movf	??_ir_get_human_code,w,c
  3302  0004E4  0AAA               	xorlw	170	; case 170
  3303  0004E6  B4D8               	btfsc	status,2,c
  3304  0004E8  D7A4               	goto	i2l2127
  3305  0004EA  0A04               	xorlw	4	; case 174
  3306  0004EC  B4D8               	btfsc	status,2,c
  3307  0004EE  D79B               	goto	i2l2123
  3308  0004F0  0A14               	xorlw	20	; case 186
  3309  0004F2  B4D8               	btfsc	status,2,c
  3310  0004F4  D7A1               	goto	i2l2129
  3311  0004F6  D7B5               	goto	i2l2143
  3312  0004F8                     i2l3195:
  3313                           
  3314                           ; Switch size 1, requested type "space"
  3315                           ; Number of cases is 1, Range of values is 170 to 170
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte            4     3 (average)
  3319                           ;	Chosen strategy is simple_byte
  3320  0004F8  5003               	movf	??_ir_get_human_code,w,c
  3321  0004FA  0AAA               	xorlw	170	; case 170
  3322  0004FC  B4D8               	btfsc	status,2,c
  3323  0004FE  D781               	goto	i2l2111
  3324  000500  D7B0               	goto	i2l2143
  3325  000502                     i2l3197:
  3326                           
  3327                           ; Switch size 1, requested type "space"
  3328                           ; Number of cases is 2, Range of values is 174 to 186
  3329                           ; switch strategies available:
  3330                           ; Name         Instructions Cycles
  3331                           ; simple_byte            7     4 (average)
  3332                           ;	Chosen strategy is simple_byte
  3333  000502  5003               	movf	??_ir_get_human_code,w,c
  3334  000504  0AAE               	xorlw	174	; case 174
  3335  000506  B4D8               	btfsc	status,2,c
  3336  000508  D77F               	goto	i2l2113
  3337  00050A  0A14               	xorlw	20	; case 186
  3338  00050C  B4D8               	btfsc	status,2,c
  3339  00050E  D785               	goto	i2l2119
  3340  000510  D7A8               	goto	i2l2143
  3341  000512                     i2l3199:
  3342                           
  3343                           ; Switch size 1, requested type "space"
  3344                           ; Number of cases is 3, Range of values is 174 to 234
  3345                           ; switch strategies available:
  3346                           ; Name         Instructions Cycles
  3347                           ; simple_byte           10     6 (average)
  3348                           ;	Chosen strategy is simple_byte
  3349  000512  5003               	movf	??_ir_get_human_code,w,c
  3350  000514  0AAE               	xorlw	174	; case 174
  3351  000516  B4D8               	btfsc	status,2,c
  3352  000518  D783               	goto	i2l2121
  3353  00051A  0A14               	xorlw	20	; case 186
  3354  00051C  B4D8               	btfsc	status,2,c
  3355  00051E  D795               	goto	i2l2135
  3356  000520  0A50               	xorlw	80	; case 234
  3357  000522  B4D8               	btfsc	status,2,c
  3358  000524  D78F               	goto	i2l2133
  3359  000526  D79D               	goto	i2l2143
  3360  000528                     __end_of_ir_get_human_code:
  3361                           	opt stack 0
  3362                           pclatu	equ	0xFFB
  3363                           pclath	equ	0xFFA
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           prodh	equ	0xFF4
  3369                           prodl	equ	0xFF3
  3370                           intcon	equ	0xFF2
  3371                           intcon2	equ	0xFF1
  3372                           postinc0	equ	0xFEE
  3373                           fsr0h	equ	0xFEA
  3374                           fsr0l	equ	0xFE9
  3375                           wreg	equ	0xFE8
  3376                           indf1	equ	0xFE7
  3377                           fsr1h	equ	0xFE2
  3378                           fsr1l	equ	0xFE1
  3379                           indf2	equ	0xFDF
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _get_next_state *****************
  3385 ;; Defined at:
  3386 ;;		line 330 in file "user.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  state           2   13[COMRAM] int 
  3389 ;;  code            2   15[COMRAM] int 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  hour            1   19[COMRAM] unsigned char 
  3392 ;;  minutes         1   18[COMRAM] unsigned char 
  3393 ;;  seconds         1   17[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2   13[COMRAM] int 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3403 ;;      Params:         4       0       0       0       0       0       0       0       0
  3404 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3406 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3407 ;;Total ram usage:        7 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    4
  3410 ;; This function calls:
  3411 ;;		_set_time
  3412 ;; This function is called by:
  3413 ;;		_high_isr
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text21
  3418  000528                     __ptext21:
  3419                           	opt stack 0
  3420  000528                     _get_next_state:
  3421                           	opt stack 21
  3422                           
  3423                           ;user.c: 332: if(state == 0 && code == 0xAABA)
  3424                           
  3425                           ;incstack = 0
  3426  000528  500E               	movf	get_next_state@state,w,c
  3427  00052A  100F               	iorwf	get_next_state@state+1,w,c
  3428  00052C  A4D8               	btfss	status,2,c
  3429  00052E  D007               	goto	i2l2189
  3430  000530  0EBA               	movlw	186
  3431  000532  1810               	xorwf	get_next_state@code,w,c
  3432  000534  E104               	bnz	i2l2189
  3433  000536  0EAA               	movlw	170
  3434  000538  1811               	xorwf	get_next_state@code+1,w,c
  3435  00053A  B4D8               	btfsc	status,2,c
  3436  00053C  D03B               	goto	i2l2211
  3437  00053E                     i2l2189:
  3438                           
  3439                           ;user.c: 334: else if(state == 1 && code == 0xAAEE)
  3440  00053E  040E               	decf	get_next_state@state,w,c
  3441  000540  100F               	iorwf	get_next_state@state+1,w,c
  3442  000542  A4D8               	btfss	status,2,c
  3443  000544  D00B               	goto	i2l2195
  3444  000546  0EEE               	movlw	238
  3445  000548  1810               	xorwf	get_next_state@code,w,c
  3446  00054A  E108               	bnz	i2l2195
  3447  00054C  0EAA               	movlw	170
  3448  00054E  1811               	xorwf	get_next_state@code+1,w,c
  3449  000550  A4D8               	btfss	status,2,c
  3450  000552  D004               	goto	i2l2195
  3451                           
  3452                           ;user.c: 335: next = 2;
  3453  000554  0E00               	movlw	0
  3454  000556  6E38               	movwf	_next+1,c
  3455  000558  0E02               	movlw	2
  3456  00055A  D02F               	goto	L10
  3457  00055C                     i2l2195:
  3458                           
  3459                           ;user.c: 336: else if(state == 2 && code == 0xAAEE)
  3460  00055C  0E02               	movlw	2
  3461  00055E  180E               	xorwf	get_next_state@state,w,c
  3462  000560  100F               	iorwf	get_next_state@state+1,w,c
  3463  000562  A4D8               	btfss	status,2,c
  3464  000564  D00B               	goto	i2l2201
  3465  000566  0EEE               	movlw	238
  3466  000568  1810               	xorwf	get_next_state@code,w,c
  3467  00056A  E108               	bnz	i2l2201
  3468  00056C  0EAA               	movlw	170
  3469  00056E  1811               	xorwf	get_next_state@code+1,w,c
  3470  000570  A4D8               	btfss	status,2,c
  3471  000572  D004               	goto	i2l2201
  3472                           
  3473                           ;user.c: 337: next = 3;
  3474  000574  0E00               	movlw	0
  3475  000576  6E38               	movwf	_next+1,c
  3476  000578  0E03               	movlw	3
  3477  00057A  D01F               	goto	L10
  3478  00057C                     i2l2201:
  3479                           
  3480                           ;user.c: 338: else if(state == 3 && code == 0xAAEE)
  3481  00057C  0E03               	movlw	3
  3482  00057E  180E               	xorwf	get_next_state@state,w,c
  3483  000580  100F               	iorwf	get_next_state@state+1,w,c
  3484  000582  A4D8               	btfss	status,2,c
  3485  000584  D00B               	goto	i2l2207
  3486  000586  0EEE               	movlw	238
  3487  000588  1810               	xorwf	get_next_state@code,w,c
  3488  00058A  E108               	bnz	i2l2207
  3489  00058C  0EAA               	movlw	170
  3490  00058E  1811               	xorwf	get_next_state@code+1,w,c
  3491  000590  A4D8               	btfss	status,2,c
  3492  000592  D004               	goto	i2l2207
  3493                           
  3494                           ;user.c: 339: next = 4;
  3495  000594  0E00               	movlw	0
  3496  000596  6E38               	movwf	_next+1,c
  3497  000598  0E04               	movlw	4
  3498  00059A  D00F               	goto	L10
  3499  00059C                     i2l2207:
  3500                           
  3501                           ;user.c: 340: else if(state == 4 && code == 0xAAEE)
  3502  00059C  0E04               	movlw	4
  3503  00059E  180E               	xorwf	get_next_state@state,w,c
  3504  0005A0  100F               	iorwf	get_next_state@state+1,w,c
  3505  0005A2  A4D8               	btfss	status,2,c
  3506  0005A4  D00C               	goto	i2l2213
  3507  0005A6  0EEE               	movlw	238
  3508  0005A8  1810               	xorwf	get_next_state@code,w,c
  3509  0005AA  E109               	bnz	i2l2213
  3510  0005AC  0EAA               	movlw	170
  3511  0005AE  1811               	xorwf	get_next_state@code+1,w,c
  3512  0005B0  A4D8               	btfss	status,2,c
  3513  0005B2  D005               	goto	i2l2213
  3514  0005B4                     i2l2211:
  3515                           
  3516                           ;user.c: 341: next = 1;
  3517  0005B4  0E00               	movlw	0
  3518  0005B6  6E38               	movwf	_next+1,c
  3519  0005B8  0E01               	movlw	1
  3520  0005BA                     L10:
  3521  0005BA  6E37               	movwf	_next,c
  3522  0005BC  D035               	goto	i2l295
  3523  0005BE                     i2l2213:
  3524                           
  3525                           ;user.c: 342: else if((state == 1 || state == 2 || state == 3 || state == 4) && code == 
      +                          0xAEBA)
  3526  0005BE  040E               	decf	get_next_state@state,w,c
  3527  0005C0  100F               	iorwf	get_next_state@state+1,w,c
  3528  0005C2  B4D8               	btfsc	status,2,c
  3529  0005C4  D00F               	goto	i2l2221
  3530  0005C6  0E02               	movlw	2
  3531  0005C8  180E               	xorwf	get_next_state@state,w,c
  3532  0005CA  100F               	iorwf	get_next_state@state+1,w,c
  3533  0005CC  B4D8               	btfsc	status,2,c
  3534  0005CE  D00A               	goto	i2l2221
  3535  0005D0  0E03               	movlw	3
  3536  0005D2  180E               	xorwf	get_next_state@state,w,c
  3537  0005D4  100F               	iorwf	get_next_state@state+1,w,c
  3538  0005D6  B4D8               	btfsc	status,2,c
  3539  0005D8  D005               	goto	i2l2221
  3540  0005DA  0E04               	movlw	4
  3541  0005DC  180E               	xorwf	get_next_state@state,w,c
  3542  0005DE  100F               	iorwf	get_next_state@state+1,w,c
  3543  0005E0  A4D8               	btfss	status,2,c
  3544  0005E2  D022               	goto	i2l295
  3545  0005E4                     i2l2221:
  3546  0005E4  0EBA               	movlw	186
  3547  0005E6  1810               	xorwf	get_next_state@code,w,c
  3548  0005E8  E11F               	bnz	i2l295
  3549  0005EA  0EAE               	movlw	174
  3550  0005EC  1811               	xorwf	get_next_state@code+1,w,c
  3551  0005EE  A4D8               	btfss	status,2,c
  3552  0005F0  D01B               	goto	i2l295
  3553                           
  3554                           ;user.c: 343: {
  3555                           ;user.c: 344: next = 0;
  3556  0005F2  0E00               	movlw	0
  3557  0005F4  6E38               	movwf	_next+1,c
  3558  0005F6  0E00               	movlw	0
  3559  0005F8  6E37               	movwf	_next,c
  3560                           
  3561                           ;user.c: 345: char seconds = 0;
  3562  0005FA  0E00               	movlw	0
  3563  0005FC  6E12               	movwf	get_next_state@seconds,c
  3564                           
  3565                           ;user.c: 346: char minutes = aux1[0] + aux1[1]*10;
  3566  0005FE  0100               	movlb	0	; () banked
  3567  000600  51A9               	movf	(_aux1+1)& (0+255),w,b
  3568  000602  0D0A               	mullw	10
  3569  000604  50F3               	movf	prodl,w,c
  3570  000606  0100               	movlb	0	; () banked
  3571  000608  25A8               	addwf	_aux1& (0+255),w,b
  3572  00060A  6E13               	movwf	get_next_state@minutes,c
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;user.c: 347: char hour = aux1[2] + aux1[3]*10;
  3576  00060C  0100               	movlb	0	; () banked
  3577  00060E  51AB               	movf	(_aux1+3)& (0+255),w,b
  3578  000610  0D0A               	mullw	10
  3579  000612  50F3               	movf	prodl,w,c
  3580  000614  0100               	movlb	0	; () banked
  3581  000616  25AA               	addwf	(_aux1+2)& (0+255),w,b
  3582  000618  6E14               	movwf	get_next_state@hour,c
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;user.c: 348: set_time(seconds,minutes,hour);
  3586  00061A  C013  F008         	movff	get_next_state@minutes,set_time@minutes
  3587  00061E  C014  F009         	movff	get_next_state@hour,set_time@hour
  3588  000622  5012               	movf	get_next_state@seconds,w,c
  3589  000624  EC27  F005         	call	_set_time
  3590  000628                     i2l295:
  3591                           
  3592                           ;user.c: 353: return next;
  3593  000628  C037  F00E         	movff	_next,?_get_next_state
  3594  00062C  C038  F00F         	movff	_next+1,?_get_next_state+1
  3595  000630  0012               	return		;funcret
  3596  000632                     __end_of_get_next_state:
  3597                           	opt stack 0
  3598                           pclatu	equ	0xFFB
  3599                           pclath	equ	0xFFA
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           intcon	equ	0xFF2
  3607                           intcon2	equ	0xFF1
  3608                           postinc0	equ	0xFEE
  3609                           fsr0h	equ	0xFEA
  3610                           fsr0l	equ	0xFE9
  3611                           wreg	equ	0xFE8
  3612                           indf1	equ	0xFE7
  3613                           fsr1h	equ	0xFE2
  3614                           fsr1l	equ	0xFE1
  3615                           indf2	equ	0xFDF
  3616                           fsr2h	equ	0xFDA
  3617                           fsr2l	equ	0xFD9
  3618                           status	equ	0xFD8
  3619                           
  3620 ;; *************** function _set_time *****************
  3621 ;; Defined at:
  3622 ;;		line 194 in file "user.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  seconds         1    wreg     unsigned char 
  3625 ;;  minutes         1    7[COMRAM] unsigned char 
  3626 ;;  hour            1    8[COMRAM] unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  seconds         1    9[COMRAM] unsigned char 
  3629 ;;  hour_reg        1   12[COMRAM] unsigned char 
  3630 ;;  min_reg         1   11[COMRAM] unsigned char 
  3631 ;;  sec_reg         1   10[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:         2       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        6 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    3
  3648 ;; This function calls:
  3649 ;;		_byte_write
  3650 ;;		_get_hour_reg
  3651 ;;		_get_seconds_reg
  3652 ;; This function is called by:
  3653 ;;		_get_next_state
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text22
  3658  000A4E                     __ptext22:
  3659                           	opt stack 0
  3660  000A4E                     _set_time:
  3661                           	opt stack 21
  3662                           
  3663                           ;incstack = 0
  3664                           ;set_time@seconds stored from wreg
  3665  000A4E  6E0A               	movwf	set_time@seconds,c
  3666                           
  3667                           ;user.c: 197: char sec_reg = get_seconds_reg(seconds);
  3668  000A50  500A               	movf	set_time@seconds,w,c
  3669  000A52  ECDA  F004         	call	_get_seconds_reg
  3670  000A56  6E0B               	movwf	set_time@sec_reg,c
  3671                           
  3672                           ;user.c: 198: char min_reg = get_seconds_reg(minutes);
  3673  000A58  5008               	movf	set_time@minutes,w,c
  3674  000A5A  ECDA  F004         	call	_get_seconds_reg
  3675  000A5E  6E0C               	movwf	set_time@min_reg,c
  3676                           
  3677                           ;user.c: 199: char hour_reg = get_hour_reg(hour);
  3678  000A60  5009               	movf	set_time@hour,w,c
  3679  000A62  EC5F  F005         	call	_get_hour_reg
  3680  000A66  6E0D               	movwf	set_time@hour_reg,c
  3681                           
  3682                           ;user.c: 201: byte_write(0x80,sec_reg);
  3683  000A68  C00B  F006         	movff	set_time@sec_reg,byte_write@value
  3684  000A6C  0E80               	movlw	128
  3685  000A6E  EC85  F005         	call	_byte_write
  3686                           
  3687                           ;user.c: 202: byte_write(0x82,min_reg);
  3688  000A72  C00C  F006         	movff	set_time@min_reg,byte_write@value
  3689  000A76  0E82               	movlw	130
  3690  000A78  EC85  F005         	call	_byte_write
  3691                           
  3692                           ;user.c: 203: byte_write(0x84,hour_reg);
  3693  000A7C  C00D  F006         	movff	set_time@hour_reg,byte_write@value
  3694  000A80  0E84               	movlw	132
  3695  000A82  EC85  F005         	call	_byte_write
  3696  000A86  0012               	return		;funcret
  3697  000A88                     __end_of_set_time:
  3698                           	opt stack 0
  3699                           pclatu	equ	0xFFB
  3700                           pclath	equ	0xFFA
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           intcon	equ	0xFF2
  3708                           intcon2	equ	0xFF1
  3709                           postinc0	equ	0xFEE
  3710                           fsr0h	equ	0xFEA
  3711                           fsr0l	equ	0xFE9
  3712                           wreg	equ	0xFE8
  3713                           indf1	equ	0xFE7
  3714                           fsr1h	equ	0xFE2
  3715                           fsr1l	equ	0xFE1
  3716                           indf2	equ	0xFDF
  3717                           fsr2h	equ	0xFDA
  3718                           fsr2l	equ	0xFD9
  3719                           status	equ	0xFD8
  3720                           
  3721 ;; *************** function _get_seconds_reg *****************
  3722 ;; Defined at:
  3723 ;;		line 251 in file "user.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  seconds         1    wreg     unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  seconds         1    1[COMRAM] unsigned char 
  3728 ;;  res             1    0[COMRAM] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      unsigned char 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3738 ;;      Params:         0       0       0       0       0       0       0       0       0
  3739 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3741 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3742 ;;Total ram usage:        2 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_set_time
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text23
  3752  0009B4                     __ptext23:
  3753                           	opt stack 0
  3754  0009B4                     _get_seconds_reg:
  3755                           	opt stack 23
  3756                           
  3757                           ;incstack = 0
  3758                           ;get_seconds_reg@seconds stored from wreg
  3759  0009B4  6E02               	movwf	get_seconds_reg@seconds,c
  3760                           
  3761                           ;user.c: 253: char res = 0;
  3762  0009B6  0E00               	movlw	0
  3763  0009B8  6E01               	movwf	get_seconds_reg@res,c
  3764                           
  3765                           ;user.c: 254: if(seconds<10)
  3766  0009BA  0E0A               	movlw	10
  3767  0009BC  6002               	cpfslt	get_seconds_reg@seconds,c
  3768  0009BE  D003               	goto	i2l2023
  3769                           
  3770                           ;user.c: 255: {
  3771                           ;user.c: 256: res = seconds;
  3772  0009C0  C002  F001         	movff	get_seconds_reg@seconds,get_seconds_reg@res
  3773                           
  3774                           ;user.c: 257: }
  3775  0009C4  D020               	goto	i2l2041
  3776  0009C6                     i2l2023:
  3777                           
  3778                           ;user.c: 258: else if(seconds <20)
  3779  0009C6  0E14               	movlw	20
  3780  0009C8  6002               	cpfslt	get_seconds_reg@seconds,c
  3781  0009CA  D004               	goto	i2l2027
  3782                           
  3783                           ;user.c: 259: {
  3784                           ;user.c: 260: res = 1<<4 | (seconds - 10);
  3785  0009CC  5002               	movf	get_seconds_reg@seconds,w,c
  3786  0009CE  0FF6               	addlw	246
  3787  0009D0  0910               	iorlw	16
  3788  0009D2  D018               	goto	L14
  3789  0009D4                     i2l2027:
  3790                           
  3791                           ;user.c: 262: else if(seconds <30)
  3792  0009D4  0E1E               	movlw	30
  3793  0009D6  6002               	cpfslt	get_seconds_reg@seconds,c
  3794  0009D8  D004               	goto	i2l2031
  3795                           
  3796                           ;user.c: 263: {
  3797                           ;user.c: 264: res = 2<<4 | (seconds -20);
  3798  0009DA  5002               	movf	get_seconds_reg@seconds,w,c
  3799  0009DC  0FEC               	addlw	236
  3800  0009DE  0920               	iorlw	32
  3801  0009E0  D011               	goto	L14
  3802  0009E2                     i2l2031:
  3803                           
  3804                           ;user.c: 266: else if(seconds <40)
  3805  0009E2  0E28               	movlw	40
  3806  0009E4  6002               	cpfslt	get_seconds_reg@seconds,c
  3807  0009E6  D004               	goto	i2l2035
  3808                           
  3809                           ;user.c: 267: {
  3810                           ;user.c: 268: res = 3<<4 | (seconds - 30);
  3811  0009E8  5002               	movf	get_seconds_reg@seconds,w,c
  3812  0009EA  0FE2               	addlw	226
  3813  0009EC  0930               	iorlw	48
  3814  0009EE  D00A               	goto	L14
  3815  0009F0                     i2l2035:
  3816                           
  3817                           ;user.c: 270: else if(seconds <50)
  3818  0009F0  0E32               	movlw	50
  3819  0009F2  6002               	cpfslt	get_seconds_reg@seconds,c
  3820  0009F4  D004               	goto	i2l2039
  3821                           
  3822                           ;user.c: 271: {
  3823                           ;user.c: 272: res = 4<<4 | (seconds - 40);
  3824  0009F6  5002               	movf	get_seconds_reg@seconds,w,c
  3825  0009F8  0FD8               	addlw	216
  3826  0009FA  0940               	iorlw	64
  3827  0009FC  D003               	goto	L14
  3828  0009FE                     i2l2039:
  3829                           
  3830                           ;user.c: 274: else
  3831                           ;user.c: 275: {
  3832                           ;user.c: 276: res = 5<<4 | (seconds -50);
  3833  0009FE  5002               	movf	get_seconds_reg@seconds,w,c
  3834  000A00  0FCE               	addlw	206
  3835  000A02  0950               	iorlw	80
  3836  000A04                     L14:
  3837  000A04  6E01               	movwf	get_seconds_reg@res,c
  3838  000A06                     i2l2041:
  3839                           
  3840                           ;user.c: 277: }
  3841                           ;user.c: 279: return res;
  3842  000A06  5001               	movf	get_seconds_reg@res,w,c
  3843  000A08  0012               	return	
  3844  000A0A                     __end_of_get_seconds_reg:
  3845                           	opt stack 0
  3846                           pclatu	equ	0xFFB
  3847                           pclath	equ	0xFFA
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           intcon2	equ	0xFF1
  3856                           postinc0	equ	0xFEE
  3857                           fsr0h	equ	0xFEA
  3858                           fsr0l	equ	0xFE9
  3859                           wreg	equ	0xFE8
  3860                           indf1	equ	0xFE7
  3861                           fsr1h	equ	0xFE2
  3862                           fsr1l	equ	0xFE1
  3863                           indf2	equ	0xFDF
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function _get_hour_reg *****************
  3869 ;; Defined at:
  3870 ;;		line 281 in file "user.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  hour            1    wreg     unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  hour            1    1[COMRAM] unsigned char 
  3875 ;;  res             1    0[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      unsigned char 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0
  3886 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3888 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3889 ;;Total ram usage:        2 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_set_time
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text24
  3899  000ABE                     __ptext24:
  3900                           	opt stack 0
  3901  000ABE                     _get_hour_reg:
  3902                           	opt stack 23
  3903                           
  3904                           ;incstack = 0
  3905                           ;get_hour_reg@hour stored from wreg
  3906  000ABE  6E02               	movwf	get_hour_reg@hour,c
  3907                           
  3908                           ;user.c: 283: char res = 0;
  3909  000AC0  0E00               	movlw	0
  3910  000AC2  6E01               	movwf	get_hour_reg@res,c
  3911                           
  3912                           ;user.c: 284: if(hour < 10)
  3913  000AC4  0E0A               	movlw	10
  3914  000AC6  6002               	cpfslt	get_hour_reg@hour,c
  3915  000AC8  D003               	goto	i2l2051
  3916                           
  3917                           ;user.c: 285: {
  3918                           ;user.c: 286: res = hour;
  3919  000ACA  C002  F001         	movff	get_hour_reg@hour,get_hour_reg@res
  3920                           
  3921                           ;user.c: 287: }
  3922  000ACE  D00B               	goto	i2l2057
  3923  000AD0                     i2l2051:
  3924                           
  3925                           ;user.c: 288: else if(hour < 20)
  3926  000AD0  0E14               	movlw	20
  3927  000AD2  6002               	cpfslt	get_hour_reg@hour,c
  3928  000AD4  D004               	goto	i2l2055
  3929                           
  3930                           ;user.c: 289: {
  3931                           ;user.c: 290: res = 1<<4 | (hour -10);
  3932  000AD6  5002               	movf	get_hour_reg@hour,w,c
  3933  000AD8  0FF6               	addlw	246
  3934  000ADA  0910               	iorlw	16
  3935  000ADC  D003               	goto	L15
  3936  000ADE                     i2l2055:
  3937                           
  3938                           ;user.c: 292: else
  3939                           ;user.c: 293: {
  3940                           ;user.c: 294: res = 2<<4 | (hour-20);
  3941  000ADE  5002               	movf	get_hour_reg@hour,w,c
  3942  000AE0  0FEC               	addlw	236
  3943  000AE2  0920               	iorlw	32
  3944  000AE4                     L15:
  3945  000AE4  6E01               	movwf	get_hour_reg@res,c
  3946  000AE6                     i2l2057:
  3947                           
  3948                           ;user.c: 295: }
  3949                           ;user.c: 297: return res;
  3950  000AE6  5001               	movf	get_hour_reg@res,w,c
  3951  000AE8  0012               	return	
  3952  000AEA                     __end_of_get_hour_reg:
  3953                           	opt stack 0
  3954                           pclatu	equ	0xFFB
  3955                           pclath	equ	0xFFA
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           intcon2	equ	0xFF1
  3964                           postinc0	equ	0xFEE
  3965                           fsr0h	equ	0xFEA
  3966                           fsr0l	equ	0xFE9
  3967                           wreg	equ	0xFE8
  3968                           indf1	equ	0xFE7
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           indf2	equ	0xFDF
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _byte_write *****************
  3977 ;; Defined at:
  3978 ;;		line 183 in file "user.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  address         1    wreg     unsigned char 
  3981 ;;  value           1    5[COMRAM] unsigned char 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  address         1    6[COMRAM] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3993 ;;      Params:         1       0       0       0       0       0       0       0       0
  3994 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3996 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3997 ;;Total ram usage:        2 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    2
  4000 ;; This function calls:
  4001 ;;		i2_ce_disable
  4002 ;;		i2_ce_enable
  4003 ;;		i2_send_command
  4004 ;; This function is called by:
  4005 ;;		_set_time
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text25
  4010  000B0A                     __ptext25:
  4011                           	opt stack 0
  4012  000B0A                     _byte_write:
  4013                           	opt stack 21
  4014                           
  4015                           ;incstack = 0
  4016                           ;byte_write@address stored from wreg
  4017  000B0A  6E07               	movwf	byte_write@address,c
  4018                           
  4019                           ;user.c: 185: ce_enable();
  4020  000B0C  ECAE  F005         	call	i2_ce_enable	;wreg free
  4021                           
  4022                           ;user.c: 188: send_command(address);
  4023  000B10  5007               	movf	byte_write@address,w,c
  4024  000B12  EC56  F004         	call	i2_send_command
  4025                           
  4026                           ;user.c: 189: send_command(value);
  4027  000B16  5006               	movf	byte_write@value,w,c
  4028  000B18  EC56  F004         	call	i2_send_command
  4029                           
  4030                           ;user.c: 191: ce_disable();
  4031  000B1C  EC9B  F005         	call	i2_ce_disable	;wreg free
  4032  000B20  0012               	return		;funcret
  4033  000B22                     __end_of_byte_write:
  4034                           	opt stack 0
  4035                           pclatu	equ	0xFFB
  4036                           pclath	equ	0xFFA
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           intcon2	equ	0xFF1
  4045                           postinc0	equ	0xFEE
  4046                           fsr0h	equ	0xFEA
  4047                           fsr0l	equ	0xFE9
  4048                           wreg	equ	0xFE8
  4049                           indf1	equ	0xFE7
  4050                           fsr1h	equ	0xFE2
  4051                           fsr1l	equ	0xFE1
  4052                           indf2	equ	0xFDF
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function i2_send_command *****************
  4058 ;; Defined at:
  4059 ;;		line 300 in file "user.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  command         1    wreg     unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  command         1    2[COMRAM] unsigned char 
  4064 ;;  send_command    2    3[COMRAM] int 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4074 ;;      Params:         0       0       0       0       0       0       0       0       0
  4075 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4076 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4077 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4078 ;;Total ram usage:        5 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    1
  4081 ;; This function calls:
  4082 ;;		i2_io_as_output
  4083 ;; This function is called by:
  4084 ;;		_byte_write
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text26
  4089  0008AC                     __ptext26:
  4090                           	opt stack 0
  4091  0008AC                     i2_send_command:
  4092                           	opt stack 21
  4093                           
  4094                           ;incstack = 0
  4095                           ;i2send_command@command stored from wreg
  4096  0008AC  6E03               	movwf	i2send_command@command,c
  4097                           
  4098                           ;user.c: 302: int i;
  4099                           ;user.c: 303: io_as_output();
  4100  0008AE  ECAC  F005         	call	i2_io_as_output	;wreg free
  4101                           
  4102                           ;user.c: 304: for(i=0; i<8; i++)
  4103  0008B2  0E00               	movlw	0
  4104  0008B4  6E05               	movwf	i2send_command@i+1,c
  4105  0008B6  0E00               	movlw	0
  4106  0008B8  6E04               	movwf	i2send_command@i,c
  4107  0008BA                     i2l1867:
  4108  0008BA  BE05               	btfsc	i2send_command@i+1,7,c
  4109  0008BC  D006               	goto	i2l1871
  4110  0008BE  5005               	movf	i2send_command@i+1,w,c
  4111  0008C0  E121               	bnz	i2l282
  4112  0008C2  0E08               	movlw	8
  4113  0008C4  5C04               	subwf	i2send_command@i,w,c
  4114  0008C6  B0D8               	btfsc	status,0,c
  4115  0008C8  0012               	return	
  4116  0008CA                     i2l1871:
  4117                           
  4118                           ;user.c: 305: {
  4119                           ;user.c: 306: RA3 = command>>i & 0x01;
  4120  0008CA  C004  F001         	movff	i2send_command@i,??i2_send_command
  4121  0008CE  C003  F002         	movff	i2send_command@command,??i2_send_command+1
  4122  0008D2  2A01               	incf	??i2_send_command,f,c
  4123  0008D4  D002               	goto	i2u90_44
  4124  0008D6                     i2u90_45:
  4125  0008D6  90D8               	bcf	status,0,c
  4126  0008D8  3202               	rrcf	??i2_send_command+1,f,c
  4127  0008DA                     i2u90_44:
  4128  0008DA  2E01               	decfsz	??i2_send_command,f,c
  4129  0008DC  D7FC               	goto	i2u90_45
  4130  0008DE  3002               	rrcf	??i2_send_command+1,w,c
  4131  0008E0  A0D8               	btfss	status,0,c
  4132  0008E2  D002               	goto	i2u91_40
  4133  0008E4  8680               	bsf	3968,3,c	;volatile
  4134  0008E6  D001               	goto	i2l1873
  4135  0008E8                     i2u91_40:
  4136  0008E8  9680               	bcf	3968,3,c	;volatile
  4137  0008EA                     i2l1873:
  4138                           
  4139                           ;user.c: 307: RA2 = 1;
  4140  0008EA  8480               	bsf	3968,2,c	;volatile
  4141                           
  4142                           ;user.c: 308: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  4143  0008EC  0E10               	movlw	16
  4144  0008EE                     i2u218_47:
  4145  0008EE  2EE8               	decfsz	wreg,f,c
  4146  0008F0  D7FE               	bra	i2u218_47
  4147  0008F2  D000               	nop2	
  4148                           
  4149                           ;user.c: 309: RA2 = 0;
  4150  0008F4  9480               	bcf	3968,2,c	;volatile
  4151                           
  4152                           ;user.c: 310: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  4153  0008F6  0E06               	movlw	6
  4154  0008F8                     i2u219_47:
  4155  0008F8  2EE8               	decfsz	wreg,f,c
  4156  0008FA  D7FE               	bra	i2u219_47
  4157  0008FC  D000               	nop2	
  4158  0008FE  4A04               	infsnz	i2send_command@i,f,c
  4159  000900  2A05               	incf	i2send_command@i+1,f,c
  4160  000902  D7DB               	goto	i2l1867
  4161  000904                     i2l282:
  4162  000904  0012               	return		;funcret
  4163  000906                     __end_ofi2_send_command:
  4164                           	opt stack 0
  4165                           pclatu	equ	0xFFB
  4166                           pclath	equ	0xFFA
  4167                           tblptru	equ	0xFF8
  4168                           tblptrh	equ	0xFF7
  4169                           tblptrl	equ	0xFF6
  4170                           tablat	equ	0xFF5
  4171                           prodh	equ	0xFF4
  4172                           prodl	equ	0xFF3
  4173                           intcon	equ	0xFF2
  4174                           intcon2	equ	0xFF1
  4175                           postinc0	equ	0xFEE
  4176                           fsr0h	equ	0xFEA
  4177                           fsr0l	equ	0xFE9
  4178                           wreg	equ	0xFE8
  4179                           indf1	equ	0xFE7
  4180                           fsr1h	equ	0xFE2
  4181                           fsr1l	equ	0xFE1
  4182                           indf2	equ	0xFDF
  4183                           fsr2h	equ	0xFDA
  4184                           fsr2l	equ	0xFD9
  4185                           status	equ	0xFD8
  4186                           
  4187 ;; *************** function i2_io_as_output *****************
  4188 ;; Defined at:
  4189 ;;		line 320 in file "user.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		None
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		i2_send_command
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text27
  4217  000B58                     __ptext27:
  4218                           	opt stack 0
  4219  000B58                     i2_io_as_output:
  4220                           	opt stack 21
  4221                           
  4222                           ;user.c: 322: TRISA3 = 0;
  4223                           
  4224                           ;incstack = 0
  4225  000B58  9692               	bcf	3986,3,c	;volatile
  4226  000B5A  0012               	return		;funcret
  4227  000B5C                     __end_ofi2_io_as_output:
  4228                           	opt stack 0
  4229                           pclatu	equ	0xFFB
  4230                           pclath	equ	0xFFA
  4231                           tblptru	equ	0xFF8
  4232                           tblptrh	equ	0xFF7
  4233                           tblptrl	equ	0xFF6
  4234                           tablat	equ	0xFF5
  4235                           prodh	equ	0xFF4
  4236                           prodl	equ	0xFF3
  4237                           intcon	equ	0xFF2
  4238                           intcon2	equ	0xFF1
  4239                           postinc0	equ	0xFEE
  4240                           fsr0h	equ	0xFEA
  4241                           fsr0l	equ	0xFE9
  4242                           wreg	equ	0xFE8
  4243                           indf1	equ	0xFE7
  4244                           fsr1h	equ	0xFE2
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function i2_ce_enable *****************
  4252 ;; Defined at:
  4253 ;;		line 150 in file "user.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		None
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4267 ;;      Params:         0       0       0       0       0       0       0       0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4270 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4271 ;;Total ram usage:        0 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_byte_write
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text28
  4281  000B5C                     __ptext28:
  4282                           	opt stack 0
  4283  000B5C                     i2_ce_enable:
  4284                           	opt stack 22
  4285                           
  4286                           ;user.c: 151: RA5 = 1;
  4287                           
  4288                           ;incstack = 0
  4289  000B5C  8A80               	bsf	3968,5,c	;volatile
  4290  000B5E  0012               	return		;funcret
  4291  000B60                     __end_ofi2_ce_enable:
  4292                           	opt stack 0
  4293                           pclatu	equ	0xFFB
  4294                           pclath	equ	0xFFA
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           intcon	equ	0xFF2
  4302                           intcon2	equ	0xFF1
  4303                           postinc0	equ	0xFEE
  4304                           fsr0h	equ	0xFEA
  4305                           fsr0l	equ	0xFE9
  4306                           wreg	equ	0xFE8
  4307                           indf1	equ	0xFE7
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           indf2	equ	0xFDF
  4311                           fsr2h	equ	0xFDA
  4312                           fsr2l	equ	0xFD9
  4313                           status	equ	0xFD8
  4314                           
  4315 ;; *************** function i2_ce_disable *****************
  4316 ;; Defined at:
  4317 ;;		line 153 in file "user.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		None
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4334 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4335 ;;Total ram usage:        0 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_byte_write
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text29
  4345  000B36                     __ptext29:
  4346                           	opt stack 0
  4347  000B36                     i2_ce_disable:
  4348                           	opt stack 22
  4349                           
  4350                           ;user.c: 154: RA5 = 0;
  4351                           
  4352                           ;incstack = 0
  4353  000B36  9A80               	bcf	3968,5,c	;volatile
  4354                           
  4355                           ;user.c: 155: RA2 = 0;
  4356  000B38  9480               	bcf	3968,2,c	;volatile
  4357  000B3A  0012               	return		;funcret
  4358  000B3C                     __end_ofi2_ce_disable:
  4359                           	opt stack 0
  4360                           pclatu	equ	0xFFB
  4361                           pclath	equ	0xFFA
  4362                           tblptru	equ	0xFF8
  4363                           tblptrh	equ	0xFF7
  4364                           tblptrl	equ	0xFF6
  4365                           tablat	equ	0xFF5
  4366                           prodh	equ	0xFF4
  4367                           prodl	equ	0xFF3
  4368                           intcon	equ	0xFF2
  4369                           intcon2	equ	0xFF1
  4370                           postinc0	equ	0xFEE
  4371                           fsr0h	equ	0xFEA
  4372                           fsr0l	equ	0xFE9
  4373                           wreg	equ	0xFE8
  4374                           indf1	equ	0xFE7
  4375                           fsr1h	equ	0xFE2
  4376                           fsr1l	equ	0xFE1
  4377                           indf2	equ	0xFDF
  4378                           fsr2h	equ	0xFDA
  4379                           fsr2l	equ	0xFD9
  4380                           status	equ	0xFD8
  4381                           
  4382 ;; *************** function _buzzer_enable *****************
  4383 ;; Defined at:
  4384 ;;		line 132 in file "user.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		None
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4398 ;;      Params:         0       0       0       0       0       0       0       0       0
  4399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4401 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4402 ;;Total ram usage:        0 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_high_isr
  4408 ;;		_buzzer_toggle
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text30
  4413  000B60                     __ptext30:
  4414                           	opt stack 0
  4415  000B60                     _buzzer_enable:
  4416                           	opt stack 25
  4417                           
  4418                           ;user.c: 134: RB0 = 1;
  4419                           
  4420                           ;incstack = 0
  4421  000B60  8081               	bsf	3969,0,c	;volatile
  4422  000B62  0012               	return		;funcret
  4423  000B64                     __end_of_buzzer_enable:
  4424                           	opt stack 0
  4425  0000                     pclatu	equ	0xFFB
  4426                           pclath	equ	0xFFA
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           prodh	equ	0xFF4
  4432                           prodl	equ	0xFF3
  4433                           intcon	equ	0xFF2
  4434                           intcon2	equ	0xFF1
  4435                           postinc0	equ	0xFEE
  4436                           fsr0h	equ	0xFEA
  4437                           fsr0l	equ	0xFE9
  4438                           wreg	equ	0xFE8
  4439                           indf1	equ	0xFE7
  4440                           fsr1h	equ	0xFE2
  4441                           fsr1l	equ	0xFE1
  4442                           indf2	equ	0xFDF
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           pclatu	equ	0xFFB
  4447                           pclath	equ	0xFFA
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           intcon	equ	0xFF2
  4455                           intcon2	equ	0xFF1
  4456                           postinc0	equ	0xFEE
  4457                           fsr0h	equ	0xFEA
  4458                           fsr0l	equ	0xFE9
  4459                           wreg	equ	0xFE8
  4460                           indf1	equ	0xFE7
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468                           	psect	rparam
  4469  0000                     pclatu	equ	0xFFB
  4470                           pclath	equ	0xFFA
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           prodh	equ	0xFF4
  4476                           prodl	equ	0xFF3
  4477                           intcon	equ	0xFF2
  4478                           intcon2	equ	0xFF1
  4479                           postinc0	equ	0xFEE
  4480                           fsr0h	equ	0xFEA
  4481                           fsr0l	equ	0xFE9
  4482                           wreg	equ	0xFE8
  4483                           indf1	equ	0xFE7
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           fsr2h	equ	0xFDA
  4488                           fsr2l	equ	0xFD9
  4489                           status	equ	0xFD8
  4490                           
  4491                           	psect	temp
  4492  00003A                     btemp:
  4493                           	opt stack 0
  4494  00003A                     	ds	1
  4495  0000                     int$flags	set	btemp
  4496                           pclatu	equ	0xFFB
  4497                           pclath	equ	0xFFA
  4498                           tblptru	equ	0xFF8
  4499                           tblptrh	equ	0xFF7
  4500                           tblptrl	equ	0xFF6
  4501                           tablat	equ	0xFF5
  4502                           prodh	equ	0xFF4
  4503                           prodl	equ	0xFF3
  4504                           intcon	equ	0xFF2
  4505                           intcon2	equ	0xFF1
  4506                           postinc0	equ	0xFEE
  4507                           fsr0h	equ	0xFEA
  4508                           fsr0l	equ	0xFE9
  4509                           wreg	equ	0xFE8
  4510                           indf1	equ	0xFE7
  4511                           fsr1h	equ	0xFE2
  4512                           fsr1l	equ	0xFE1
  4513                           indf2	equ	0xFDF
  4514                           fsr2h	equ	0xFDA
  4515                           fsr2l	equ	0xFD9
  4516                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      57
    BANK0           160     66      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    update_display@counter	PTR unsigned char  size(2) Largest target is 1
		 -> counter(BANK0[1]), 

    update_display@digits	PTR unsigned char  size(2) Largest target is 6
		 -> masked_digits(BANK0[6]), 

    get_time@data	PTR unsigned char  size(2) Largest target is 6
		 -> aux1(BANK0[6]), 

    put_nums@nums	PTR unsigned char  size(2) Largest target is 6
		 -> masked_digits(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_get_time
    _get_time->_byte_read
    _byte_read->_send_command

Critical Paths under _high_isr in COMRAM

    _high_isr->_get_next_state
    _update_display->_put_nums
    _put_nums->_put_num
    _get_next_state->_set_time
    _set_time->_byte_write
    _byte_write->i2_send_command

Critical Paths under _main in BANK0

    _main->_get_time

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1654
                                             63 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
                     _buzzer_disable
                           _get_time
                  _ir_is_code_number
 ---------------------------------------------------------------------------------
 (1) _ir_is_code_number                                    1     1      0     310
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             9     6      3    1304
                                             48 COMRAM     6     6      0
                                             60 BANK0      3     0      3
                          _byte_read
 ---------------------------------------------------------------------------------
 (2) _byte_read                                            6     6      0     297
                                             42 COMRAM     6     6      0
                         _ce_disable
                          _ce_enable
                        _io_as_input
                       _send_command
 ---------------------------------------------------------------------------------
 (3) _send_command                                         5     5      0     130
                                             37 COMRAM     5     5      0
                       _io_as_output
 ---------------------------------------------------------------------------------
 (4) _io_as_output                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _io_as_input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ce_enable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ce_disable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer_disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            77    77      0    2888
                                             20 COMRAM    17    17      0
                                              0 BANK0     60    60      0
                      _buzzer_enable
                     _get_next_state
                  _ir_get_human_code
                      _point_disable
                       _point_enable
                     _update_display
                   i2_buzzer_disable
 ---------------------------------------------------------------------------------
 (6) i2_buzzer_disable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _update_display                                       4     0      4     710
                                             11 COMRAM     4     0      4
                           _put_nums
 ---------------------------------------------------------------------------------
 (7) _put_nums                                             4     2      2     536
                                              7 COMRAM     4     2      2
                            _get_num
                            _put_num
 ---------------------------------------------------------------------------------
 (8) _put_num                                             17    17      0     348
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (8) _get_num                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _point_enable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _point_disable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ir_get_human_code                                    5     3      2     115
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _get_next_state                                       7     3      4    1607
                                             13 COMRAM     7     3      4
                           _set_time
 ---------------------------------------------------------------------------------
 (7) _set_time                                             6     4      2    1056
                                              7 COMRAM     6     4      2
                         _byte_write
                       _get_hour_reg
                    _get_seconds_reg
 ---------------------------------------------------------------------------------
 (8) _get_seconds_reg                                      2     2      0     271
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _get_hour_reg                                         2     2      0     136
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _byte_write                                           2     1      1     362
                                              5 COMRAM     2     1      1
                       i2_ce_disable
                        i2_ce_enable
                     i2_send_command
 ---------------------------------------------------------------------------------
 (9) i2_send_command                                       5     5      0      90
                                              0 COMRAM     5     5      0
                     i2_io_as_output
 ---------------------------------------------------------------------------------
 (10) i2_io_as_output                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_ce_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_ce_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _buzzer_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _buzzer_disable
   _get_time
     _byte_read
       _ce_disable
       _ce_enable
       _io_as_input
       _send_command
         _io_as_output
   _ir_is_code_number

 _high_isr (ROOT)
   _buzzer_enable
   _get_next_state
     _set_time
       _byte_write
         i2_ce_disable
         i2_ce_enable
         i2_send_command
           i2_io_as_output
       _get_hour_reg
       _get_seconds_reg
   _ir_get_human_code
   _point_disable
   _point_enable
   _update_display
     _put_nums
       _get_num
       _put_num
   i2_buzzer_disable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      51       5       50.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      39       1       60.6%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A      11        0.0%
DATA                 0      0      8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon May 22 02:06:45 2017

                     __CFG_BOR$ON 000000                   ??_point_disable 0001  
                     _put_num$858 0005                       __CFG_BORV$3 000000  
                  _update_display 0B22                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                       __CFG_LVP$ON 000000  
                  i2_send_command 08AC                       __CFG_WDT$ON 000000  
                             l100 037A                               l242 0810  
                             l282 08AA                      __CFG_CPB$OFF 000000  
                             _RB0 007C08                               _RA2 007C02  
                             _RB1 007C09                               _RA3 007C03  
                             _RB3 007C0B                               _RA5 007C05  
                             _RB4 007C0C                               _RB5 007C0D  
                 ?_get_next_state 000E                      __CFG_CPD$OFF 000000  
                             wreg 000FE8                      __CFG_FOSC$HS 000000  
                    ?_io_as_input 0001                       high_isr@aux 0095  
           ir_get_human_code@code 0001                  ?_get_seconds_reg 0001  
                            l2751 0870                              l2911 0314  
                            l2753 0890                              l2905 02FE  
                            l2747 0860                              l2851 06C4  
                            l2915 0322                              l2907 0308  
                            l2853 06EE                              l2845 0696  
                            l2933 0374                              l2925 0356  
                            l2917 0338                              l2927 035A  
                            l2793 084A                              l2777 0800  
                            l2881 09B0                              l2875 09AC  
                            l2939 0386                              l2949 03A4  
                            l2959 03C4                       get_time@aux 0035  
                            u2127 0814                              u2137 083E  
                            u2147 0894                              u2157 089E  
                            u1830 0828                              u1790 088E  
                            u1854 0832                              u1855 082E  
           __size_ofi2_ce_disable 0006                              u1784 0880  
                            u1848 082A                              u1785 087C  
                            _RBIF 007F90                              i2l41 0162  
                            i2l53 01E6                              i2l65 028C  
                     i2_ce_enable 0B5C                              _aux1 00A8  
                            _main 02C8                              _next 0037  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 003A                              prodh 000FF4  
                            prodl 000FF3                              start 000E  
                   __CFG_IESO$OFF 000000                    ??_get_hour_reg 0001  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                    high_isr@code 0060                   __end_of_InitApp 0A4E  
          __end_of_update_display 0B30                     ?_io_as_output 0001  
          __end_ofi2_send_command 0906       ir_is_code_number@human_code 0026  
                   __CFG_PLLDIV$1 000000                    __CFG_CCP2MX$ON 000000  
                           ?_main 0001                      get_time@data 009C  
                           _T0CON 000FD5                             i2l181 095C  
                           i2l282 0904                             i2l186 0ABC  
                           i2l295 0628                     __CFG_USBDIV$1 000000  
                    i2_ce_disable 0B36               _ConfigureOscillator 0B64  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                 __end_of_get_num 07E4                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _state 00AF  
                           pclath 000FFA                             tablat 000FF5  
                 __end_of_put_num 095E                             status 000FD8  
            ?_ConfigureOscillator 0001                  ??i2_io_as_output 0001  
                 __initialization 0AEA                     high_isr@i_136 009A  
                    __end_of_main 03FA                    ??_io_as_output 0026  
                 ?_update_display 000C                   ?i2_send_command 0001  
                          ??_main 009F                     __activetblptr 000002  
           update_display@counter 000E                            _ADCON1 000FC1  
                get_hour_reg@hour 0002                     get_time@hours 0036  
                          i2l2031 09E2                            i2l2023 09C6  
                          i2l2111 0402                            i2l2041 0A06  
                          i2l2201 057C                            i2l2121 0420  
                          i2l2113 0408                            i2l2051 0AD0  
                          i2l2035 09F0                            i2l2027 09D4  
                          i2l2211 05B4                            i2l2131 043E  
                          i2l2123 0426                            i2l2115 040E  
                          i2l2221 05E4                            i2l2213 05BE  
                          i2l2141 045C                            i2l2133 0444  
                          i2l2125 042C                            i2l2117 0414  
                          i2l2109 03FC                            i2l2055 0ADE  
                          i2l2039 09FE                            i2l2207 059C  
                          i2l2143 0462                            i2l2135 044A  
                          i2l2127 0432                            i2l2119 041A  
                          i2l2063 0A90                            i2l2057 0AE6  
                          i2l2137 0450                            i2l2129 0438  
                          i2l2401 0204                            i2l2139 0456  
                          i2l2067 0AA0                            i2l2411 022C  
                          i2l2149 0466                            i2l2413 0234  
                          i2l2421 024C                            i2l2341 008E  
                          i2l2415 023C                            i2l2423 0276  
                          i2l2407 0222                            i2l2351 00D2  
                          i2l2417 0244                            i2l2361 0124  
                          i2l2337 0078                            i2l2195 055C  
                          i2l2355 00E8                            i2l2189 053E  
                          i2l2373 0170                            i2l2349 00BE  
                          i2l3191 04D8                            i2l1911 073C  
                          i2l2383 01B2                            i2l2367 015C  
                          i2l3193 04E2                            i2l3185 04A2  
                          i2l2377 0186                            i2l3195 04F8  
                          i2l3187 04B8                            i2l1931 0750  
                          i2l1923 0748                            i2l1915 0740  
                          i2l2387 01C0                            i2l3197 0502  
                          i2l3189 04C8                            i2l2397 01F2  
                          i2l2389 01D0                            i2l1871 08CA  
                          i2l3199 0512                            i2l1951 0764  
                          i2l1943 075C                            i2l1935 0754  
                          i2l1927 074C                            i2l1919 0744  
                          i2l1873 08EA                            i2l1867 08BA  
                          i2l1971 0778                            i2l1963 0770  
                          i2l1955 0768                            i2l1947 0760  
                          i2l1939 0758                            i2l1891 0924  
                          i2l1981 0780                            i2l1975 077C  
                          i2l1967 0774                            i2l1959 076C  
                          i2l1887 0914                            i2l1899 0948  
                          _INTCON 000FF2                            _TMR0IF 007F92  
                          _TRISA2 007C92                            _TRISB1 007C99  
                          _TRISA3 007C93                            _TRISB3 007C9B  
                          _TRISA5 007C95                            _TRISB4 007C9C  
                       ??_InitApp 0026             ??_ConfigureOscillator 0026  
                  __CFG_XINST$OFF 000000                  __end_of_high_isr 02C8  
                __end_of_get_time 0738                   set_time@min_reg 000C  
                  __CFG_STVREN$ON 000000                   set_time@sec_reg 000B  
                 set_time@minutes 0008                   set_time@seconds 000A  
                          clear_0 0AF0                 _ir_get_human_code 03FA  
               ?i2_buzzer_disable 0001                         ??_get_num 0001  
              get_seconds_reg@res 0001                ?_ir_get_human_code 0001  
              ??i2_buzzer_disable 0001                  __end_of_set_time 0A88  
                   _masked_digits 00A2                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
            __end_of_get_hour_reg 0AEA                  __end_of_put_nums 0ABE  
                       ??_put_num 0001               ??_ir_get_human_code 0003  
            __size_of_io_as_input 0004                      put_nums@nums 0008  
                      __accesstop 0060           __end_of__initialization 0AFC  
                 __CFG_PBADEN$OFF 000000                  ??_buzzer_disable 0026  
                   ___rparam_used 000001                __size_of_ce_enable 0004  
                  __pcstackCOMRAM 0001         __end_of_ir_get_human_code 0528  
                ??_get_next_state 0012                    high_isr@digits 008F  
                      _ce_disable 0B30              __end_of_io_as_output 0B40  
                      __pbssBANK0 00A2                      ?i2_ce_enable 0001  
              __size_of_byte_read 006E                get_next_state@code 0010  
              get_next_state@hour 0014            __size_of_buzzer_enable 0004  
                   ?_send_command 0001                           _CCP2CON 000FBA  
                  get_time@format 009E             __end_of_point_disable 0B58  
                         _INTCON2 000FF1                 __end_of_ce_enable 0B48  
                         i2u90_44 08DA                           i2u90_45 08D6  
                         i2u91_40 08E8                           i2u95_44 0938  
                         i2u95_45 0934                           i2u98_45 0950  
                         i2u98_46 0952                           _SSPCON1 000FC6  
                       ?_high_isr 0001                         ?_get_time 009C  
                 __CFG_VREGEN$OFF 000000                           _InitApp 0A0A  
        __size_of_get_seconds_reg 0056                  ??_update_display 0010  
                         __Hparam 0000                  ??i2_send_command 0001  
                         __Lparam 0000                  byte_read@address 002D  
                       ?_set_time 0008                      byte_read@res 002E  
                get_time@aux_hour 0033                    ??_send_command 0026  
      __size_of_ir_get_human_code 012E                         ?_put_nums 0008  
                      _byte_write 0B0A                           __pcinit 0AEA  
                set_time@hour_reg 000D                           __ramtop 0800  
                         __ptext0 02C8                           __ptext1 095E  
                         __ptext2 0632                           __ptext3 07E4  
                         __ptext4 0852                           __ptext5 0B3C  
                         __ptext6 0B40                           __ptext7 0B44  
                         __ptext8 0B30                           __ptext9 0B48  
           __size_of_get_hour_reg 002C                           _get_num 0738  
                         _counter 00AE                 __end_of_byte_read 0852  
                     ?_ce_disable 0001                        _human_code 0039  
                   _buzzer_enable 0B60                           _put_num 0906  
                      ??_high_isr 0015                        ??_get_time 0031  
                  __pintcode_body 0012                     ?_point_enable 0001  
            end_of_initialization 0AFC                     __Lmediumconst 0000  
                         int_func 0012                        ??_set_time 000A  
                    _get_hour_reg 0ABE                           postinc0 000FEE  
                      ??_put_nums 000A                   byte_write@value 0006  
           __size_of_io_as_output 0004                    ?_buzzer_enable 0001  
ir_get_human_code@human_read_code 0005                    ??_point_enable 0001  
     __end_of_ConfigureOscillator 0B66                     send_command@i 0029  
       __size_ofi2_buzzer_disable 0004                        get_num@num 0001  
            __size_ofi2_ce_enable 0004                        main@format 00A1  
             __size_of_ce_disable 0006                high_isr@final_code 0096  
               ??_get_seconds_reg 0001                      _io_as_output 0B3C  
                     ?_byte_write 0006            get_seconds_reg@seconds 0002  
         __size_ofi2_io_as_output 0004               start_initialization 0AEA  
                   ??_io_as_input 0026              __end_of_send_command 08AC  
           i2send_command@command 0003              update_display@digits 000C  
                 get_hour_reg@res 0001                        byte_read@i 002F  
                __CFG_LPT1OSC$OFF 000000                       put_num@mask 0004  
                 ??_buzzer_enable 0001                     ?i2_ce_disable 0001  
                     __pbssCOMRAM 0037                     __pcstackBANK0 0060  
                       _ce_enable 0B44               __size_of_byte_write 0018  
               __size_of_high_isr 02C0               __end_of_io_as_input 0B44  
               __size_of_get_time 0106                          ?_InitApp 0001  
                       __pnvBANK0 00AF                         __pintcode 0008  
            __end_of_point_enable 0B54                 __size_of_set_time 003A  
         __size_of_buzzer_disable 0004               get_next_state@state 000E  
                        ?_get_num 0001                 __size_of_put_nums 0036  
                  ??i2_ce_disable 0001                      ??_ce_disable 0026  
         __size_of_get_next_state 010A                         _byte_read 07E4  
           get_next_state@minutes 0013             get_next_state@seconds 0012  
                        ?_put_num 0001                   get_time@minutes 0034  
                 get_time@seconds 0032                        ?_ce_enable 0001  
                i2_buzzer_disable 0B4C            __size_of_point_disable 0004  
                        i2u150_44 010C                          i2u150_45 0106  
                        i2u152_40 0132                          i2u216_47 0062  
                        i2u217_47 00AC                          i2u218_47 08EE  
                        i2u219_47 08F8                __end_of_ce_disable 0B36  
                __CFG_WDTPS$32768 000000                    i2_io_as_output 0B58  
                       high_isr@i 0098             __size_of_send_command 005A  
               _ir_is_code_number 095E                       _io_as_input 0B40  
                      ?_byte_read 0001                ?_ir_is_code_number 0001  
             send_command@command 0028                   _get_seconds_reg 09B4  
             ??_ir_is_code_number 0026                  __size_of_InitApp 0044  
                        __Hrparam 0000                          __Lrparam 0000  
                      put_num@num 0003                      _send_command 0852  
                    ??_byte_write 0007            __end_ofi2_io_as_output 0B5C  
         __size_of_update_display 000E           __size_ofi2_send_command 005A  
       __end_of_ir_is_code_number 09B4                     _point_disable 0B54  
                __size_of_get_num 00AC                          __ptext10 0A0A  
                        __ptext11 0B64                          __ptext20 03FA  
                        __ptext21 0528                          __ptext13 0B4C  
                        __ptext30 0B60                          __ptext22 0A4E  
                        __ptext14 0B22                          __ptext23 09B4  
                        __ptext15 0A88                          __ptext24 0ABE  
                        __ptext16 0906                          __ptext25 0B0A  
                        __ptext17 0738                          __ptext26 08AC  
                        __ptext18 0B50                          __ptext27 0B58  
                        __ptext19 0B54                          __ptext28 0B5C  
                        __ptext29 0B36                          _high_isr 0008  
                        _get_time 0632                  __size_of_put_num 0058  
                   ??i2_ce_enable 0001                       ??_ce_enable 0026  
                   __size_of_main 0132                __end_of_byte_write 0B22  
            __end_ofi2_ce_disable 0B3C      __size_of_ConfigureOscillator 0002  
           __size_of_point_enable 0004                          _set_time 0A4E  
                        int$flags 003A                    _buzzer_disable 0B48  
                        _put_nums 0A88                   ?i2_io_as_output 0001  
           __CFG_CPUDIV$OSC1_PLL2 000000                    ?_point_disable 0001  
                      _INTCONbits 000FF2                    _get_next_state 0528  
                    set_time@hour 0009           __end_of_get_seconds_reg 0A0A  
                     ??_byte_read 002B                         put_nums@i 000A  
                        intlevel2 0000                      _point_enable 0B50  
             __end_ofi2_ce_enable 0B60                   i2send_command@i 0004  
               byte_write@address 0007            __end_of_buzzer_disable 0B4C  
        __end_ofi2_buzzer_disable 0B50                          put_num@i 0006  
          __end_of_get_next_state 0632        __size_of_ir_is_code_number 0056  
           __end_of_buzzer_enable 0B64                     ?_get_hour_reg 0001  
                 ?_buzzer_disable 0001  
