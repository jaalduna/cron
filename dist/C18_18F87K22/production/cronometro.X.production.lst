

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon May 22 01:16:20 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.42
    47                           ; Generated 13/04/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F2550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	nvBANK0
    82  0000B1                     __pnvBANK0:
    83                           	opt stack 0
    84  0000B1                     _state:
    85                           	opt stack 0
    86  0000B1                     	ds	2
    87  0000                     _T0CON	set	4053
    88  0000                     _INTCON2	set	4081
    89  0000                     _INTCON	set	4082
    90  0000                     _ADCON1	set	4033
    91  0000                     _SSPCON1	set	4038
    92  0000                     _CCP2CON	set	4026
    93  0000                     _INTCONbits	set	4082
    94  0000                     _RA3	set	31747
    95  0000                     _RA2	set	31746
    96  0000                     _RA5	set	31749
    97  0000                     _RB0	set	31752
    98  0000                     _RB1	set	31753
    99  0000                     _RB4	set	31756
   100  0000                     _RB3	set	31755
   101  0000                     _TRISA3	set	31891
   102  0000                     _TRISA5	set	31893
   103  0000                     _TRISA2	set	31890
   104  0000                     _TRISB1	set	31897
   105  0000                     _TRISB4	set	31900
   106  0000                     _TRISB3	set	31899
   107  0000                     _TMR0IF	set	32658
   108  0000                     _RB5	set	31757
   109  0000                     _RBIF	set	32656
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  000AE4                     __pcinit:
   115                           	opt stack 0
   116  000AE4                     start_initialization:
   117                           	opt stack 0
   118  000AE4                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Clear objects allocated to BANK0 (16 bytes)
   122  000AE4  EE00  F0A1         	lfsr	0,__pbssBANK0
   123  000AE8  0E10               	movlw	16
   124  000AEA                     clear_0:
   125  000AEA  6AEE               	clrf	postinc0,c
   126  000AEC  06E8               	decf	wreg,f,c
   127  000AEE  E1FD               	bnz	clear_0
   128  000AF0                     end_of_initialization:
   129                           	opt stack 0
   130  000AF0                     __end_of__initialization:
   131                           	opt stack 0
   132  000AF0  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   133  000AF2  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   134  000AF4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   135  000AF6  6EF8               	movwf	tblptru,c
   136  000AF8  0100               	movlb	0
   137  000AFA  EF65  F001         	goto	_main	;jump to C main() function
   138                           tblptru	equ	0xFF8
   139                           postinc0	equ	0xFEE
   140                           wreg	equ	0xFE8
   141                           
   142                           	psect	bssBANK0
   143  0000A1                     __pbssBANK0:
   144                           	opt stack 0
   145  0000A1                     _next:
   146                           	opt stack 0
   147  0000A1                     	ds	2
   148  0000A3                     _human_code:
   149                           	opt stack 0
   150  0000A3                     	ds	1
   151  0000A4                     _masked_digits:
   152                           	opt stack 0
   153  0000A4                     	ds	6
   154  0000AA                     _aux1:
   155                           	opt stack 0
   156  0000AA                     	ds	6
   157  0000B0                     _counter:
   158                           	opt stack 0
   159  0000B0                     	ds	1
   160                           tblptru	equ	0xFF8
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           
   164                           	psect	cstackBANK0
   165  000060                     __pcstackBANK0:
   166                           	opt stack 0
   167  000060                     high_isr@code:
   168                           	opt stack 0
   169                           
   170                           ; 47 bytes @ 0x0
   171  000060                     	ds	47
   172  00008F                     high_isr@digits:
   173                           	opt stack 0
   174                           
   175                           ; 6 bytes @ 0x2F
   176  00008F                     	ds	6
   177  000095                     high_isr@aux:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0x35
   181  000095                     	ds	1
   182  000096                     high_isr@final_code:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x36
   186  000096                     	ds	2
   187  000098                     high_isr@i:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x38
   191  000098                     	ds	2
   192  00009A                     high_isr@i_136:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x3A
   196  00009A                     	ds	2
   197  00009C                     get_time@data:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x3C
   201  00009C                     	ds	2
   202  00009E                     get_time@format:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0x3E
   206  00009E                     	ds	1
   207  00009F                     ??_main:
   208                           
   209                           ; 1 bytes @ 0x3F
   210  00009F                     	ds	2
   211                           tblptru	equ	0xFF8
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	cstackCOMRAM
   216  000001                     __pcstackCOMRAM:
   217                           	opt stack 0
   218  000001                     ??_put_num:
   219  000001                     ??i2_send_command:
   220  000001                     get_num@num:
   221                           	opt stack 0
   222  000001                     get_seconds_reg@res:
   223                           	opt stack 0
   224  000001                     get_hour_reg@res:
   225                           	opt stack 0
   226  000001                     ir_get_human_code@code:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x0
   230  000001                     	ds	1
   231  000002                     get_seconds_reg@seconds:
   232                           	opt stack 0
   233  000002                     get_hour_reg@hour:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x1
   237  000002                     	ds	1
   238  000003                     ??_ir_get_human_code:
   239  000003                     put_num@num:
   240                           	opt stack 0
   241  000003                     i2send_command@command:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x2
   245  000003                     	ds	1
   246  000004                     put_num@mask:
   247                           	opt stack 0
   248  000004                     i2send_command@i:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x3
   252  000004                     	ds	1
   253  000005                     ir_get_human_code@human_read_code:
   254                           	opt stack 0
   255  000005                     _put_num$857:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x4
   259  000005                     	ds	1
   260  000006                     byte_write@value:
   261                           	opt stack 0
   262  000006                     put_num@i:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x5
   266  000006                     	ds	1
   267  000007                     byte_write@address:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x6
   271  000007                     	ds	1
   272  000008                     set_time@minutes:
   273                           	opt stack 0
   274  000008                     put_nums@nums:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x7
   278  000008                     	ds	1
   279  000009                     set_time@hour:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x8
   283  000009                     	ds	1
   284  00000A                     set_time@seconds:
   285                           	opt stack 0
   286  00000A                     put_nums@i:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x9
   290  00000A                     	ds	1
   291  00000B                     set_time@sec_reg:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0xA
   295  00000B                     	ds	1
   296  00000C                     set_time@min_reg:
   297                           	opt stack 0
   298  00000C                     update_display@digits:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0xB
   302  00000C                     	ds	1
   303  00000D                     set_time@hour_reg:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0xC
   307  00000D                     	ds	1
   308  00000E                     ?_get_next_state:
   309                           	opt stack 0
   310  00000E                     get_next_state@state:
   311                           	opt stack 0
   312  00000E                     update_display@counter:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0xD
   316  00000E                     	ds	2
   317  000010                     get_next_state@code:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0xF
   321  000010                     	ds	2
   322  000012                     get_next_state@seconds:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x11
   326  000012                     	ds	1
   327  000013                     get_next_state@minutes:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x12
   331  000013                     	ds	1
   332  000014                     get_next_state@hour:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x13
   336  000014                     	ds	1
   337  000015                     ??_high_isr:
   338                           
   339                           ; 1 bytes @ 0x14
   340  000015                     	ds	17
   341  000026                     ??_send_command:
   342  000026                     ir_is_code_number@human_code:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x25
   346  000026                     	ds	2
   347  000028                     send_command@command:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x27
   351  000028                     	ds	1
   352  000029                     send_command@i:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x28
   356  000029                     	ds	2
   357  00002B                     ??_byte_read:
   358                           
   359                           ; 1 bytes @ 0x2A
   360  00002B                     	ds	2
   361  00002D                     byte_read@address:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x2C
   365  00002D                     	ds	1
   366  00002E                     byte_read@res:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x2D
   370  00002E                     	ds	1
   371  00002F                     byte_read@i:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x2E
   375  00002F                     	ds	2
   376  000031                     ??_get_time:
   377                           
   378                           ; 1 bytes @ 0x30
   379  000031                     	ds	3
   380  000034                     get_time@seconds:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x33
   384  000034                     	ds	1
   385  000035                     get_time@aux_hour:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x34
   389  000035                     	ds	1
   390  000036                     get_time@minutes:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x35
   394  000036                     	ds	1
   395  000037                     get_time@aux:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x36
   399  000037                     	ds	1
   400  000038                     get_time@hours:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x37
   404  000038                     	ds	1
   405                           tblptru	equ	0xFF8
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 37 in file "main.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  temp            1    0        unsigned char 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   428 ;;      Params:         0       0       0       0       0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0       0       0
   430 ;;      Temps:          0       2       0       0       0       0       0       0       0
   431 ;;      Totals:         0       2       0       0       0       0       0       0       0
   432 ;;Total ram usage:        2 bytes
   433 ;; Hardware stack levels required when called:   10
   434 ;; This function calls:
   435 ;;		_ConfigureOscillator
   436 ;;		_InitApp
   437 ;;		_buzzer_disable
   438 ;;		_get_time
   439 ;;		_ir_is_code_number
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text0
   446  0002CA                     __ptext0:
   447                           	opt stack 0
   448  0002CA                     _main:
   449                           	opt stack 21
   450                           
   451                           ;main.c: 40: ConfigureOscillator();
   452                           
   453                           ;incstack = 0
   454  0002CA  ECAC  F005         	call	_ConfigureOscillator	;wreg free
   455                           
   456                           ;main.c: 43: InitApp();
   457  0002CE  EC01  F005         	call	_InitApp	;wreg free
   458                           
   459                           ;main.c: 48: aux1[0] = 1;
   460  0002D2  0E01               	movlw	1
   461  0002D4  0100               	movlb	0	; () banked
   462  0002D6  6FAA               	movwf	_aux1& (0+255),b
   463                           
   464                           ; BSR set to: 0
   465                           ;main.c: 49: aux1[1] = 2;
   466  0002D8  0E02               	movlw	2
   467  0002DA  0100               	movlb	0	; () banked
   468  0002DC  6FAB               	movwf	(_aux1+1)& (0+255),b
   469                           
   470                           ; BSR set to: 0
   471                           ;main.c: 50: aux1[2] = 3;
   472  0002DE  0E03               	movlw	3
   473  0002E0  0100               	movlb	0	; () banked
   474  0002E2  6FAC               	movwf	(_aux1+2)& (0+255),b
   475                           
   476                           ; BSR set to: 0
   477                           ;main.c: 51: aux1[3] = 4;
   478  0002E4  0E04               	movlw	4
   479  0002E6  0100               	movlb	0	; () banked
   480  0002E8  6FAD               	movwf	(_aux1+3)& (0+255),b
   481                           
   482                           ; BSR set to: 0
   483                           ;main.c: 52: aux1[4] = 5;
   484  0002EA  0E05               	movlw	5
   485  0002EC  0100               	movlb	0	; () banked
   486  0002EE  6FAE               	movwf	(_aux1+4)& (0+255),b
   487                           
   488                           ; BSR set to: 0
   489                           ;main.c: 53: aux1[5] = 6;
   490  0002F0  0E06               	movlw	6
   491  0002F2  0100               	movlb	0	; () banked
   492  0002F4  6FAF               	movwf	(_aux1+5)& (0+255),b
   493                           
   494                           ; BSR set to: 0
   495                           ;main.c: 55: char temp;
   496                           ;main.c: 56: buzzer_disable();
   497  0002F6  EC9E  F005         	call	_buzzer_disable	;wreg free
   498  0002FA                     l2430:
   499                           
   500                           ;main.c: 58: {
   501                           ;main.c: 59: state = next;
   502  0002FA  C0A1  F0B1         	movff	_next,_state
   503  0002FE  C0A2  F0B2         	movff	_next+1,_state+1
   504                           
   505                           ;main.c: 61: switch(state){
   506  000302  D060               	goto	l2476
   507  000304                     l2432:
   508                           
   509                           ;main.c: 64: get_time(aux1,1);
   510  000304  0EAA               	movlw	low _aux1
   511  000306  0100               	movlb	0	; () banked
   512  000308  6F9C               	movwf	get_time@data& (0+255),b
   513  00030A  0E00               	movlw	high _aux1
   514  00030C  0100               	movlb	0	; () banked
   515  00030E  6F9D               	movwf	(get_time@data+1)& (0+255),b
   516  000310  0E01               	movlw	1
   517  000312  0100               	movlb	0	; () banked
   518  000314  6F9E               	movwf	get_time@format& (0+255),b
   519  000316  EC1E  F003         	call	_get_time	;wreg free
   520                           
   521                           ;main.c: 71: break;
   522  00031A  D7EF               	goto	l2430
   523  00031C                     l2434:
   524                           
   525                           ;main.c: 75: if(ir_is_code_number(human_code) && human_code <=2)
   526  00031C  0100               	movlb	0	; () banked
   527  00031E  51A3               	movf	_human_code& (0+255),w,b
   528  000320  ECAB  F004         	call	_ir_is_code_number
   529  000324  0900               	iorlw	0
   530  000326  B4D8               	btfsc	status,2,c
   531  000328  D7E8               	goto	l2430
   532  00032A  0E03               	movlw	3
   533  00032C  0100               	movlb	0	; () banked
   534  00032E  61A3               	cpfslt	_human_code& (0+255),b
   535  000330  D7E4               	goto	l2430
   536                           
   537                           ; BSR set to: 0
   538                           ;main.c: 76: {
   539                           ;main.c: 77: aux1[3] = human_code;
   540  000332  C0A3  F0AD         	movff	_human_code,_aux1+3
   541                           
   542                           ; BSR set to: 0
   543                           ;main.c: 78: next = 2;
   544  000336  0E00               	movlw	0
   545  000338  0100               	movlb	0	; () banked
   546  00033A  6FA2               	movwf	(_next+1)& (0+255),b
   547  00033C  0E02               	movlw	2
   548  00033E  D040               	goto	L3
   549  000340                     l2442:
   550                           
   551                           ; BSR set to: 0
   552                           ;main.c: 79: human_code = -1;
   553  000340  0100               	movlb	0	; () banked
   554  000342  69A3               	setf	_human_code& (0+255),b
   555                           
   556                           ; BSR set to: 0
   557                           ;main.c: 80: }
   558                           ;main.c: 81: break;
   559  000344  D7DA               	goto	l2430
   560  000346                     l2444:
   561                           
   562                           ; BSR set to: 0
   563                           ;main.c: 84: if(ir_is_code_number(human_code) && ((aux1[2]<2 && human_code <=9) || human
      +                          _code <=3))
   564  000346  0100               	movlb	0	; () banked
   565  000348  51A3               	movf	_human_code& (0+255),w,b
   566  00034A  ECAB  F004         	call	_ir_is_code_number
   567  00034E  0900               	iorlw	0
   568  000350  B4D8               	btfsc	status,2,c
   569  000352  D7D3               	goto	l2430
   570  000354  0E02               	movlw	2
   571  000356  0100               	movlb	0	; () banked
   572  000358  61AC               	cpfslt	(_aux1+2)& (0+255),b
   573  00035A  D004               	goto	l2450
   574                           
   575                           ; BSR set to: 0
   576  00035C  0E09               	movlw	9
   577  00035E  0100               	movlb	0	; () banked
   578  000360  65A3               	cpfsgt	_human_code& (0+255),b
   579  000362  D004               	goto	l97
   580  000364                     l2450:
   581                           
   582                           ; BSR set to: 0
   583  000364  0E04               	movlw	4
   584  000366  0100               	movlb	0	; () banked
   585  000368  61A3               	cpfslt	_human_code& (0+255),b
   586  00036A  D7C7               	goto	l2430
   587  00036C                     l97:
   588                           
   589                           ; BSR set to: 0
   590                           ;main.c: 85: {
   591                           ;main.c: 86: aux1[2] = human_code;
   592  00036C  C0A3  F0AC         	movff	_human_code,_aux1+2
   593                           
   594                           ; BSR set to: 0
   595                           ;main.c: 87: next = 3;
   596  000370  0E00               	movlw	0
   597  000372  0100               	movlb	0	; () banked
   598  000374  6FA2               	movwf	(_next+1)& (0+255),b
   599  000376  0E03               	movlw	3
   600  000378  D023               	goto	L3
   601  00037A                     l2456:
   602                           
   603                           ; BSR set to: 0
   604                           ;main.c: 93: if(ir_is_code_number(human_code) && human_code <=5)
   605  00037A  0100               	movlb	0	; () banked
   606  00037C  51A3               	movf	_human_code& (0+255),w,b
   607  00037E  ECAB  F004         	call	_ir_is_code_number
   608  000382  0900               	iorlw	0
   609  000384  B4D8               	btfsc	status,2,c
   610  000386  D7B9               	goto	l2430
   611  000388  0E06               	movlw	6
   612  00038A  0100               	movlb	0	; () banked
   613  00038C  61A3               	cpfslt	_human_code& (0+255),b
   614  00038E  D7B5               	goto	l2430
   615                           
   616                           ; BSR set to: 0
   617                           ;main.c: 94: {
   618                           ;main.c: 95: aux1[1] = human_code;
   619  000390  C0A3  F0AB         	movff	_human_code,_aux1+1
   620                           
   621                           ; BSR set to: 0
   622                           ;main.c: 96: next = 4;
   623  000394  0E00               	movlw	0
   624  000396  0100               	movlb	0	; () banked
   625  000398  6FA2               	movwf	(_next+1)& (0+255),b
   626  00039A  0E04               	movlw	4
   627  00039C  D011               	goto	L3
   628  00039E                     l2466:
   629                           
   630                           ; BSR set to: 0
   631                           ;main.c: 101: if(ir_is_code_number(human_code) && human_code <=9)
   632  00039E  0100               	movlb	0	; () banked
   633  0003A0  51A3               	movf	_human_code& (0+255),w,b
   634  0003A2  ECAB  F004         	call	_ir_is_code_number
   635  0003A6  0900               	iorlw	0
   636  0003A8  B4D8               	btfsc	status,2,c
   637  0003AA  D7A7               	goto	l2430
   638  0003AC  0E0A               	movlw	10
   639  0003AE  0100               	movlb	0	; () banked
   640  0003B0  61A3               	cpfslt	_human_code& (0+255),b
   641  0003B2  D7A3               	goto	l2430
   642                           
   643                           ; BSR set to: 0
   644                           ;main.c: 102: {
   645                           ;main.c: 103: aux1[0] = human_code;
   646  0003B4  C0A3  F0AA         	movff	_human_code,_aux1
   647                           
   648                           ; BSR set to: 0
   649                           ;main.c: 104: next = 1;
   650  0003B8  0E00               	movlw	0
   651  0003BA  0100               	movlb	0	; () banked
   652  0003BC  6FA2               	movwf	(_next+1)& (0+255),b
   653  0003BE  0E01               	movlw	1
   654  0003C0                     L3:
   655  0003C0  6FA1               	movwf	_next& (0+255),b
   656  0003C2  D7BE               	goto	l2442
   657  0003C4                     l2476:
   658  0003C4  C0B1  F09F         	movff	_state,??_main
   659  0003C8  C0B2  F0A0         	movff	_state+1,??_main+1
   660                           
   661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   662                           ; Switch size 1, requested type "space"
   663                           ; Number of cases is 1, Range of values is 0 to 0
   664                           ; switch strategies available:
   665                           ; Name         Instructions Cycles
   666                           ; simple_byte            4     3 (average)
   667                           ;	Chosen strategy is simple_byte
   668  0003CC  0100               	movlb	0	; () banked
   669  0003CE  51A0               	movf	(??_main+1)& (0+255),w,b
   670  0003D0  0A00               	xorlw	0	; case 0
   671  0003D2  A4D8               	btfss	status,2,c
   672  0003D4  D792               	goto	l2430
   673                           
   674                           ; BSR set to: 0
   675                           ; Switch size 1, requested type "space"
   676                           ; Number of cases is 5, Range of values is 0 to 4
   677                           ; switch strategies available:
   678                           ; Name         Instructions Cycles
   679                           ; simple_byte           16     9 (average)
   680                           ;	Chosen strategy is simple_byte
   681  0003D6  0100               	movlb	0	; () banked
   682  0003D8  519F               	movf	??_main& (0+255),w,b
   683  0003DA  0A00               	xorlw	0	; case 0
   684  0003DC  B4D8               	btfsc	status,2,c
   685  0003DE  D792               	goto	l2432
   686  0003E0  0A01               	xorlw	1	; case 1
   687  0003E2  B4D8               	btfsc	status,2,c
   688  0003E4  D79B               	goto	l2434
   689  0003E6  0A03               	xorlw	3	; case 2
   690  0003E8  B4D8               	btfsc	status,2,c
   691  0003EA  D7AD               	goto	l2444
   692  0003EC  0A01               	xorlw	1	; case 3
   693  0003EE  B4D8               	btfsc	status,2,c
   694  0003F0  D7C4               	goto	l2456
   695  0003F2  0A07               	xorlw	7	; case 4
   696  0003F4  B4D8               	btfsc	status,2,c
   697  0003F6  D7D3               	goto	l2466
   698                           
   699                           ; BSR set to: 0
   700                           
   701                           ; BSR set to: 0
   702  0003F8  D780               	goto	l2430
   703  0003FA                     __end_of_main:
   704                           	opt stack 0
   705                           tblptru	equ	0xFF8
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           status	equ	0xFD8
   709                           
   710 ;; *************** function _ir_is_code_number *****************
   711 ;; Defined at:
   712 ;;		line 356 in file "user.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  human_code      1    wreg     unsigned char 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  human_code      1   37[COMRAM] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      unsigned char 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   726 ;;      Params:         0       0       0       0       0       0       0       0       0
   727 ;;      Locals:         1       0       0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0
   729 ;;      Totals:         1       0       0       0       0       0       0       0       0
   730 ;;Total ram usage:        1 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    6
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text1
   741  000956                     __ptext1:
   742                           	opt stack 0
   743  000956                     _ir_is_code_number:
   744                           	opt stack 24
   745                           
   746                           ; BSR set to: 0
   747                           ;incstack = 0
   748                           ;ir_is_code_number@human_code stored from wreg
   749  000956  6E26               	movwf	ir_is_code_number@human_code,c
   750                           
   751                           ;user.c: 358: if(human_code == 0 || human_code == 1 || human_code == 2 || human_code == 
      +                          3 || human_code == 4
   752                           ;user.c: 359: || human_code == 5 || human_code == 6 || human_code == 7 || human_code == 
      +                          8 || human_code == 9)
   753  000958  5026               	movf	ir_is_code_number@human_code,w,c
   754  00095A  B4D8               	btfsc	status,2,c
   755  00095C  D023               	goto	l2294
   756  00095E  0426               	decf	ir_is_code_number@human_code,w,c
   757  000960  B4D8               	btfsc	status,2,c
   758  000962  D020               	goto	l2294
   759  000964  0E02               	movlw	2
   760  000966  1826               	xorwf	ir_is_code_number@human_code,w,c
   761  000968  B4D8               	btfsc	status,2,c
   762  00096A  D01C               	goto	l2294
   763  00096C  0E03               	movlw	3
   764  00096E  1826               	xorwf	ir_is_code_number@human_code,w,c
   765  000970  B4D8               	btfsc	status,2,c
   766  000972  D018               	goto	l2294
   767  000974  0E04               	movlw	4
   768  000976  1826               	xorwf	ir_is_code_number@human_code,w,c
   769  000978  B4D8               	btfsc	status,2,c
   770  00097A  D014               	goto	l2294
   771  00097C  0E05               	movlw	5
   772  00097E  1826               	xorwf	ir_is_code_number@human_code,w,c
   773  000980  B4D8               	btfsc	status,2,c
   774  000982  D010               	goto	l2294
   775  000984  0E06               	movlw	6
   776  000986  1826               	xorwf	ir_is_code_number@human_code,w,c
   777  000988  B4D8               	btfsc	status,2,c
   778  00098A  D00C               	goto	l2294
   779  00098C  0E07               	movlw	7
   780  00098E  1826               	xorwf	ir_is_code_number@human_code,w,c
   781  000990  B4D8               	btfsc	status,2,c
   782  000992  D008               	goto	l2294
   783  000994  0E08               	movlw	8
   784  000996  1826               	xorwf	ir_is_code_number@human_code,w,c
   785  000998  B4D8               	btfsc	status,2,c
   786  00099A  D004               	goto	l2294
   787  00099C  0E09               	movlw	9
   788  00099E  1826               	xorwf	ir_is_code_number@human_code,w,c
   789  0009A0  A4D8               	btfss	status,2,c
   790  0009A2  D002               	goto	l2300
   791  0009A4                     l2294:
   792                           
   793                           ;user.c: 360: return 1;
   794  0009A4  0E01               	movlw	1
   795  0009A6  0012               	return	
   796  0009A8                     l2300:
   797                           
   798                           ;user.c: 361: else
   799                           ;user.c: 362: return 0;
   800  0009A8  0E00               	movlw	0
   801  0009AA  0012               	return	
   802  0009AC                     __end_of_ir_is_code_number:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function _get_time *****************
   810 ;; Defined at:
   811 ;;		line 208 in file "user.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  data            2   60[BANK0 ] PTR unsigned char 
   814 ;;		 -> aux1(6), 
   815 ;;  format          1   62[BANK0 ] unsigned char 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  aux_hour        1   52[COMRAM] unsigned char 
   818 ;;  hours           1   55[COMRAM] unsigned char 
   819 ;;  aux             1   54[COMRAM] unsigned char 
   820 ;;  minutes         1   53[COMRAM] unsigned char 
   821 ;;  seconds         1   51[COMRAM] unsigned char 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   831 ;;      Params:         0       3       0       0       0       0       0       0       0
   832 ;;      Locals:         5       0       0       0       0       0       0       0       0
   833 ;;      Temps:          3       0       0       0       0       0       0       0       0
   834 ;;      Totals:         8       3       0       0       0       0       0       0       0
   835 ;;Total ram usage:       11 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    9
   838 ;; This function calls:
   839 ;;		_byte_read
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text2
   846  00063C                     __ptext2:
   847                           	opt stack 0
   848  00063C                     _get_time:
   849                           	opt stack 21
   850                           
   851                           ;user.c: 210: char aux = 0x81;
   852                           
   853                           ;incstack = 0
   854  00063C  0E81               	movlw	129
   855  00063E  6E37               	movwf	get_time@aux,c
   856                           
   857                           ;user.c: 211: char seconds = byte_read(aux);
   858  000640  5037               	movf	get_time@aux,w,c
   859  000642  ECEE  F003         	call	_byte_read
   860  000646  6E34               	movwf	get_time@seconds,c
   861                           
   862                           ;user.c: 212: aux = 0x83;
   863  000648  0E83               	movlw	131
   864  00064A  6E37               	movwf	get_time@aux,c
   865                           
   866                           ;user.c: 213: char minutes = byte_read(aux);
   867  00064C  5037               	movf	get_time@aux,w,c
   868  00064E  ECEE  F003         	call	_byte_read
   869  000652  6E36               	movwf	get_time@minutes,c
   870                           
   871                           ;user.c: 214: aux = 0x85;
   872  000654  0E85               	movlw	133
   873  000656  6E37               	movwf	get_time@aux,c
   874                           
   875                           ;user.c: 215: char hours = byte_read(aux);
   876  000658  5037               	movf	get_time@aux,w,c
   877  00065A  ECEE  F003         	call	_byte_read
   878  00065E  6E38               	movwf	get_time@hours,c
   879                           
   880                           ;user.c: 218: data[0] = minutes & 0x0f;
   881  000660  5036               	movf	get_time@minutes,w,c
   882  000662  0B0F               	andlw	15
   883  000664  C09C  FFD9         	movff	get_time@data,fsr2l
   884  000668  C09D  FFDA         	movff	get_time@data+1,fsr2h
   885  00066C  6EDF               	movwf	indf2,c
   886                           
   887                           ;user.c: 219: data[1] = (minutes & 0xf0)>>4;
   888  00066E  0100               	movlb	0	; () banked
   889  000670  EE20 F001          	lfsr	2,1
   890  000674  519C               	movf	get_time@data& (0+255),w,b
   891  000676  26D9               	addwf	fsr2l,f,c
   892  000678  519D               	movf	(get_time@data+1)& (0+255),w,b
   893  00067A  22DA               	addwfc	fsr2h,f,c
   894  00067C  3836               	swapf	get_time@minutes,w,c
   895  00067E  0B0F               	andlw	15
   896  000680  0B0F               	andlw	15
   897  000682  6EDF               	movwf	indf2,c
   898                           
   899                           ; BSR set to: 0
   900                           ;user.c: 221: if(format == 1)
   901  000684  0100               	movlb	0	; () banked
   902  000686  059E               	decf	get_time@format& (0+255),w,b
   903  000688  A4D8               	btfss	status,2,c
   904  00068A  D00A               	goto	l2268
   905                           
   906                           ; BSR set to: 0
   907                           ;user.c: 222: {
   908                           ;user.c: 224: data[4] = 1;
   909  00068C  0100               	movlb	0	; () banked
   910  00068E  EE20 F004          	lfsr	2,4
   911  000692  519C               	movf	get_time@data& (0+255),w,b
   912  000694  26D9               	addwf	fsr2l,f,c
   913  000696  519D               	movf	(get_time@data+1)& (0+255),w,b
   914  000698  22DA               	addwfc	fsr2h,f,c
   915  00069A  0E01               	movlw	1
   916  00069C  6EDF               	movwf	indf2,c
   917  00069E  D015               	goto	l2270
   918  0006A0                     l2268:
   919                           
   920                           ; BSR set to: 0
   921                           ;user.c: 229: else
   922                           ;user.c: 230: {
   923                           ;user.c: 231: char aux_hour =hours & 0x0f + (hours &0xf0)>>4;
   924  0006A0  5038               	movf	get_time@hours,w,c
   925  0006A2  0BF0               	andlw	240
   926  0006A4  6E31               	movwf	??_get_time& (0+255),c
   927  0006A6  6A32               	clrf	(??_get_time+1)& (0+255),c
   928  0006A8  0E0F               	movlw	15
   929  0006AA  2631               	addwf	??_get_time,f,c
   930  0006AC  0E00               	movlw	0
   931  0006AE  2232               	addwfc	??_get_time+1,f,c
   932  0006B0  0E04               	movlw	4
   933  0006B2  6E33               	movwf	(??_get_time+2)& (0+255),c
   934  0006B4                     u1345:
   935  0006B4  3432               	rlcf	??_get_time+1,w,c
   936  0006B6  3232               	rrcf	??_get_time+1,f,c
   937  0006B8  3231               	rrcf	??_get_time,f,c
   938  0006BA  2E33               	decfsz	(??_get_time+2)& (0+255),f,c
   939  0006BC  D7FB               	goto	u1345
   940  0006BE  5031               	movf	??_get_time,w,c
   941  0006C0  1438               	andwf	get_time@hours,w,c
   942  0006C2  6E35               	movwf	get_time@aux_hour,c
   943                           
   944                           ;user.c: 232: if(aux_hour<=12)
   945  0006C4  0E0D               	movlw	13
   946  0006C6  6035               	cpfslt	get_time@aux_hour,c
   947  0006C8  D015               	goto	l2272
   948  0006CA                     l2270:
   949                           
   950                           ; BSR set to: 0
   951                           ;user.c: 233: {
   952                           ;user.c: 234: data[2] = hours & 0x0f;
   953  0006CA  0100               	movlb	0	; () banked
   954  0006CC  EE20 F002          	lfsr	2,2
   955  0006D0  519C               	movf	get_time@data& (0+255),w,b
   956  0006D2  26D9               	addwf	fsr2l,f,c
   957  0006D4  519D               	movf	(get_time@data+1)& (0+255),w,b
   958  0006D6  22DA               	addwfc	fsr2h,f,c
   959  0006D8  5038               	movf	get_time@hours,w,c
   960  0006DA  0B0F               	andlw	15
   961  0006DC  6EDF               	movwf	indf2,c
   962                           
   963                           ;user.c: 235: data[3] = (hours & 0xf0)>>4;
   964  0006DE  0100               	movlb	0	; () banked
   965  0006E0  EE20 F003          	lfsr	2,3
   966  0006E4  519C               	movf	get_time@data& (0+255),w,b
   967  0006E6  26D9               	addwf	fsr2l,f,c
   968  0006E8  519D               	movf	(get_time@data+1)& (0+255),w,b
   969  0006EA  22DA               	addwfc	fsr2h,f,c
   970  0006EC  3838               	swapf	get_time@hours,w,c
   971  0006EE  0B0F               	andlw	15
   972  0006F0  0B0F               	andlw	15
   973  0006F2  D013               	goto	L4
   974  0006F4                     l2272:
   975                           
   976                           ; BSR set to: 0
   977                           ;user.c: 237: else
   978                           ;user.c: 238: {
   979                           ;user.c: 239: data[2] = hours & 0x0f - 2;
   980  0006F4  0100               	movlb	0	; () banked
   981  0006F6  EE20 F002          	lfsr	2,2
   982  0006FA  519C               	movf	get_time@data& (0+255),w,b
   983  0006FC  26D9               	addwf	fsr2l,f,c
   984  0006FE  519D               	movf	(get_time@data+1)& (0+255),w,b
   985  000700  22DA               	addwfc	fsr2h,f,c
   986  000702  5038               	movf	get_time@hours,w,c
   987  000704  0B0D               	andlw	13
   988  000706  6EDF               	movwf	indf2,c
   989                           
   990                           ;user.c: 240: data[3] = (hours & 0xf0)>>4 - 10;
   991  000708  0100               	movlb	0	; () banked
   992  00070A  EE20 F003          	lfsr	2,3
   993  00070E  519C               	movf	get_time@data& (0+255),w,b
   994  000710  26D9               	addwf	fsr2l,f,c
   995  000712  519D               	movf	(get_time@data+1)& (0+255),w,b
   996  000714  22DA               	addwfc	fsr2h,f,c
   997  000716  5038               	movf	get_time@hours,w,c
   998  000718  0BF0               	andlw	240
   999  00071A                     L4:
  1000  00071A  6EDF               	movwf	indf2,c
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;user.c: 241: }
  1004                           ;user.c: 243: }
  1005                           ;user.c: 246: data[5] = 'H';
  1006                           
  1007                           ; BSR set to: 0
  1008  00071C  0100               	movlb	0	; () banked
  1009  00071E  EE20 F005          	lfsr	2,5
  1010  000722  519C               	movf	get_time@data& (0+255),w,b
  1011  000724  26D9               	addwf	fsr2l,f,c
  1012  000726  519D               	movf	(get_time@data+1)& (0+255),w,b
  1013  000728  22DA               	addwfc	fsr2h,f,c
  1014  00072A  0E48               	movlw	72
  1015  00072C  6EDF               	movwf	indf2,c
  1016                           
  1017                           ; BSR set to: 0
  1018  00072E  0012               	return		;funcret
  1019  000730                     __end_of_get_time:
  1020                           	opt stack 0
  1021                           tblptru	equ	0xFF8
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           indf2	equ	0xFDF
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function _byte_read *****************
  1030 ;; Defined at:
  1031 ;;		line 158 in file "user.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  address         1    wreg     unsigned char 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  address         1   44[COMRAM] unsigned char 
  1036 ;;  i               2   46[COMRAM] int 
  1037 ;;  res             1   45[COMRAM] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0
  1048 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1049 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1050 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        6 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    8
  1054 ;; This function calls:
  1055 ;;		_ce_disable
  1056 ;;		_ce_enable
  1057 ;;		_io_as_input
  1058 ;;		_send_command
  1059 ;; This function is called by:
  1060 ;;		_get_time
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text3
  1065  0007DC                     __ptext3:
  1066                           	opt stack 0
  1067  0007DC                     _byte_read:
  1068                           	opt stack 21
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;incstack = 0
  1072                           ;byte_read@address stored from wreg
  1073  0007DC  6E2D               	movwf	byte_read@address,c
  1074                           
  1075                           ;user.c: 159: char res = 0;
  1076  0007DE  0E00               	movlw	0
  1077  0007E0  6E2E               	movwf	byte_read@res,c
  1078                           
  1079                           ;user.c: 162: ce_enable();
  1080  0007E2  EC9C  F005         	call	_ce_enable	;wreg free
  1081                           
  1082                           ;user.c: 164: send_command(address);
  1083  0007E6  502D               	movf	byte_read@address,w,c
  1084  0007E8  EC25  F004         	call	_send_command
  1085                           
  1086                           ;user.c: 165: io_as_input();
  1087  0007EC  EC9A  F005         	call	_io_as_input	;wreg free
  1088                           
  1089                           ;user.c: 166: int i;
  1090                           ;user.c: 167: for(i=0;i<8;i++)
  1091  0007F0  0E00               	movlw	0
  1092  0007F2  6E30               	movwf	byte_read@i+1,c
  1093  0007F4  0E00               	movlw	0
  1094  0007F6  6E2F               	movwf	byte_read@i,c
  1095  0007F8                     l2066:
  1096  0007F8  BE30               	btfsc	byte_read@i+1,7,c
  1097  0007FA  D006               	goto	l239
  1098  0007FC  5030               	movf	byte_read@i+1,w,c
  1099  0007FE  E121               	bnz	l2082
  1100  000800  0E08               	movlw	8
  1101  000802  5C2F               	subwf	byte_read@i,w,c
  1102  000804  B0D8               	btfsc	status,0,c
  1103  000806  D01D               	goto	l2082
  1104  000808                     l239:
  1105                           
  1106                           ;user.c: 168: {
  1107                           ;user.c: 169: RA2 = 0;
  1108  000808  9480               	bcf	3968,2,c	;volatile
  1109                           
  1110                           ;user.c: 170: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  1111  00080A  0E06               	movlw	6
  1112  00080C                     u1757:
  1113  00080C  2EE8               	decfsz	wreg,f,c
  1114  00080E  D7FE               	bra	u1757
  1115  000810  D000               	nop2	
  1116                           
  1117                           ;user.c: 171: res |= RA3<<i;
  1118  000812  C02F  F02B         	movff	byte_read@i,??_byte_read
  1119  000816  A680               	btfss	3968,3,c	;volatile
  1120  000818  D003               	goto	u1140
  1121  00081A  6A2C               	clrf	(??_byte_read+1)& (0+255),c
  1122  00081C  2A2C               	incf	(??_byte_read+1)& (0+255),f,c
  1123  00081E  D001               	goto	u1158
  1124  000820                     u1140:
  1125  000820  6A2C               	clrf	(??_byte_read+1)& (0+255),c
  1126  000822                     u1158:
  1127  000822  2A2B               	incf	??_byte_read,f,c
  1128  000824  D002               	goto	u1164
  1129  000826                     u1165:
  1130  000826  90D8               	bcf	status,0,c
  1131  000828  362C               	rlcf	??_byte_read+1,f,c
  1132  00082A                     u1164:
  1133  00082A  2E2B               	decfsz	??_byte_read,f,c
  1134  00082C  D7FC               	goto	u1165
  1135  00082E  502C               	movf	??_byte_read+1,w,c
  1136  000830  122E               	iorwf	byte_read@res,f,c
  1137                           
  1138                           ;user.c: 172: RA2 = 1;
  1139  000832  8480               	bsf	3968,2,c	;volatile
  1140                           
  1141                           ;user.c: 173: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  1142  000834  0E10               	movlw	16
  1143  000836                     u1767:
  1144  000836  2EE8               	decfsz	wreg,f,c
  1145  000838  D7FE               	bra	u1767
  1146  00083A  D000               	nop2	
  1147  00083C  4A2F               	infsnz	byte_read@i,f,c
  1148  00083E  2A30               	incf	byte_read@i+1,f,c
  1149  000840  D7DB               	goto	l2066
  1150  000842                     l2082:
  1151                           
  1152                           ;user.c: 175: }
  1153                           ;user.c: 177: ce_disable();
  1154  000842  EC92  F005         	call	_ce_disable	;wreg free
  1155                           
  1156                           ;user.c: 180: return res;
  1157  000846  502E               	movf	byte_read@res,w,c
  1158  000848  0012               	return	
  1159  00084A                     __end_of_byte_read:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           indf2	equ	0xFDF
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           status	equ	0xFD8
  1168                           
  1169 ;; *************** function _send_command *****************
  1170 ;; Defined at:
  1171 ;;		line 299 in file "user.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  command         1    wreg     unsigned char 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  command         1   39[COMRAM] unsigned char 
  1176 ;;  i               2   40[COMRAM] int 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1188 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1190 ;;Total ram usage:        5 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    7
  1193 ;; This function calls:
  1194 ;;		_io_as_output
  1195 ;; This function is called by:
  1196 ;;		_byte_read
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text4
  1201  00084A                     __ptext4:
  1202                           	opt stack 0
  1203  00084A                     _send_command:
  1204                           	opt stack 21
  1205                           
  1206                           ;incstack = 0
  1207                           ;send_command@command stored from wreg
  1208  00084A  6E28               	movwf	send_command@command,c
  1209                           
  1210                           ;user.c: 301: int i;
  1211                           ;user.c: 302: io_as_output();
  1212  00084C  EC98  F005         	call	_io_as_output	;wreg free
  1213                           
  1214                           ;user.c: 303: for(i=0; i<8; i++)
  1215  000850  0E00               	movlw	0
  1216  000852  6E2A               	movwf	send_command@i+1,c
  1217  000854  0E00               	movlw	0
  1218  000856  6E29               	movwf	send_command@i,c
  1219  000858                     l1974:
  1220  000858  BE2A               	btfsc	send_command@i+1,7,c
  1221  00085A  D006               	goto	l1978
  1222  00085C  502A               	movf	send_command@i+1,w,c
  1223  00085E  E121               	bnz	l279
  1224  000860  0E08               	movlw	8
  1225  000862  5C29               	subwf	send_command@i,w,c
  1226  000864  B0D8               	btfsc	status,0,c
  1227  000866  0012               	return	
  1228  000868                     l1978:
  1229                           
  1230                           ;user.c: 304: {
  1231                           ;user.c: 305: RA3 = command>>i & 0x01;
  1232  000868  C029  F026         	movff	send_command@i,??_send_command
  1233  00086C  C028  F027         	movff	send_command@command,??_send_command+1
  1234  000870  2A26               	incf	??_send_command,f,c
  1235  000872  D002               	goto	u1004
  1236  000874                     u1005:
  1237  000874  90D8               	bcf	status,0,c
  1238  000876  3227               	rrcf	??_send_command+1,f,c
  1239  000878                     u1004:
  1240  000878  2E26               	decfsz	??_send_command,f,c
  1241  00087A  D7FC               	goto	u1005
  1242  00087C  3027               	rrcf	??_send_command+1,w,c
  1243  00087E  A0D8               	btfss	status,0,c
  1244  000880  D002               	goto	u1010
  1245  000882  8680               	bsf	3968,3,c	;volatile
  1246  000884  D001               	goto	l1980
  1247  000886                     u1010:
  1248  000886  9680               	bcf	3968,3,c	;volatile
  1249  000888                     l1980:
  1250                           
  1251                           ;user.c: 306: RA2 = 1;
  1252  000888  8480               	bsf	3968,2,c	;volatile
  1253                           
  1254                           ;user.c: 307: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  1255  00088A  0E10               	movlw	16
  1256  00088C                     u1777:
  1257  00088C  2EE8               	decfsz	wreg,f,c
  1258  00088E  D7FE               	bra	u1777
  1259  000890  D000               	nop2	
  1260                           
  1261                           ;user.c: 308: RA2 = 0;
  1262  000892  9480               	bcf	3968,2,c	;volatile
  1263                           
  1264                           ;user.c: 309: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  1265  000894  0E06               	movlw	6
  1266  000896                     u1787:
  1267  000896  2EE8               	decfsz	wreg,f,c
  1268  000898  D7FE               	bra	u1787
  1269  00089A  D000               	nop2	
  1270  00089C  4A29               	infsnz	send_command@i,f,c
  1271  00089E  2A2A               	incf	send_command@i+1,f,c
  1272  0008A0  D7DB               	goto	l1974
  1273  0008A2                     l279:
  1274  0008A2  0012               	return		;funcret
  1275  0008A4                     __end_of_send_command:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           indf2	equ	0xFDF
  1281                           fsr2h	equ	0xFDA
  1282                           fsr2l	equ	0xFD9
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _io_as_output *****************
  1286 ;; Defined at:
  1287 ;;		line 319 in file "user.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		None
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1301 ;;      Params:         0       0       0       0       0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1304 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    6
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_send_command
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text5
  1316  000B30                     __ptext5:
  1317                           	opt stack 0
  1318  000B30                     _io_as_output:
  1319                           	opt stack 21
  1320                           
  1321                           ;user.c: 321: TRISA3 = 0;
  1322                           
  1323                           ;incstack = 0
  1324  000B30  9692               	bcf	3986,3,c	;volatile
  1325  000B32  0012               	return		;funcret
  1326  000B34                     __end_of_io_as_output:
  1327                           	opt stack 0
  1328                           tblptru	equ	0xFF8
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           indf2	equ	0xFDF
  1332                           fsr2h	equ	0xFDA
  1333                           fsr2l	equ	0xFD9
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function _io_as_input *****************
  1337 ;; Defined at:
  1338 ;;		line 314 in file "user.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		None
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1352 ;;      Params:         0       0       0       0       0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    6
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_byte_read
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text6
  1367  000B34                     __ptext6:
  1368                           	opt stack 0
  1369  000B34                     _io_as_input:
  1370                           	opt stack 22
  1371                           
  1372                           ;user.c: 316: TRISA3 = 1;
  1373                           
  1374                           ;incstack = 0
  1375  000B34  8692               	bsf	3986,3,c	;volatile
  1376  000B36  0012               	return		;funcret
  1377  000B38                     __end_of_io_as_input:
  1378                           	opt stack 0
  1379                           tblptru	equ	0xFF8
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           indf2	equ	0xFDF
  1383                           fsr2h	equ	0xFDA
  1384                           fsr2l	equ	0xFD9
  1385                           status	equ	0xFD8
  1386                           
  1387 ;; *************** function _ce_enable *****************
  1388 ;; Defined at:
  1389 ;;		line 150 in file "user.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		None
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         0       0       0       0       0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    6
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_byte_read
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text7
  1418  000B38                     __ptext7:
  1419                           	opt stack 0
  1420  000B38                     _ce_enable:
  1421                           	opt stack 22
  1422                           
  1423                           ;user.c: 151: RA5 = 1;
  1424                           
  1425                           ;incstack = 0
  1426  000B38  8A80               	bsf	3968,5,c	;volatile
  1427  000B3A  0012               	return		;funcret
  1428  000B3C                     __end_of_ce_enable:
  1429                           	opt stack 0
  1430                           tblptru	equ	0xFF8
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           indf2	equ	0xFDF
  1434                           fsr2h	equ	0xFDA
  1435                           fsr2l	equ	0xFD9
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _ce_disable *****************
  1439 ;; Defined at:
  1440 ;;		line 153 in file "user.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		None
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    6
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_byte_read
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text8
  1469  000B24                     __ptext8:
  1470                           	opt stack 0
  1471  000B24                     _ce_disable:
  1472                           	opt stack 22
  1473                           
  1474                           ;user.c: 154: RA5 = 0;
  1475                           
  1476                           ;incstack = 0
  1477  000B24  9A80               	bcf	3968,5,c	;volatile
  1478                           
  1479                           ;user.c: 155: RA2 = 0;
  1480  000B26  9480               	bcf	3968,2,c	;volatile
  1481  000B28  0012               	return		;funcret
  1482  000B2A                     __end_of_ce_disable:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           postinc0	equ	0xFEE
  1486                           wreg	equ	0xFE8
  1487                           indf2	equ	0xFDF
  1488                           fsr2h	equ	0xFDA
  1489                           fsr2l	equ	0xFD9
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function _buzzer_disable *****************
  1493 ;; Defined at:
  1494 ;;		line 137 in file "user.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		None
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    6
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;;		_buzzer_toggle
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text9
  1524  000B3C                     __ptext9:
  1525                           	opt stack 0
  1526  000B3C                     _buzzer_disable:
  1527                           	opt stack 24
  1528                           
  1529                           ;user.c: 139: RB0 = 0;
  1530                           
  1531                           ;incstack = 0
  1532  000B3C  9081               	bcf	3969,0,c	;volatile
  1533  000B3E  0012               	return		;funcret
  1534  000B40                     __end_of_buzzer_disable:
  1535                           	opt stack 0
  1536                           tblptru	equ	0xFF8
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           indf2	equ	0xFDF
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function _InitApp *****************
  1545 ;; Defined at:
  1546 ;;		line 28 in file "user.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1560 ;;      Params:         0       0       0       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    6
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text10
  1575  000A02                     __ptext10:
  1576                           	opt stack 0
  1577  000A02                     _InitApp:
  1578                           	opt stack 24
  1579                           
  1580                           ;user.c: 32: TRISB3 = 0;
  1581                           
  1582                           ;incstack = 0
  1583  000A02  9693               	bcf	3987,3,c	;volatile
  1584                           
  1585                           ;user.c: 33: TRISB4 = 0;
  1586  000A04  9893               	bcf	3987,4,c	;volatile
  1587                           
  1588                           ;user.c: 35: CCP2CON = 0x00;
  1589  000A06  0E00               	movlw	0
  1590  000A08  6EBA               	movwf	4026,c	;volatile
  1591                           
  1592                           ;user.c: 36: SSPCON1 = 0X00;
  1593  000A0A  0E00               	movlw	0
  1594  000A0C  6EC6               	movwf	4038,c	;volatile
  1595                           
  1596                           ;user.c: 37: ADCON1 = 0X0F;
  1597  000A0E  0E0F               	movlw	15
  1598  000A10  6EC1               	movwf	4033,c	;volatile
  1599                           
  1600                           ;user.c: 38: INTCON = 0b10001000;
  1601  000A12  0E88               	movlw	136
  1602  000A14  6EF2               	movwf	intcon,c	;volatile
  1603                           
  1604                           ;user.c: 39: INTCON = 0b0;
  1605  000A16  0E00               	movlw	0
  1606  000A18  6EF2               	movwf	intcon,c	;volatile
  1607                           
  1608                           ;user.c: 40: INTCON |= 1<<7;
  1609  000A1A  8EF2               	bsf	intcon,7,c	;volatile
  1610                           
  1611                           ;user.c: 41: INTCON |= 1<<3;
  1612  000A1C  86F2               	bsf	intcon,3,c	;volatile
  1613                           
  1614                           ;user.c: 42: INTCON |= 1<<5;
  1615  000A1E  8AF2               	bsf	intcon,5,c	;volatile
  1616                           
  1617                           ;user.c: 43: INTCON2 = 0b10000101;
  1618  000A20  0E85               	movlw	133
  1619  000A22  6EF1               	movwf	intcon2,c	;volatile
  1620                           
  1621                           ;user.c: 44: INTCON2 |= 1<2;
  1622  000A24  80F1               	bsf	intcon2,0,c	;volatile
  1623                           
  1624                           ;user.c: 46: T0CON = 0b10000010;
  1625  000A26  0E82               	movlw	130
  1626  000A28  6ED5               	movwf	4053,c	;volatile
  1627                           
  1628                           ;user.c: 47: TRISB1 = 0;
  1629  000A2A  9293               	bcf	3987,1,c	;volatile
  1630                           
  1631                           ;user.c: 48: TRISA2 = 0;
  1632  000A2C  9492               	bcf	3986,2,c	;volatile
  1633                           
  1634                           ;user.c: 49: TRISA5 = 0;
  1635  000A2E  9A92               	bcf	3986,5,c	;volatile
  1636                           
  1637                           ;user.c: 50: TRISA3 = 0;
  1638  000A30  9692               	bcf	3986,3,c	;volatile
  1639                           
  1640                           ;user.c: 54: state = 0;
  1641  000A32  0E00               	movlw	0
  1642  000A34  0100               	movlb	0	; () banked
  1643  000A36  6FB2               	movwf	(_state+1)& (0+255),b
  1644  000A38  0E00               	movlw	0
  1645  000A3A  6FB1               	movwf	_state& (0+255),b
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;user.c: 55: next = 0;
  1649  000A3C  0E00               	movlw	0
  1650  000A3E  0100               	movlb	0	; () banked
  1651  000A40  6FA2               	movwf	(_next+1)& (0+255),b
  1652  000A42  0E00               	movlw	0
  1653  000A44  6FA1               	movwf	_next& (0+255),b
  1654                           
  1655                           ; BSR set to: 0
  1656  000A46  0012               	return		;funcret
  1657  000A48                     __end_of_InitApp:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           intcon	equ	0xFF2
  1661                           intcon2	equ	0xFF1
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           indf2	equ	0xFDF
  1665                           fsr2h	equ	0xFDA
  1666                           fsr2l	equ	0xFD9
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function _ConfigureOscillator *****************
  1670 ;; Defined at:
  1671 ;;		line 24 in file "system.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		None
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    6
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text11
  1700  000B58                     __ptext11:
  1701                           	opt stack 0
  1702  000B58                     _ConfigureOscillator:
  1703                           	opt stack 24
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;incstack = 0
  1707  000B58  0012               	return		;funcret
  1708  000B5A                     __end_of_ConfigureOscillator:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           intcon	equ	0xFF2
  1712                           intcon2	equ	0xFF1
  1713                           postinc0	equ	0xFEE
  1714                           wreg	equ	0xFE8
  1715                           indf2	equ	0xFDF
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _high_isr *****************
  1721 ;; Defined at:
  1722 ;;		line 32 in file "interrupts.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  digits          6   47[BANK0 ] unsigned char [6]
  1727 ;;  i               2   58[BANK0 ] int 
  1728 ;;  code           47    0[BANK0 ] unsigned char [47]
  1729 ;;  i               2   56[BANK0 ] int 
  1730 ;;  final_code      2   54[BANK0 ] int 
  1731 ;;  aux             1   53[BANK0 ] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1741 ;;      Params:         0       0       0       0       0       0       0       0       0
  1742 ;;      Locals:         0      60       0       0       0       0       0       0       0
  1743 ;;      Temps:         17       0       0       0       0       0       0       0       0
  1744 ;;      Totals:        17      60       0       0       0       0       0       0       0
  1745 ;;Total ram usage:       77 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    5
  1748 ;; This function calls:
  1749 ;;		_buzzer_enable
  1750 ;;		_get_next_state
  1751 ;;		_ir_get_human_code
  1752 ;;		_point_disable
  1753 ;;		_point_enable
  1754 ;;		_update_display
  1755 ;;		i2_buzzer_disable
  1756 ;; This function is called by:
  1757 ;;		Interrupt level 2
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	intcode
  1762  000008                     __pintcode:
  1763                           	opt stack 0
  1764  000008                     _high_isr:
  1765                           	opt stack 21
  1766                           
  1767                           ;incstack = 0
  1768  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1769  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  1770                           tblptru	equ	0xFF8
  1771                           intcon	equ	0xFF2
  1772                           intcon2	equ	0xFF1
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           indf2	equ	0xFDF
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780                           	psect	intcode_body
  1781  000012                     __pintcode_body:
  1782                           	opt stack 21
  1783  000012                     int_func:
  1784                           	opt stack 21
  1785  000012  0006               	pop		; remove dummy address from shadow register refresh
  1786  000014  CFFA F018          	movff	pclath,??_high_isr+3
  1787  000018  CFFB F019          	movff	pclatu,??_high_isr+4
  1788  00001C  CFE9 F01A          	movff	fsr0l,??_high_isr+5
  1789  000020  CFEA F01B          	movff	fsr0h,??_high_isr+6
  1790  000024  CFE1 F01C          	movff	fsr1l,??_high_isr+7
  1791  000028  CFE2 F01D          	movff	fsr1h,??_high_isr+8
  1792  00002C  CFD9 F01E          	movff	fsr2l,??_high_isr+9
  1793  000030  CFDA F01F          	movff	fsr2h,??_high_isr+10
  1794  000034  CFF3 F020          	movff	prodl,??_high_isr+11
  1795  000038  CFF4 F021          	movff	prodh,??_high_isr+12
  1796  00003C  CFF6 F022          	movff	tblptrl,??_high_isr+13
  1797  000040  CFF7 F023          	movff	tblptrh,??_high_isr+14
  1798  000044  CFF8 F024          	movff	tblptru,??_high_isr+15
  1799  000048  CFF5 F025          	movff	tablat,??_high_isr+16
  1800                           
  1801                           ;interrupts.c: 68: if (RBIF == 1)
  1802  00004C  A0F2               	btfss	intcon,0,c	;volatile
  1803  00004E  D08A               	goto	i2l41
  1804                           
  1805                           ;interrupts.c: 69: {
  1806                           ;interrupts.c: 71: INTCONbits.GIE = 0;
  1807  000050  9EF2               	bcf	intcon,7,c	;volatile
  1808                           
  1809                           ;interrupts.c: 72: char aux = 0;
  1810  000052  0E00               	movlw	0
  1811  000054  0100               	movlb	0	; () banked
  1812  000056  6F95               	movwf	high_isr@aux& (0+255),b
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;interrupts.c: 74: int i;
  1816                           ;interrupts.c: 75: char code[47];
  1817                           ;interrupts.c: 77: _delay((unsigned long)((40.7)*(20000000L/4000.0)));
  1818  000058  0E02               	movlw	2
  1819  00005A  6E16               	movwf	(??_high_isr+1)& (0+255),c
  1820  00005C  0E09               	movlw	9
  1821  00005E  6E15               	movwf	??_high_isr& (0+255),c
  1822  000060  0E46               	movlw	70
  1823  000062                     i2u179_47:
  1824  000062  2EE8               	decfsz	wreg,f,c
  1825  000064  D7FE               	bra	i2u179_47
  1826  000066  2E15               	decfsz	??_high_isr& (0+255),f,c
  1827  000068  D7FC               	bra	i2u179_47
  1828  00006A  2E16               	decfsz	(??_high_isr+1)& (0+255),f,c
  1829  00006C  D7FA               	bra	i2u179_47
  1830                           
  1831                           ;interrupts.c: 78: for(i = 0; i < 47 ; i ++)
  1832  00006E  0E00               	movlw	0
  1833  000070  0100               	movlb	0	; () banked
  1834  000072  6F99               	movwf	(high_isr@i+1)& (0+255),b
  1835  000074  0E00               	movlw	0
  1836  000076  6F98               	movwf	high_isr@i& (0+255),b
  1837  000078                     i2l2316:
  1838                           
  1839                           ; BSR set to: 0
  1840  000078  0100               	movlb	0	; () banked
  1841  00007A  BF99               	btfsc	(high_isr@i+1)& (0+255),7,b
  1842  00007C  D008               	goto	i2l2320
  1843  00007E  0100               	movlb	0	; () banked
  1844  000080  5199               	movf	(high_isr@i+1)& (0+255),w,b
  1845  000082  E11D               	bnz	i2l2328
  1846  000084  0E2F               	movlw	47
  1847  000086  0100               	movlb	0	; () banked
  1848  000088  5D98               	subwf	high_isr@i& (0+255),w,b
  1849  00008A  B0D8               	btfsc	status,0,c
  1850  00008C  D018               	goto	i2l2328
  1851  00008E                     i2l2320:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;interrupts.c: 79: {
  1855                           ;interrupts.c: 80: code[i] = RB5;
  1856  00008E  0E60               	movlw	low high_isr@code
  1857  000090  0100               	movlb	0	; () banked
  1858  000092  2598               	addwf	high_isr@i& (0+255),w,b
  1859  000094  6ED9               	movwf	fsr2l,c
  1860  000096  0E00               	movlw	high high_isr@code
  1861  000098  0100               	movlb	0	; () banked
  1862  00009A  2199               	addwfc	(high_isr@i+1)& (0+255),w,b
  1863  00009C  6EDA               	movwf	fsr2h,c
  1864  00009E  0E00               	movlw	0
  1865  0000A0  BA81               	btfsc	3969,5,c	;volatile
  1866  0000A2  0E01               	movlw	1
  1867  0000A4  6EDF               	movwf	indf2,c
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;interrupts.c: 81: _delay((unsigned long)((565)*(20000000L/4000000.0)));
  1871  0000A6  0E04               	movlw	4
  1872  0000A8  6E15               	movwf	??_high_isr& (0+255),c
  1873  0000AA  0EAA               	movlw	170
  1874  0000AC                     i2u180_47:
  1875  0000AC  2EE8               	decfsz	wreg,f,c
  1876  0000AE  D7FE               	bra	i2u180_47
  1877  0000B0  2E15               	decfsz	??_high_isr& (0+255),f,c
  1878  0000B2  D7FC               	bra	i2u180_47
  1879  0000B4  F000               	nop	
  1880  0000B6  0100               	movlb	0	; () banked
  1881  0000B8  4B98               	infsnz	high_isr@i& (0+255),f,b
  1882  0000BA  2B99               	incf	(high_isr@i+1)& (0+255),f,b
  1883  0000BC  D7DD               	goto	i2l2316
  1884  0000BE                     i2l2328:
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;interrupts.c: 82: }
  1888                           ;interrupts.c: 83: int final_code = 0;
  1889  0000BE  0E00               	movlw	0
  1890  0000C0  0100               	movlb	0	; () banked
  1891  0000C2  6F97               	movwf	(high_isr@final_code+1)& (0+255),b
  1892  0000C4  0E00               	movlw	0
  1893  0000C6  6F96               	movwf	high_isr@final_code& (0+255),b
  1894                           
  1895                           ;interrupts.c: 84: for(i = 0; i<16;i++)
  1896  0000C8  0E00               	movlw	0
  1897  0000CA  0100               	movlb	0	; () banked
  1898  0000CC  6F99               	movwf	(high_isr@i+1)& (0+255),b
  1899  0000CE  0E00               	movlw	0
  1900  0000D0  6F98               	movwf	high_isr@i& (0+255),b
  1901  0000D2                     i2l2330:
  1902                           
  1903                           ; BSR set to: 0
  1904  0000D2  0100               	movlb	0	; () banked
  1905  0000D4  BF99               	btfsc	(high_isr@i+1)& (0+255),7,b
  1906  0000D6  D008               	goto	i2l2334
  1907  0000D8  0100               	movlb	0	; () banked
  1908  0000DA  5199               	movf	(high_isr@i+1)& (0+255),w,b
  1909  0000DC  E123               	bnz	i2l2340
  1910  0000DE  0E10               	movlw	16
  1911  0000E0  0100               	movlb	0	; () banked
  1912  0000E2  5D98               	subwf	high_isr@i& (0+255),w,b
  1913  0000E4  B0D8               	btfsc	status,0,c
  1914  0000E6  D01E               	goto	i2l2340
  1915  0000E8                     i2l2334:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;interrupts.c: 85: {
  1919                           ;interrupts.c: 86: final_code |= code[i]<<i;
  1920  0000E8  C098  F015         	movff	high_isr@i,??_high_isr
  1921  0000EC  0E60               	movlw	low high_isr@code
  1922  0000EE  0100               	movlb	0	; () banked
  1923  0000F0  2598               	addwf	high_isr@i& (0+255),w,b
  1924  0000F2  6ED9               	movwf	fsr2l,c
  1925  0000F4  0E00               	movlw	high high_isr@code
  1926  0000F6  0100               	movlb	0	; () banked
  1927  0000F8  2199               	addwfc	(high_isr@i+1)& (0+255),w,b
  1928  0000FA  6EDA               	movwf	fsr2h,c
  1929  0000FC  50DF               	movf	indf2,w,c
  1930  0000FE  6E16               	movwf	(??_high_isr+1)& (0+255),c
  1931  000100  6A17               	clrf	(??_high_isr+2)& (0+255),c
  1932  000102  2A15               	incf	??_high_isr,f,c
  1933  000104  D003               	goto	i2u150_44
  1934  000106                     i2u150_45:
  1935  000106  90D8               	bcf	status,0,c
  1936  000108  3616               	rlcf	??_high_isr+1,f,c
  1937  00010A  3617               	rlcf	??_high_isr+2,f,c
  1938  00010C                     i2u150_44:
  1939  00010C  2E15               	decfsz	??_high_isr,f,c
  1940  00010E  D7FB               	goto	i2u150_45
  1941  000110  5016               	movf	??_high_isr+1,w,c
  1942  000112  0100               	movlb	0	; () banked
  1943  000114  1396               	iorwf	high_isr@final_code& (0+255),f,b
  1944  000116  5017               	movf	??_high_isr+2,w,c
  1945  000118  0100               	movlb	0	; () banked
  1946  00011A  1397               	iorwf	(high_isr@final_code+1)& (0+255),f,b
  1947                           
  1948                           ; BSR set to: 0
  1949  00011C  0100               	movlb	0	; () banked
  1950  00011E  4B98               	infsnz	high_isr@i& (0+255),f,b
  1951  000120  2B99               	incf	(high_isr@i+1)& (0+255),f,b
  1952  000122  D7D7               	goto	i2l2330
  1953  000124                     i2l2340:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;interrupts.c: 87: }
  1957                           ;interrupts.c: 92: if(final_code !=0xffff)
  1958  000124  0100               	movlb	0	; () banked
  1959  000126  2996               	incf	high_isr@final_code& (0+255),w,b
  1960  000128  E104               	bnz	i2u152_40
  1961  00012A  0100               	movlb	0	; () banked
  1962  00012C  2997               	incf	(high_isr@final_code+1)& (0+255),w,b
  1963  00012E  B4D8               	btfsc	status,2,c
  1964  000130  D016               	goto	i2l2346
  1965  000132                     i2u152_40:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;interrupts.c: 93: {
  1969                           ;interrupts.c: 94: human_code = ir_get_human_code(final_code);
  1970  000132  C096  F001         	movff	high_isr@final_code,ir_get_human_code@code
  1971  000136  C097  F002         	movff	high_isr@final_code+1,ir_get_human_code@code+1
  1972  00013A  ECFD  F001         	call	_ir_get_human_code	;wreg free
  1973  00013E  0100               	movlb	0	; () banked
  1974  000140  6FA3               	movwf	_human_code& (0+255),b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;interrupts.c: 95: next = get_next_state(state,final_code);
  1978  000142  C0B1  F00E         	movff	_state,get_next_state@state
  1979  000146  C0B2  F00F         	movff	_state+1,get_next_state@state+1
  1980  00014A  C096  F010         	movff	high_isr@final_code,get_next_state@code
  1981  00014E  C097  F011         	movff	high_isr@final_code+1,get_next_state@code+1
  1982  000152  EC94  F002         	call	_get_next_state	;wreg free
  1983  000156  C00E  F0A1         	movff	?_get_next_state,_next
  1984  00015A  C00F  F0A2         	movff	?_get_next_state+1,_next+1
  1985  00015E                     i2l2346:
  1986                           
  1987                           ;interrupts.c: 96: }
  1988                           ;interrupts.c: 98: RBIF = 0;
  1989  00015E  90F2               	bcf	intcon,0,c	;volatile
  1990                           
  1991                           ;interrupts.c: 99: INTCONbits.GIE = 1;
  1992  000160  8EF2               	bsf	intcon,7,c	;volatile
  1993                           
  1994                           ;interrupts.c: 100: }
  1995  000162  D095               	goto	i2l65
  1996  000164                     i2l41:
  1997                           
  1998                           ;interrupts.c: 101: else if (TMR0IF == 1)
  1999  000164  A4F2               	btfss	intcon,2,c	;volatile
  2000  000166  D093               	goto	i2l65
  2001                           
  2002                           ;interrupts.c: 102: {
  2003                           ;interrupts.c: 103: int i;
  2004                           ;interrupts.c: 104: for(i=0; i<6;i++)
  2005  000168  0E00               	movlw	0
  2006  00016A  0100               	movlb	0	; () banked
  2007  00016C  6F9B               	movwf	(high_isr@i_136+1)& (0+255),b
  2008  00016E  0E00               	movlw	0
  2009  000170  6F9A               	movwf	high_isr@i_136& (0+255),b
  2010  000172                     i2l2352:
  2011                           
  2012                           ; BSR set to: 0
  2013  000172  0100               	movlb	0	; () banked
  2014  000174  BF9B               	btfsc	(high_isr@i_136+1)& (0+255),7,b
  2015  000176  D008               	goto	i2l2356
  2016  000178  0100               	movlb	0	; () banked
  2017  00017A  519B               	movf	(high_isr@i_136+1)& (0+255),w,b
  2018  00017C  E11B               	bnz	i2l2362
  2019  00017E  0E06               	movlw	6
  2020  000180  0100               	movlb	0	; () banked
  2021  000182  5D9A               	subwf	high_isr@i_136& (0+255),w,b
  2022  000184  B0D8               	btfsc	status,0,c
  2023  000186  D016               	goto	i2l2362
  2024  000188                     i2l2356:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;interrupts.c: 105: {
  2028                           ;interrupts.c: 106: masked_digits[i] = aux1[i];
  2029  000188  0EAA               	movlw	low _aux1
  2030  00018A  0100               	movlb	0	; () banked
  2031  00018C  259A               	addwf	high_isr@i_136& (0+255),w,b
  2032  00018E  6ED9               	movwf	fsr2l,c
  2033  000190  0E00               	movlw	high _aux1
  2034  000192  0100               	movlb	0	; () banked
  2035  000194  219B               	addwfc	(high_isr@i_136+1)& (0+255),w,b
  2036  000196  6EDA               	movwf	fsr2h,c
  2037  000198  0EA4               	movlw	low _masked_digits
  2038  00019A  0100               	movlb	0	; () banked
  2039  00019C  259A               	addwf	high_isr@i_136& (0+255),w,b
  2040  00019E  6EE1               	movwf	fsr1l,c
  2041  0001A0  0E00               	movlw	high _masked_digits
  2042  0001A2  0100               	movlb	0	; () banked
  2043  0001A4  219B               	addwfc	(high_isr@i_136+1)& (0+255),w,b
  2044  0001A6  6EE2               	movwf	fsr1h,c
  2045  0001A8  CFDF FFE7          	movff	indf2,indf1
  2046                           
  2047                           ; BSR set to: 0
  2048  0001AC  0100               	movlb	0	; () banked
  2049  0001AE  4B9A               	infsnz	high_isr@i_136& (0+255),f,b
  2050  0001B0  2B9B               	incf	(high_isr@i_136+1)& (0+255),f,b
  2051  0001B2  D7DF               	goto	i2l2352
  2052  0001B4                     i2l2362:
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;interrupts.c: 107: }
  2056                           ;interrupts.c: 109: if(counter < 10 - 1)
  2057  0001B4  0E09               	movlw	9
  2058  0001B6  0100               	movlb	0	; () banked
  2059  0001B8  61B0               	cpfslt	_counter& (0+255),b
  2060  0001BA  D003               	goto	i2l2366
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;interrupts.c: 110: {
  2064                           ;interrupts.c: 111: counter = counter + 1;
  2065  0001BC  0100               	movlb	0	; () banked
  2066  0001BE  29B0               	incf	_counter& (0+255),w,b
  2067  0001C0  D001               	goto	L5
  2068  0001C2                     i2l2366:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;interrupts.c: 113: else
  2072                           ;interrupts.c: 114: {
  2073                           ;interrupts.c: 115: counter = 0;
  2074  0001C2  0E00               	movlw	0
  2075  0001C4                     L5:
  2076  0001C4  0100               	movlb	0	; () banked
  2077  0001C6  6FB0               	movwf	_counter& (0+255),b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;interrupts.c: 116: }
  2081                           ;interrupts.c: 118: char digits[6];
  2082                           ;interrupts.c: 119: int i;
  2083                           ;interrupts.c: 121: for (i=0; i<6;i++)
  2084  0001C8  0E00               	movlw	0
  2085  0001CA  0100               	movlb	0	; () banked
  2086  0001CC  6F9B               	movwf	(high_isr@i_136+1)& (0+255),b
  2087  0001CE  0E00               	movlw	0
  2088  0001D0  6F9A               	movwf	high_isr@i_136& (0+255),b
  2089  0001D2                     i2l2368:
  2090                           
  2091                           ; BSR set to: 0
  2092  0001D2  0100               	movlb	0	; () banked
  2093  0001D4  BF9B               	btfsc	(high_isr@i_136+1)& (0+255),7,b
  2094  0001D6  D008               	goto	i2l53
  2095  0001D8  0100               	movlb	0	; () banked
  2096  0001DA  519B               	movf	(high_isr@i_136+1)& (0+255),w,b
  2097  0001DC  E10B               	bnz	i2l2376
  2098  0001DE  0E06               	movlw	6
  2099  0001E0  0100               	movlb	0	; () banked
  2100  0001E2  5D9A               	subwf	high_isr@i_136& (0+255),w,b
  2101  0001E4  B0D8               	btfsc	status,0,c
  2102  0001E6  D006               	goto	i2l2376
  2103  0001E8                     i2l53:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;interrupts.c: 122: digits[6] = i;
  2107  0001E8  C09A  F095         	movff	high_isr@i_136,high_isr@digits+6
  2108                           
  2109                           ; BSR set to: 0
  2110  0001EC  0100               	movlb	0	; () banked
  2111  0001EE  4B9A               	infsnz	high_isr@i_136& (0+255),f,b
  2112  0001F0  2B9B               	incf	(high_isr@i_136+1)& (0+255),f,b
  2113  0001F2  D7EF               	goto	i2l2368
  2114  0001F4                     i2l2376:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;interrupts.c: 124: if(counter == 0 )
  2118  0001F4  0100               	movlb	0	; () banked
  2119  0001F6  51B0               	movf	_counter& (0+255),w,b
  2120  0001F8  A4D8               	btfss	status,2,c
  2121  0001FA  D005               	goto	i2l2380
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;interrupts.c: 125: {
  2125                           ;interrupts.c: 126: point_enable();
  2126  0001FC  ECA2  F005         	call	_point_enable	;wreg free
  2127                           
  2128                           ;interrupts.c: 127: buzzer_enable();
  2129  000200  ECAA  F005         	call	_buzzer_enable	;wreg free
  2130                           
  2131                           ;interrupts.c: 128: }
  2132  000204  D00F               	goto	i2l2386
  2133  000206                     i2l2380:
  2134                           
  2135                           ;interrupts.c: 129: else if(counter == 5 && state == 0)
  2136  000206  0E05               	movlw	5
  2137  000208  0100               	movlb	0	; () banked
  2138  00020A  19B0               	xorwf	_counter& (0+255),w,b
  2139  00020C  A4D8               	btfss	status,2,c
  2140  00020E  D00A               	goto	i2l2386
  2141                           
  2142                           ; BSR set to: 0
  2143  000210  0100               	movlb	0	; () banked
  2144  000212  51B1               	movf	_state& (0+255),w,b
  2145  000214  0100               	movlb	0	; () banked
  2146  000216  11B2               	iorwf	(_state+1)& (0+255),w,b
  2147  000218  A4D8               	btfss	status,2,c
  2148  00021A  D004               	goto	i2l2386
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;interrupts.c: 130: {
  2152                           ;interrupts.c: 131: point_disable();
  2153  00021C  ECA4  F005         	call	_point_disable	;wreg free
  2154                           
  2155                           ;interrupts.c: 132: buzzer_disable();
  2156  000220  ECA0  F005         	call	i2_buzzer_disable	;wreg free
  2157  000224                     i2l2386:
  2158                           
  2159                           ;interrupts.c: 133: }
  2160                           ;interrupts.c: 135: if(counter >= 5)
  2161  000224  0E04               	movlw	4
  2162  000226  0100               	movlb	0	; () banked
  2163  000228  65B0               	cpfsgt	_counter& (0+255),b
  2164  00022A  D026               	goto	i2l2402
  2165  00022C  D010               	goto	i2l2400
  2166  00022E                     i2l2390:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;interrupts.c: 140: masked_digits[3] = 'V';
  2170  00022E  0E56               	movlw	86
  2171  000230  0100               	movlb	0	; () banked
  2172  000232  6FA7               	movwf	(_masked_digits+3)& (0+255),b
  2173                           
  2174                           ;interrupts.c: 141: break;
  2175  000234  D021               	goto	i2l2402
  2176  000236                     i2l2392:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;interrupts.c: 143: masked_digits[2] = 'V';
  2180  000236  0E56               	movlw	86
  2181  000238  0100               	movlb	0	; () banked
  2182  00023A  6FA6               	movwf	(_masked_digits+2)& (0+255),b
  2183                           
  2184                           ;interrupts.c: 144: break;
  2185  00023C  D01D               	goto	i2l2402
  2186  00023E                     i2l2394:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;interrupts.c: 146: masked_digits[1] = 'V';
  2190  00023E  0E56               	movlw	86
  2191  000240  0100               	movlb	0	; () banked
  2192  000242  6FA5               	movwf	(_masked_digits+1)& (0+255),b
  2193                           
  2194                           ;interrupts.c: 147: break;
  2195  000244  D019               	goto	i2l2402
  2196  000246                     i2l2396:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;interrupts.c: 149: masked_digits[0] = 'V';
  2200  000246  0E56               	movlw	86
  2201  000248  0100               	movlb	0	; () banked
  2202  00024A  6FA4               	movwf	_masked_digits& (0+255),b
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;interrupts.c: 151: }
  2206                           
  2207                           ;interrupts.c: 150: break;
  2208  00024C  D015               	goto	i2l2402
  2209  00024E                     i2l2400:
  2210                           
  2211                           ; BSR set to: 0
  2212  00024E  C0B1  F015         	movff	_state,??_high_isr
  2213  000252  C0B2  F016         	movff	_state+1,??_high_isr+1
  2214                           
  2215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2216                           ; Switch size 1, requested type "space"
  2217                           ; Number of cases is 1, Range of values is 0 to 0
  2218                           ; switch strategies available:
  2219                           ; Name         Instructions Cycles
  2220                           ; simple_byte            4     3 (average)
  2221                           ;	Chosen strategy is simple_byte
  2222  000256  5016               	movf	??_high_isr+1,w,c
  2223  000258  0A00               	xorlw	0	; case 0
  2224  00025A  A4D8               	btfss	status,2,c
  2225  00025C  D00D               	goto	i2l2402
  2226                           
  2227                           ; BSR set to: 0
  2228                           ; Switch size 1, requested type "space"
  2229                           ; Number of cases is 4, Range of values is 1 to 4
  2230                           ; switch strategies available:
  2231                           ; Name         Instructions Cycles
  2232                           ; simple_byte           13     7 (average)
  2233                           ;	Chosen strategy is simple_byte
  2234  00025E  5015               	movf	??_high_isr,w,c
  2235  000260  0A01               	xorlw	1	; case 1
  2236  000262  B4D8               	btfsc	status,2,c
  2237  000264  D7E4               	goto	i2l2390
  2238  000266  0A03               	xorlw	3	; case 2
  2239  000268  B4D8               	btfsc	status,2,c
  2240  00026A  D7E5               	goto	i2l2392
  2241  00026C  0A01               	xorlw	1	; case 3
  2242  00026E  B4D8               	btfsc	status,2,c
  2243  000270  D7E6               	goto	i2l2394
  2244  000272  0A07               	xorlw	7	; case 4
  2245  000274  B4D8               	btfsc	status,2,c
  2246  000276  D7E7               	goto	i2l2396
  2247  000278                     i2l2402:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;interrupts.c: 152: }
  2251                           ;interrupts.c: 154: update_display(masked_digits, &counter);
  2252  000278  0EA4               	movlw	low _masked_digits
  2253  00027A  6E0C               	movwf	update_display@digits,c
  2254  00027C  0E00               	movlw	high _masked_digits
  2255  00027E  6E0D               	movwf	update_display@digits+1,c
  2256  000280  0EB0               	movlw	low _counter
  2257  000282  6E0E               	movwf	update_display@counter,c
  2258  000284  0E00               	movlw	high _counter
  2259  000286  6E0F               	movwf	update_display@counter+1,c
  2260  000288  EC8B  F005         	call	_update_display	;wreg free
  2261                           
  2262                           ;interrupts.c: 155: TMR0IF = 0;
  2263  00028C  94F2               	bcf	intcon,2,c	;volatile
  2264  00028E                     i2l65:
  2265  00028E  C025  FFF5         	movff	??_high_isr+16,tablat
  2266  000292  C024  FFF8         	movff	??_high_isr+15,tblptru
  2267  000296  C023  FFF7         	movff	??_high_isr+14,tblptrh
  2268  00029A  C022  FFF6         	movff	??_high_isr+13,tblptrl
  2269  00029E  C021  FFF4         	movff	??_high_isr+12,prodh
  2270  0002A2  C020  FFF3         	movff	??_high_isr+11,prodl
  2271  0002A6  C01F  FFDA         	movff	??_high_isr+10,fsr2h
  2272  0002AA  C01E  FFD9         	movff	??_high_isr+9,fsr2l
  2273  0002AE  C01D  FFE2         	movff	??_high_isr+8,fsr1h
  2274  0002B2  C01C  FFE1         	movff	??_high_isr+7,fsr1l
  2275  0002B6  C01B  FFEA         	movff	??_high_isr+6,fsr0h
  2276  0002BA  C01A  FFE9         	movff	??_high_isr+5,fsr0l
  2277  0002BE  C019  FFFB         	movff	??_high_isr+4,pclatu
  2278  0002C2  C018  FFFA         	movff	??_high_isr+3,pclath
  2279  0002C6  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2280  0002C8  0011               	retfie		f
  2281  0002CA                     __end_of_high_isr:
  2282                           	opt stack 0
  2283                           pclatu	equ	0xFFB
  2284                           pclath	equ	0xFFA
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           prodh	equ	0xFF4
  2290                           prodl	equ	0xFF3
  2291                           intcon	equ	0xFF2
  2292                           intcon2	equ	0xFF1
  2293                           postinc0	equ	0xFEE
  2294                           fsr0h	equ	0xFEA
  2295                           fsr0l	equ	0xFE9
  2296                           wreg	equ	0xFE8
  2297                           indf1	equ	0xFE7
  2298                           fsr1h	equ	0xFE2
  2299                           fsr1l	equ	0xFE1
  2300                           indf2	equ	0xFDF
  2301                           fsr2h	equ	0xFDA
  2302                           fsr2l	equ	0xFD9
  2303                           status	equ	0xFD8
  2304                           
  2305 ;; *************** function i2_buzzer_disable *****************
  2306 ;; Defined at:
  2307 ;;		line 137 in file "user.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		None
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2321 ;;      Params:         0       0       0       0       0       0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2324 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_high_isr
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text13
  2335  000B40                     __ptext13:
  2336                           	opt stack 0
  2337  000B40                     i2_buzzer_disable:
  2338                           	opt stack 25
  2339                           
  2340                           ;user.c: 139: RB0 = 0;
  2341                           
  2342                           ;incstack = 0
  2343  000B40  9081               	bcf	3969,0,c	;volatile
  2344  000B42  0012               	return		;funcret
  2345  000B44                     __end_ofi2_buzzer_disable:
  2346                           	opt stack 0
  2347                           pclatu	equ	0xFFB
  2348                           pclath	equ	0xFFA
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           intcon2	equ	0xFF1
  2357                           postinc0	equ	0xFEE
  2358                           fsr0h	equ	0xFEA
  2359                           fsr0l	equ	0xFE9
  2360                           wreg	equ	0xFE8
  2361                           indf1	equ	0xFE7
  2362                           fsr1h	equ	0xFE2
  2363                           fsr1l	equ	0xFE1
  2364                           indf2	equ	0xFDF
  2365                           fsr2h	equ	0xFDA
  2366                           fsr2l	equ	0xFD9
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _update_display *****************
  2370 ;; Defined at:
  2371 ;;		line 430 in file "user.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  digits          2   11[COMRAM] PTR unsigned char 
  2374 ;;		 -> masked_digits(6), 
  2375 ;;  counter         2   13[COMRAM] PTR unsigned char 
  2376 ;;		 -> counter(1), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         4       0       0       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        4 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    2
  2395 ;; This function calls:
  2396 ;;		_put_nums
  2397 ;; This function is called by:
  2398 ;;		_high_isr
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text14
  2403  000B16                     __ptext14:
  2404                           	opt stack 0
  2405  000B16                     _update_display:
  2406                           	opt stack 23
  2407                           
  2408                           ;user.c: 432: put_nums(digits);
  2409                           
  2410                           ;incstack = 0
  2411  000B16  C00C  F008         	movff	update_display@digits,put_nums@nums
  2412  000B1A  C00D  F009         	movff	update_display@digits+1,put_nums@nums+1
  2413  000B1E  EC41  F005         	call	_put_nums	;wreg free
  2414  000B22  0012               	return		;funcret
  2415  000B24                     __end_of_update_display:
  2416                           	opt stack 0
  2417                           pclatu	equ	0xFFB
  2418                           pclath	equ	0xFFA
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           prodh	equ	0xFF4
  2424                           prodl	equ	0xFF3
  2425                           intcon	equ	0xFF2
  2426                           intcon2	equ	0xFF1
  2427                           postinc0	equ	0xFEE
  2428                           fsr0h	equ	0xFEA
  2429                           fsr0l	equ	0xFE9
  2430                           wreg	equ	0xFE8
  2431                           indf1	equ	0xFE7
  2432                           fsr1h	equ	0xFE2
  2433                           fsr1l	equ	0xFE1
  2434                           indf2	equ	0xFDF
  2435                           fsr2h	equ	0xFDA
  2436                           fsr2l	equ	0xFD9
  2437                           status	equ	0xFD8
  2438                           
  2439 ;; *************** function _put_nums *****************
  2440 ;; Defined at:
  2441 ;;		line 71 in file "user.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  nums            2    7[COMRAM] PTR unsigned char 
  2444 ;;		 -> masked_digits(6), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  i               2    9[COMRAM] int 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2456 ;;      Params:         2       0       0       0       0       0       0       0       0
  2457 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2459 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2460 ;;Total ram usage:        4 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    1
  2463 ;; This function calls:
  2464 ;;		_get_num
  2465 ;;		_put_num
  2466 ;; This function is called by:
  2467 ;;		_update_display
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text15
  2472  000A82                     __ptext15:
  2473                           	opt stack 0
  2474  000A82                     _put_nums:
  2475                           	opt stack 23
  2476                           
  2477                           ;user.c: 73: int i;
  2478                           ;user.c: 74: for(i=0;i<6;i++)
  2479                           
  2480                           ;incstack = 0
  2481  000A82  0E00               	movlw	0
  2482  000A84  6E0B               	movwf	put_nums@i+1,c
  2483  000A86  0E00               	movlw	0
  2484  000A88  6E0A               	movwf	put_nums@i,c
  2485  000A8A                     i2l2046:
  2486  000A8A  BE0B               	btfsc	put_nums@i+1,7,c
  2487  000A8C  D006               	goto	i2l2050
  2488  000A8E  500B               	movf	put_nums@i+1,w,c
  2489  000A90  E112               	bnz	i2l183
  2490  000A92  0E06               	movlw	6
  2491  000A94  5C0A               	subwf	put_nums@i,w,c
  2492  000A96  B0D8               	btfsc	status,0,c
  2493  000A98  0012               	return	
  2494  000A9A                     i2l2050:
  2495                           
  2496                           ;user.c: 75: {
  2497                           ;user.c: 76: put_num(get_num(nums[i]));
  2498  000A9A  500A               	movf	put_nums@i,w,c
  2499  000A9C  2408               	addwf	put_nums@nums,w,c
  2500  000A9E  6ED9               	movwf	fsr2l,c
  2501  000AA0  500B               	movf	put_nums@i+1,w,c
  2502  000AA2  2009               	addwfc	put_nums@nums+1,w,c
  2503  000AA4  6EDA               	movwf	fsr2h,c
  2504  000AA6  50DF               	movf	indf2,w,c
  2505  000AA8  EC98  F003         	call	_get_num
  2506  000AAC  EC7F  F004         	call	_put_num
  2507  000AB0  4A0A               	infsnz	put_nums@i,f,c
  2508  000AB2  2A0B               	incf	put_nums@i+1,f,c
  2509  000AB4  D7EA               	goto	i2l2046
  2510  000AB6                     i2l183:
  2511  000AB6  0012               	return		;funcret
  2512  000AB8                     __end_of_put_nums:
  2513                           	opt stack 0
  2514                           pclatu	equ	0xFFB
  2515                           pclath	equ	0xFFA
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           prodh	equ	0xFF4
  2521                           prodl	equ	0xFF3
  2522                           intcon	equ	0xFF2
  2523                           intcon2	equ	0xFF1
  2524                           postinc0	equ	0xFEE
  2525                           fsr0h	equ	0xFEA
  2526                           fsr0l	equ	0xFE9
  2527                           wreg	equ	0xFE8
  2528                           indf1	equ	0xFE7
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           indf2	equ	0xFDF
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536 ;; *************** function _put_num *****************
  2537 ;; Defined at:
  2538 ;;		line 59 in file "user.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  num             1    wreg     unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  num             1    2[COMRAM] unsigned char 
  2543 ;;  i               2    5[COMRAM] int 
  2544 ;;  mask            1    3[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0
  2555 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2556 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2557 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2558 ;;Total ram usage:        7 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_put_nums
  2564 ;;		_put_nums_individual
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text16
  2569  0008FE                     __ptext16:
  2570                           	opt stack 0
  2571  0008FE                     _put_num:
  2572                           	opt stack 23
  2573                           
  2574                           ;incstack = 0
  2575                           ;put_num@num stored from wreg
  2576  0008FE  6E03               	movwf	put_num@num,c
  2577                           
  2578                           ;user.c: 61: char mask = 0x01;
  2579  000900  0E01               	movlw	1
  2580  000902  6E04               	movwf	put_num@mask,c
  2581                           
  2582                           ;user.c: 62: int i;
  2583                           ;user.c: 63: for(i= 0; i<8; i++)
  2584  000904  0E00               	movlw	0
  2585  000906  6E07               	movwf	put_num@i+1,c
  2586  000908  0E00               	movlw	0
  2587  00090A  6E06               	movwf	put_num@i,c
  2588  00090C                     i2l1870:
  2589  00090C  BE07               	btfsc	put_num@i+1,7,c
  2590  00090E  D006               	goto	i2l1874
  2591  000910  5007               	movf	put_num@i+1,w,c
  2592  000912  E120               	bnz	i2l178
  2593  000914  0E08               	movlw	8
  2594  000916  5C06               	subwf	put_num@i,w,c
  2595  000918  B0D8               	btfsc	status,0,c
  2596  00091A  0012               	return	
  2597  00091C                     i2l1874:
  2598                           
  2599                           ;user.c: 64: {
  2600                           ;user.c: 65: RB3 = num>>i & mask;
  2601  00091C  0E00               	movlw	0
  2602  00091E  6E05               	movwf	_put_num$857,c
  2603  000920  C006  F001         	movff	put_num@i,??_put_num
  2604  000924  C003  F002         	movff	put_num@num,??_put_num+1
  2605  000928  2A01               	incf	??_put_num,f,c
  2606  00092A  D002               	goto	i2u94_44
  2607  00092C                     i2u94_45:
  2608  00092C  90D8               	bcf	status,0,c
  2609  00092E  3202               	rrcf	??_put_num+1,f,c
  2610  000930                     i2u94_44:
  2611  000930  2E01               	decfsz	??_put_num,f,c
  2612  000932  D7FC               	goto	i2u94_45
  2613  000934  3002               	rrcf	??_put_num+1,w,c
  2614  000936  B0D8               	btfsc	status,0,c
  2615  000938  A004               	btfss	put_num@mask,0,c
  2616  00093A  D002               	goto	i2l1882
  2617  00093C  0E01               	movlw	1
  2618  00093E  6E05               	movwf	_put_num$857,c
  2619  000940                     i2l1882:
  2620  000940  B005               	btfsc	_put_num$857,0,c
  2621  000942  D002               	bra	i2u97_45
  2622  000944  9681               	bcf	3969,3,c	;volatile
  2623  000946  D001               	bra	i2u97_46
  2624  000948                     i2u97_45:
  2625  000948  8681               	bsf	3969,3,c	;volatile
  2626  00094A                     i2u97_46:
  2627                           
  2628                           ;user.c: 66: RB4 = 0;
  2629  00094A  9881               	bcf	3969,4,c	;volatile
  2630                           
  2631                           ;user.c: 67: RB4 = 1;
  2632  00094C  8881               	bsf	3969,4,c	;volatile
  2633  00094E  4A06               	infsnz	put_num@i,f,c
  2634  000950  2A07               	incf	put_num@i+1,f,c
  2635  000952  D7DC               	goto	i2l1870
  2636  000954                     i2l178:
  2637  000954  0012               	return		;funcret
  2638  000956                     __end_of_put_num:
  2639                           	opt stack 0
  2640                           pclatu	equ	0xFFB
  2641                           pclath	equ	0xFFA
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           intcon	equ	0xFF2
  2649                           intcon2	equ	0xFF1
  2650                           postinc0	equ	0xFEE
  2651                           fsr0h	equ	0xFEA
  2652                           fsr0l	equ	0xFE9
  2653                           wreg	equ	0xFE8
  2654                           indf1	equ	0xFE7
  2655                           fsr1h	equ	0xFE2
  2656                           fsr1l	equ	0xFE1
  2657                           indf2	equ	0xFDF
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function _get_num *****************
  2663 ;; Defined at:
  2664 ;;		line 90 in file "user.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  num             1    wreg     unsigned char 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  num             1    0[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      unsigned char 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2678 ;;      Params:         0       0       0       0       0       0       0       0       0
  2679 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2681 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2682 ;;Total ram usage:        1 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_put_nums
  2688 ;;		_put_nums_individual
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text17
  2693  000730                     __ptext17:
  2694                           	opt stack 0
  2695  000730                     _get_num:
  2696                           	opt stack 23
  2697                           
  2698                           ;incstack = 0
  2699                           ;get_num@num stored from wreg
  2700  000730  6E01               	movwf	get_num@num,c
  2701                           
  2702                           ;user.c: 92: switch(num)
  2703  000732  D022               	goto	i2l1964
  2704  000734                     i2l1894:
  2705  000734  0E30               	movlw	48
  2706  000736  0012               	return	
  2707  000738                     i2l1898:
  2708  000738  0E6D               	movlw	109
  2709  00073A  0012               	return	
  2710  00073C                     i2l1902:
  2711  00073C  0E79               	movlw	121
  2712  00073E  0012               	return	
  2713  000740                     i2l1906:
  2714  000740  0E33               	movlw	51
  2715  000742  0012               	return	
  2716  000744                     i2l1910:
  2717  000744  0E5B               	movlw	91
  2718  000746  0012               	return	
  2719  000748                     i2l1914:
  2720  000748  0E5F               	movlw	95
  2721  00074A  0012               	return	
  2722  00074C                     i2l1918:
  2723  00074C  0E70               	movlw	112
  2724  00074E  0012               	return	
  2725  000750                     i2l1922:
  2726  000750  0E7F               	movlw	127
  2727  000752  0012               	return	
  2728  000754                     i2l1926:
  2729  000754  0E73               	movlw	115
  2730  000756  0012               	return	
  2731  000758                     i2l1930:
  2732  000758  0E7E               	movlw	126
  2733  00075A  0012               	return	
  2734  00075C                     i2l1934:
  2735  00075C  0E3E               	movlw	62
  2736  00075E  0012               	return	
  2737  000760                     i2l1938:
  2738  000760  0E67               	movlw	103
  2739  000762  0012               	return	
  2740  000764                     i2l1942:
  2741  000764  0E37               	movlw	55
  2742  000766  0012               	return	
  2743  000768                     i2l1946:
  2744  000768  0E3D               	movlw	61
  2745  00076A  0012               	return	
  2746  00076C                     i2l1950:
  2747  00076C  0E15               	movlw	21
  2748  00076E  0012               	return	
  2749  000770                     i2l1954:
  2750  000770  0E00               	movlw	0
  2751  000772  0012               	return	
  2752  000774                     i2l1958:
  2753  000774  0E7F               	movlw	127
  2754                           
  2755                           ;user.c: 111: }
  2756  000776  0012               	return	
  2757  000778                     i2l1964:
  2758  000778  5001               	movf	get_num@num,w,c
  2759                           
  2760                           ; Switch size 1, requested type "space"
  2761                           ; Number of cases is 16, Range of values is 0 to 86
  2762                           ; switch strategies available:
  2763                           ; Name         Instructions Cycles
  2764                           ; simple_byte           49    25 (average)
  2765                           ;	Chosen strategy is simple_byte
  2766  00077A  0A00               	xorlw	0	; case 0
  2767  00077C  B4D8               	btfsc	status,2,c
  2768  00077E  D7EC               	goto	i2l1930
  2769  000780  0A01               	xorlw	1	; case 1
  2770  000782  B4D8               	btfsc	status,2,c
  2771  000784  D7D7               	goto	i2l1894
  2772  000786  0A03               	xorlw	3	; case 2
  2773  000788  B4D8               	btfsc	status,2,c
  2774  00078A  D7D6               	goto	i2l1898
  2775  00078C  0A01               	xorlw	1	; case 3
  2776  00078E  B4D8               	btfsc	status,2,c
  2777  000790  D7D5               	goto	i2l1902
  2778  000792  0A07               	xorlw	7	; case 4
  2779  000794  B4D8               	btfsc	status,2,c
  2780  000796  D7D4               	goto	i2l1906
  2781  000798  0A01               	xorlw	1	; case 5
  2782  00079A  B4D8               	btfsc	status,2,c
  2783  00079C  D7D3               	goto	i2l1910
  2784  00079E  0A03               	xorlw	3	; case 6
  2785  0007A0  B4D8               	btfsc	status,2,c
  2786  0007A2  D7D2               	goto	i2l1914
  2787  0007A4  0A01               	xorlw	1	; case 7
  2788  0007A6  B4D8               	btfsc	status,2,c
  2789  0007A8  D7D1               	goto	i2l1918
  2790  0007AA  0A0F               	xorlw	15	; case 8
  2791  0007AC  B4D8               	btfsc	status,2,c
  2792  0007AE  D7D0               	goto	i2l1922
  2793  0007B0  0A01               	xorlw	1	; case 9
  2794  0007B2  B4D8               	btfsc	status,2,c
  2795  0007B4  D7CF               	goto	i2l1926
  2796  0007B6  0A4D               	xorlw	77	; case 68
  2797  0007B8  B4D8               	btfsc	status,2,c
  2798  0007BA  D7D6               	goto	i2l1946
  2799  0007BC  0A0C               	xorlw	12	; case 72
  2800  0007BE  B4D8               	btfsc	status,2,c
  2801  0007C0  D7D1               	goto	i2l1942
  2802  0007C2  0A06               	xorlw	6	; case 78
  2803  0007C4  B4D8               	btfsc	status,2,c
  2804  0007C6  D7D2               	goto	i2l1950
  2805  0007C8  0A1E               	xorlw	30	; case 80
  2806  0007CA  B4D8               	btfsc	status,2,c
  2807  0007CC  D7C9               	goto	i2l1938
  2808  0007CE  0A05               	xorlw	5	; case 85
  2809  0007D0  B4D8               	btfsc	status,2,c
  2810  0007D2  D7C4               	goto	i2l1934
  2811  0007D4  0A03               	xorlw	3	; case 86
  2812  0007D6  B4D8               	btfsc	status,2,c
  2813  0007D8  D7CB               	goto	i2l1954
  2814  0007DA  D7CC               	goto	i2l1958
  2815  0007DC                     __end_of_get_num:
  2816                           	opt stack 0
  2817                           pclatu	equ	0xFFB
  2818                           pclath	equ	0xFFA
  2819                           tblptru	equ	0xFF8
  2820                           tblptrh	equ	0xFF7
  2821                           tblptrl	equ	0xFF6
  2822                           tablat	equ	0xFF5
  2823                           prodh	equ	0xFF4
  2824                           prodl	equ	0xFF3
  2825                           intcon	equ	0xFF2
  2826                           intcon2	equ	0xFF1
  2827                           postinc0	equ	0xFEE
  2828                           fsr0h	equ	0xFEA
  2829                           fsr0l	equ	0xFE9
  2830                           wreg	equ	0xFE8
  2831                           indf1	equ	0xFE7
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           indf2	equ	0xFDF
  2835                           fsr2h	equ	0xFDA
  2836                           fsr2l	equ	0xFD9
  2837                           status	equ	0xFD8
  2838                           
  2839 ;; *************** function _point_enable *****************
  2840 ;; Defined at:
  2841 ;;		line 114 in file "user.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		None
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2858 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_high_isr
  2865 ;;		_point_toggle
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text18
  2870  000B44                     __ptext18:
  2871                           	opt stack 0
  2872  000B44                     _point_enable:
  2873                           	opt stack 25
  2874                           
  2875                           ;user.c: 116: RB1 = 1;
  2876                           
  2877                           ;incstack = 0
  2878  000B44  8281               	bsf	3969,1,c	;volatile
  2879  000B46  0012               	return		;funcret
  2880  000B48                     __end_of_point_enable:
  2881                           	opt stack 0
  2882                           pclatu	equ	0xFFB
  2883                           pclath	equ	0xFFA
  2884                           tblptru	equ	0xFF8
  2885                           tblptrh	equ	0xFF7
  2886                           tblptrl	equ	0xFF6
  2887                           tablat	equ	0xFF5
  2888                           prodh	equ	0xFF4
  2889                           prodl	equ	0xFF3
  2890                           intcon	equ	0xFF2
  2891                           intcon2	equ	0xFF1
  2892                           postinc0	equ	0xFEE
  2893                           fsr0h	equ	0xFEA
  2894                           fsr0l	equ	0xFE9
  2895                           wreg	equ	0xFE8
  2896                           indf1	equ	0xFE7
  2897                           fsr1h	equ	0xFE2
  2898                           fsr1l	equ	0xFE1
  2899                           indf2	equ	0xFDF
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _point_disable *****************
  2905 ;; Defined at:
  2906 ;;		line 119 in file "user.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		None
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_high_isr
  2930 ;;		_point_toggle
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text19
  2935  000B48                     __ptext19:
  2936                           	opt stack 0
  2937  000B48                     _point_disable:
  2938                           	opt stack 25
  2939                           
  2940                           ;user.c: 121: RB1 = 0;
  2941                           
  2942                           ;incstack = 0
  2943  000B48  9281               	bcf	3969,1,c	;volatile
  2944  000B4A  0012               	return		;funcret
  2945  000B4C                     __end_of_point_disable:
  2946                           	opt stack 0
  2947                           pclatu	equ	0xFFB
  2948                           pclath	equ	0xFFA
  2949                           tblptru	equ	0xFF8
  2950                           tblptrh	equ	0xFF7
  2951                           tblptrl	equ	0xFF6
  2952                           tablat	equ	0xFF5
  2953                           prodh	equ	0xFF4
  2954                           prodl	equ	0xFF3
  2955                           intcon	equ	0xFF2
  2956                           intcon2	equ	0xFF1
  2957                           postinc0	equ	0xFEE
  2958                           fsr0h	equ	0xFEA
  2959                           fsr0l	equ	0xFE9
  2960                           wreg	equ	0xFE8
  2961                           indf1	equ	0xFE7
  2962                           fsr1h	equ	0xFE2
  2963                           fsr1l	equ	0xFE1
  2964                           indf2	equ	0xFDF
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _ir_get_human_code *****************
  2970 ;; Defined at:
  2971 ;;		line 366 in file "user.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  code            2    0[COMRAM] int 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  human_read_c    1    4[COMRAM] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      unsigned char 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2985 ;;      Params:         2       0       0       0       0       0       0       0       0
  2986 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2987 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2988 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2989 ;;Total ram usage:        5 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_high_isr
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text20
  2999  0003FA                     __ptext20:
  3000                           	opt stack 0
  3001  0003FA                     _ir_get_human_code:
  3002                           	opt stack 25
  3003                           
  3004                           ;user.c: 368: char human_read_code;
  3005                           ;user.c: 369: switch(code)
  3006                           
  3007                           ;incstack = 0
  3008  0003FA  D035               	goto	i2l2132
  3009  0003FC                     i2l2092:
  3010                           
  3011                           ;user.c: 372: human_read_code = 10;
  3012  0003FC  0E0A               	movlw	10
  3013  0003FE  6E05               	movwf	ir_get_human_code@human_read_code,c
  3014                           
  3015                           ;user.c: 373: break;
  3016  000400  0012               	return	
  3017  000402                     i2l2094:
  3018                           
  3019                           ;user.c: 375: human_read_code = 11;
  3020  000402  0E0B               	movlw	11
  3021  000404  6E05               	movwf	ir_get_human_code@human_read_code,c
  3022                           
  3023                           ;user.c: 376: break;
  3024  000406  0012               	return	
  3025  000408                     i2l2096:
  3026                           
  3027                           ;user.c: 378: human_read_code = 12;
  3028  000408  0E0C               	movlw	12
  3029  00040A  6E05               	movwf	ir_get_human_code@human_read_code,c
  3030                           
  3031                           ;user.c: 379: break;
  3032  00040C  0012               	return	
  3033  00040E                     i2l2098:
  3034                           
  3035                           ;user.c: 381: human_read_code = 13;
  3036  00040E  0E0D               	movlw	13
  3037  000410  6E05               	movwf	ir_get_human_code@human_read_code,c
  3038                           
  3039                           ;user.c: 382: break;
  3040  000412  0012               	return	
  3041  000414                     i2l2100:
  3042                           
  3043                           ;user.c: 384: human_read_code = 14;
  3044  000414  0E0E               	movlw	14
  3045  000416  6E05               	movwf	ir_get_human_code@human_read_code,c
  3046                           
  3047                           ;user.c: 385: break;
  3048  000418  0012               	return	
  3049  00041A                     i2l2102:
  3050                           
  3051                           ;user.c: 387: human_read_code = 1;
  3052  00041A  0E01               	movlw	1
  3053  00041C  6E05               	movwf	ir_get_human_code@human_read_code,c
  3054                           
  3055                           ;user.c: 388: break;
  3056  00041E  0012               	return	
  3057  000420                     i2l2104:
  3058                           
  3059                           ;user.c: 390: human_read_code = 2;
  3060  000420  0E02               	movlw	2
  3061  000422  6E05               	movwf	ir_get_human_code@human_read_code,c
  3062                           
  3063                           ;user.c: 391: break;
  3064  000424  0012               	return	
  3065  000426                     i2l2106:
  3066                           
  3067                           ;user.c: 393: human_read_code = 3;
  3068  000426  0E03               	movlw	3
  3069  000428  6E05               	movwf	ir_get_human_code@human_read_code,c
  3070                           
  3071                           ;user.c: 394: break;
  3072  00042A  0012               	return	
  3073  00042C                     i2l2108:
  3074                           
  3075                           ;user.c: 396: human_read_code = 4;
  3076  00042C  0E04               	movlw	4
  3077  00042E  6E05               	movwf	ir_get_human_code@human_read_code,c
  3078                           
  3079                           ;user.c: 397: break;
  3080  000430  0012               	return	
  3081  000432                     i2l2110:
  3082                           
  3083                           ;user.c: 399: human_read_code = 5;
  3084  000432  0E05               	movlw	5
  3085  000434  6E05               	movwf	ir_get_human_code@human_read_code,c
  3086                           
  3087                           ;user.c: 400: break;
  3088  000436  0012               	return	
  3089  000438                     i2l2112:
  3090                           
  3091                           ;user.c: 402: human_read_code = 6;
  3092  000438  0E06               	movlw	6
  3093  00043A  6E05               	movwf	ir_get_human_code@human_read_code,c
  3094                           
  3095                           ;user.c: 403: break;
  3096  00043C  0012               	return	
  3097  00043E                     i2l2114:
  3098                           
  3099                           ;user.c: 405: human_read_code = 7;
  3100  00043E  0E07               	movlw	7
  3101  000440  6E05               	movwf	ir_get_human_code@human_read_code,c
  3102                           
  3103                           ;user.c: 406: break;
  3104  000442  0012               	return	
  3105  000444                     i2l2116:
  3106                           
  3107                           ;user.c: 408: human_read_code = 8;
  3108  000444  0E08               	movlw	8
  3109  000446  6E05               	movwf	ir_get_human_code@human_read_code,c
  3110                           
  3111                           ;user.c: 409: break;
  3112  000448  0012               	return	
  3113  00044A                     i2l2118:
  3114                           
  3115                           ;user.c: 411: human_read_code = 9;
  3116  00044A  0E09               	movlw	9
  3117  00044C  6E05               	movwf	ir_get_human_code@human_read_code,c
  3118                           
  3119                           ;user.c: 412: break;
  3120  00044E  0012               	return	
  3121  000450                     i2l2120:
  3122                           
  3123                           ;user.c: 414: human_read_code = 0;
  3124  000450  0E00               	movlw	0
  3125  000452  6E05               	movwf	ir_get_human_code@human_read_code,c
  3126                           
  3127                           ;user.c: 415: break;
  3128  000454  0012               	return	
  3129  000456                     i2l2122:
  3130                           
  3131                           ;user.c: 417: human_read_code = 15;
  3132  000456  0E0F               	movlw	15
  3133  000458  6E05               	movwf	ir_get_human_code@human_read_code,c
  3134                           
  3135                           ;user.c: 418: break;
  3136  00045A  0012               	return	
  3137  00045C                     i2l2124:
  3138                           
  3139                           ;user.c: 420: human_read_code = 16;
  3140  00045C  0E10               	movlw	16
  3141  00045E  6E05               	movwf	ir_get_human_code@human_read_code,c
  3142                           
  3143                           ;user.c: 421: break;
  3144  000460  0012               	return	
  3145  000462                     i2l2126:
  3146                           
  3147                           ;user.c: 423: return -1;
  3148  000462  0EFF               	movlw	255
  3149                           
  3150                           ;user.c: 424: }
  3151  000464  0012               	return	
  3152  000466                     i2l2132:
  3153  000466  C001  F003         	movff	ir_get_human_code@code,??_ir_get_human_code
  3154  00046A  C002  F004         	movff	ir_get_human_code@code+1,??_ir_get_human_code+1
  3155                           
  3156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 8 sub-sw
      +                          itches
  3157                           ; Switch size 1, requested type "space"
  3158                           ; Number of cases is 8, Range of values is 170 to 238
  3159                           ; switch strategies available:
  3160                           ; Name         Instructions Cycles
  3161                           ; simple_byte           25    13 (average)
  3162                           ;	Chosen strategy is simple_byte
  3163  00046E  5004               	movf	??_ir_get_human_code+1,w,c
  3164  000470  0AAA               	xorlw	170	; case 170
  3165  000472  B4D8               	btfsc	status,2,c
  3166  000474  D016               	goto	i2l2710
  3167  000476  0A01               	xorlw	1	; case 171
  3168  000478  B4D8               	btfsc	status,2,c
  3169  00047A  D01E               	goto	i2l2712
  3170  00047C  0A05               	xorlw	5	; case 174
  3171  00047E  B4D8               	btfsc	status,2,c
  3172  000480  D023               	goto	i2l2714
  3173  000482  0A14               	xorlw	20	; case 186
  3174  000484  B4D8               	btfsc	status,2,c
  3175  000486  D028               	goto	i2l2716
  3176  000488  0A01               	xorlw	1	; case 187
  3177  00048A  B4D8               	btfsc	status,2,c
  3178  00048C  D02A               	goto	i2l2718
  3179  00048E  0A51               	xorlw	81	; case 234
  3180  000490  B4D8               	btfsc	status,2,c
  3181  000492  D032               	goto	i2l2720
  3182  000494  0A01               	xorlw	1	; case 235
  3183  000496  B4D8               	btfsc	status,2,c
  3184  000498  D034               	goto	i2l2722
  3185  00049A  0A05               	xorlw	5	; case 238
  3186  00049C  B4D8               	btfsc	status,2,c
  3187  00049E  D039               	goto	i2l2724
  3188  0004A0  D7E0               	goto	i2l2126
  3189  0004A2                     i2l2710:
  3190                           
  3191                           ; Switch size 1, requested type "space"
  3192                           ; Number of cases is 3, Range of values is 186 to 238
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte           10     6 (average)
  3196                           ;	Chosen strategy is simple_byte
  3197  0004A2  5003               	movf	??_ir_get_human_code,w,c
  3198  0004A4  0ABA               	xorlw	186	; case 186
  3199  0004A6  B4D8               	btfsc	status,2,c
  3200  0004A8  D7D6               	goto	i2l2122
  3201  0004AA  0A50               	xorlw	80	; case 234
  3202  0004AC  B4D8               	btfsc	status,2,c
  3203  0004AE  D7AF               	goto	i2l2098
  3204  0004B0  0A04               	xorlw	4	; case 238
  3205  0004B2  B4D8               	btfsc	status,2,c
  3206  0004B4  D7AF               	goto	i2l2100
  3207  0004B6  D7D5               	goto	i2l2126
  3208  0004B8                     i2l2712:
  3209                           
  3210                           ; Switch size 1, requested type "space"
  3211                           ; Number of cases is 2, Range of values is 170 to 186
  3212                           ; switch strategies available:
  3213                           ; Name         Instructions Cycles
  3214                           ; simple_byte            7     4 (average)
  3215                           ;	Chosen strategy is simple_byte
  3216  0004B8  5003               	movf	??_ir_get_human_code,w,c
  3217  0004BA  0AAA               	xorlw	170	; case 170
  3218  0004BC  B4D8               	btfsc	status,2,c
  3219  0004BE  D7BF               	goto	i2l2114
  3220  0004C0  0A10               	xorlw	16	; case 186
  3221  0004C2  B4D8               	btfsc	status,2,c
  3222  0004C4  D79B               	goto	i2l2092
  3223  0004C6  D7CD               	goto	i2l2126
  3224  0004C8                     i2l2714:
  3225                           
  3226                           ; Switch size 1, requested type "space"
  3227                           ; Number of cases is 2, Range of values is 186 to 234
  3228                           ; switch strategies available:
  3229                           ; Name         Instructions Cycles
  3230                           ; simple_byte            7     4 (average)
  3231                           ;	Chosen strategy is simple_byte
  3232  0004C8  5003               	movf	??_ir_get_human_code,w,c
  3233  0004CA  0ABA               	xorlw	186	; case 186
  3234  0004CC  B4D8               	btfsc	status,2,c
  3235  0004CE  D7C6               	goto	i2l2124
  3236  0004D0  0A50               	xorlw	80	; case 234
  3237  0004D2  B4D8               	btfsc	status,2,c
  3238  0004D4  D7AB               	goto	i2l2108
  3239  0004D6  D7C5               	goto	i2l2126
  3240  0004D8                     i2l2716:
  3241                           
  3242                           ; Switch size 1, requested type "space"
  3243                           ; Number of cases is 1, Range of values is 186 to 186
  3244                           ; switch strategies available:
  3245                           ; Name         Instructions Cycles
  3246                           ; simple_byte            4     3 (average)
  3247                           ;	Chosen strategy is simple_byte
  3248  0004D8  5003               	movf	??_ir_get_human_code,w,c
  3249  0004DA  0ABA               	xorlw	186	; case 186
  3250  0004DC  B4D8               	btfsc	status,2,c
  3251  0004DE  D7B8               	goto	i2l2120
  3252  0004E0  D7C0               	goto	i2l2126
  3253  0004E2                     i2l2718:
  3254                           
  3255                           ; Switch size 1, requested type "space"
  3256                           ; Number of cases is 3, Range of values is 170 to 186
  3257                           ; switch strategies available:
  3258                           ; Name         Instructions Cycles
  3259                           ; simple_byte           10     6 (average)
  3260                           ;	Chosen strategy is simple_byte
  3261  0004E2  5003               	movf	??_ir_get_human_code,w,c
  3262  0004E4  0AAA               	xorlw	170	; case 170
  3263  0004E6  B4D8               	btfsc	status,2,c
  3264  0004E8  D7A4               	goto	i2l2110
  3265  0004EA  0A04               	xorlw	4	; case 174
  3266  0004EC  B4D8               	btfsc	status,2,c
  3267  0004EE  D79B               	goto	i2l2106
  3268  0004F0  0A14               	xorlw	20	; case 186
  3269  0004F2  B4D8               	btfsc	status,2,c
  3270  0004F4  D7A1               	goto	i2l2112
  3271  0004F6  D7B5               	goto	i2l2126
  3272  0004F8                     i2l2720:
  3273                           
  3274                           ; Switch size 1, requested type "space"
  3275                           ; Number of cases is 1, Range of values is 170 to 170
  3276                           ; switch strategies available:
  3277                           ; Name         Instructions Cycles
  3278                           ; simple_byte            4     3 (average)
  3279                           ;	Chosen strategy is simple_byte
  3280  0004F8  5003               	movf	??_ir_get_human_code,w,c
  3281  0004FA  0AAA               	xorlw	170	; case 170
  3282  0004FC  B4D8               	btfsc	status,2,c
  3283  0004FE  D781               	goto	i2l2094
  3284  000500  D7B0               	goto	i2l2126
  3285  000502                     i2l2722:
  3286                           
  3287                           ; Switch size 1, requested type "space"
  3288                           ; Number of cases is 2, Range of values is 174 to 186
  3289                           ; switch strategies available:
  3290                           ; Name         Instructions Cycles
  3291                           ; simple_byte            7     4 (average)
  3292                           ;	Chosen strategy is simple_byte
  3293  000502  5003               	movf	??_ir_get_human_code,w,c
  3294  000504  0AAE               	xorlw	174	; case 174
  3295  000506  B4D8               	btfsc	status,2,c
  3296  000508  D77F               	goto	i2l2096
  3297  00050A  0A14               	xorlw	20	; case 186
  3298  00050C  B4D8               	btfsc	status,2,c
  3299  00050E  D785               	goto	i2l2102
  3300  000510  D7A8               	goto	i2l2126
  3301  000512                     i2l2724:
  3302                           
  3303                           ; Switch size 1, requested type "space"
  3304                           ; Number of cases is 3, Range of values is 174 to 234
  3305                           ; switch strategies available:
  3306                           ; Name         Instructions Cycles
  3307                           ; simple_byte           10     6 (average)
  3308                           ;	Chosen strategy is simple_byte
  3309  000512  5003               	movf	??_ir_get_human_code,w,c
  3310  000514  0AAE               	xorlw	174	; case 174
  3311  000516  B4D8               	btfsc	status,2,c
  3312  000518  D783               	goto	i2l2104
  3313  00051A  0A14               	xorlw	20	; case 186
  3314  00051C  B4D8               	btfsc	status,2,c
  3315  00051E  D795               	goto	i2l2118
  3316  000520  0A50               	xorlw	80	; case 234
  3317  000522  B4D8               	btfsc	status,2,c
  3318  000524  D78F               	goto	i2l2116
  3319  000526  D79D               	goto	i2l2126
  3320  000528                     __end_of_ir_get_human_code:
  3321                           	opt stack 0
  3322                           pclatu	equ	0xFFB
  3323                           pclath	equ	0xFFA
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           prodh	equ	0xFF4
  3329                           prodl	equ	0xFF3
  3330                           intcon	equ	0xFF2
  3331                           intcon2	equ	0xFF1
  3332                           postinc0	equ	0xFEE
  3333                           fsr0h	equ	0xFEA
  3334                           fsr0l	equ	0xFE9
  3335                           wreg	equ	0xFE8
  3336                           indf1	equ	0xFE7
  3337                           fsr1h	equ	0xFE2
  3338                           fsr1l	equ	0xFE1
  3339                           indf2	equ	0xFDF
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _get_next_state *****************
  3345 ;; Defined at:
  3346 ;;		line 329 in file "user.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  state           2   13[COMRAM] int 
  3349 ;;  code            2   15[COMRAM] int 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  hour            1   19[COMRAM] unsigned char 
  3352 ;;  minutes         1   18[COMRAM] unsigned char 
  3353 ;;  seconds         1   17[COMRAM] unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  2   13[COMRAM] int 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3363 ;;      Params:         4       0       0       0       0       0       0       0       0
  3364 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3366 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3367 ;;Total ram usage:        7 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    4
  3370 ;; This function calls:
  3371 ;;		_set_time
  3372 ;; This function is called by:
  3373 ;;		_high_isr
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text21
  3378  000528                     __ptext21:
  3379                           	opt stack 0
  3380  000528                     _get_next_state:
  3381                           	opt stack 21
  3382                           
  3383                           ;user.c: 331: if(state == 0 && code == 0xAABA)
  3384                           
  3385                           ;incstack = 0
  3386  000528  500E               	movf	get_next_state@state,w,c
  3387  00052A  100F               	iorwf	get_next_state@state+1,w,c
  3388  00052C  A4D8               	btfss	status,2,c
  3389  00052E  D007               	goto	i2l2172
  3390  000530  0EBA               	movlw	186
  3391  000532  1810               	xorwf	get_next_state@code,w,c
  3392  000534  E104               	bnz	i2l2172
  3393  000536  0EAA               	movlw	170
  3394  000538  1811               	xorwf	get_next_state@code+1,w,c
  3395  00053A  B4D8               	btfsc	status,2,c
  3396  00053C  D03E               	goto	i2l2194
  3397  00053E                     i2l2172:
  3398                           
  3399                           ;user.c: 333: else if(state == 1 && code == 0xAAEE)
  3400  00053E  040E               	decf	get_next_state@state,w,c
  3401  000540  100F               	iorwf	get_next_state@state+1,w,c
  3402  000542  A4D8               	btfss	status,2,c
  3403  000544  D00C               	goto	i2l2178
  3404  000546  0EEE               	movlw	238
  3405  000548  1810               	xorwf	get_next_state@code,w,c
  3406  00054A  E109               	bnz	i2l2178
  3407  00054C  0EAA               	movlw	170
  3408  00054E  1811               	xorwf	get_next_state@code+1,w,c
  3409  000550  A4D8               	btfss	status,2,c
  3410  000552  D005               	goto	i2l2178
  3411                           
  3412                           ;user.c: 334: next = 2;
  3413  000554  0E00               	movlw	0
  3414  000556  0100               	movlb	0	; () banked
  3415  000558  6FA2               	movwf	(_next+1)& (0+255),b
  3416  00055A  0E02               	movlw	2
  3417  00055C  D032               	goto	L9
  3418  00055E                     i2l2178:
  3419                           
  3420                           ;user.c: 335: else if(state == 2 && code == 0xAAEE)
  3421  00055E  0E02               	movlw	2
  3422  000560  180E               	xorwf	get_next_state@state,w,c
  3423  000562  100F               	iorwf	get_next_state@state+1,w,c
  3424  000564  A4D8               	btfss	status,2,c
  3425  000566  D00C               	goto	i2l2184
  3426  000568  0EEE               	movlw	238
  3427  00056A  1810               	xorwf	get_next_state@code,w,c
  3428  00056C  E109               	bnz	i2l2184
  3429  00056E  0EAA               	movlw	170
  3430  000570  1811               	xorwf	get_next_state@code+1,w,c
  3431  000572  A4D8               	btfss	status,2,c
  3432  000574  D005               	goto	i2l2184
  3433                           
  3434                           ;user.c: 336: next = 3;
  3435  000576  0E00               	movlw	0
  3436  000578  0100               	movlb	0	; () banked
  3437  00057A  6FA2               	movwf	(_next+1)& (0+255),b
  3438  00057C  0E03               	movlw	3
  3439  00057E  D021               	goto	L9
  3440  000580                     i2l2184:
  3441                           
  3442                           ;user.c: 337: else if(state == 3 && code == 0xAAEE)
  3443  000580  0E03               	movlw	3
  3444  000582  180E               	xorwf	get_next_state@state,w,c
  3445  000584  100F               	iorwf	get_next_state@state+1,w,c
  3446  000586  A4D8               	btfss	status,2,c
  3447  000588  D00C               	goto	i2l2190
  3448  00058A  0EEE               	movlw	238
  3449  00058C  1810               	xorwf	get_next_state@code,w,c
  3450  00058E  E109               	bnz	i2l2190
  3451  000590  0EAA               	movlw	170
  3452  000592  1811               	xorwf	get_next_state@code+1,w,c
  3453  000594  A4D8               	btfss	status,2,c
  3454  000596  D005               	goto	i2l2190
  3455                           
  3456                           ;user.c: 338: next = 4;
  3457  000598  0E00               	movlw	0
  3458  00059A  0100               	movlb	0	; () banked
  3459  00059C  6FA2               	movwf	(_next+1)& (0+255),b
  3460  00059E  0E04               	movlw	4
  3461  0005A0  D010               	goto	L9
  3462  0005A2                     i2l2190:
  3463                           
  3464                           ;user.c: 339: else if(state == 4 && code == 0xAAEE)
  3465  0005A2  0E04               	movlw	4
  3466  0005A4  180E               	xorwf	get_next_state@state,w,c
  3467  0005A6  100F               	iorwf	get_next_state@state+1,w,c
  3468  0005A8  A4D8               	btfss	status,2,c
  3469  0005AA  D00D               	goto	i2l2196
  3470  0005AC  0EEE               	movlw	238
  3471  0005AE  1810               	xorwf	get_next_state@code,w,c
  3472  0005B0  E10A               	bnz	i2l2196
  3473  0005B2  0EAA               	movlw	170
  3474  0005B4  1811               	xorwf	get_next_state@code+1,w,c
  3475  0005B6  A4D8               	btfss	status,2,c
  3476  0005B8  D006               	goto	i2l2196
  3477  0005BA                     i2l2194:
  3478                           
  3479                           ;user.c: 340: next = 1;
  3480  0005BA  0E00               	movlw	0
  3481  0005BC  0100               	movlb	0	; () banked
  3482  0005BE  6FA2               	movwf	(_next+1)& (0+255),b
  3483  0005C0  0E01               	movlw	1
  3484  0005C2                     L9:
  3485  0005C2  6FA1               	movwf	_next& (0+255),b
  3486  0005C4  D036               	goto	i2l292
  3487  0005C6                     i2l2196:
  3488                           
  3489                           ;user.c: 341: else if((state == 1 || state == 2 || state == 3 || state == 4) && code == 
      +                          0xAEBA)
  3490  0005C6  040E               	decf	get_next_state@state,w,c
  3491  0005C8  100F               	iorwf	get_next_state@state+1,w,c
  3492  0005CA  B4D8               	btfsc	status,2,c
  3493  0005CC  D00F               	goto	i2l2204
  3494  0005CE  0E02               	movlw	2
  3495  0005D0  180E               	xorwf	get_next_state@state,w,c
  3496  0005D2  100F               	iorwf	get_next_state@state+1,w,c
  3497  0005D4  B4D8               	btfsc	status,2,c
  3498  0005D6  D00A               	goto	i2l2204
  3499  0005D8  0E03               	movlw	3
  3500  0005DA  180E               	xorwf	get_next_state@state,w,c
  3501  0005DC  100F               	iorwf	get_next_state@state+1,w,c
  3502  0005DE  B4D8               	btfsc	status,2,c
  3503  0005E0  D005               	goto	i2l2204
  3504  0005E2  0E04               	movlw	4
  3505  0005E4  180E               	xorwf	get_next_state@state,w,c
  3506  0005E6  100F               	iorwf	get_next_state@state+1,w,c
  3507  0005E8  A4D8               	btfss	status,2,c
  3508  0005EA  D023               	goto	i2l292
  3509  0005EC                     i2l2204:
  3510  0005EC  0EBA               	movlw	186
  3511  0005EE  1810               	xorwf	get_next_state@code,w,c
  3512  0005F0  E120               	bnz	i2l292
  3513  0005F2  0EAE               	movlw	174
  3514  0005F4  1811               	xorwf	get_next_state@code+1,w,c
  3515  0005F6  A4D8               	btfss	status,2,c
  3516  0005F8  D01C               	goto	i2l292
  3517                           
  3518                           ;user.c: 342: {
  3519                           ;user.c: 343: next = 0;
  3520  0005FA  0E00               	movlw	0
  3521  0005FC  0100               	movlb	0	; () banked
  3522  0005FE  6FA2               	movwf	(_next+1)& (0+255),b
  3523  000600  0E00               	movlw	0
  3524  000602  6FA1               	movwf	_next& (0+255),b
  3525                           
  3526                           ;user.c: 344: char seconds = 0;
  3527  000604  0E00               	movlw	0
  3528  000606  6E12               	movwf	get_next_state@seconds,c
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;user.c: 345: char minutes = aux1[0] + aux1[1]*10;
  3532  000608  0100               	movlb	0	; () banked
  3533  00060A  51AB               	movf	(_aux1+1)& (0+255),w,b
  3534  00060C  0D0A               	mullw	10
  3535  00060E  50F3               	movf	prodl,w,c
  3536  000610  0100               	movlb	0	; () banked
  3537  000612  25AA               	addwf	_aux1& (0+255),w,b
  3538  000614  6E13               	movwf	get_next_state@minutes,c
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;user.c: 346: char hour = aux1[2] + aux1[3]*10;
  3542  000616  0100               	movlb	0	; () banked
  3543  000618  51AD               	movf	(_aux1+3)& (0+255),w,b
  3544  00061A  0D0A               	mullw	10
  3545  00061C  50F3               	movf	prodl,w,c
  3546  00061E  0100               	movlb	0	; () banked
  3547  000620  25AC               	addwf	(_aux1+2)& (0+255),w,b
  3548  000622  6E14               	movwf	get_next_state@hour,c
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;user.c: 347: set_time(seconds,minutes,hour);
  3552  000624  C013  F008         	movff	get_next_state@minutes,set_time@minutes
  3553  000628  C014  F009         	movff	get_next_state@hour,set_time@hour
  3554  00062C  5012               	movf	get_next_state@seconds,w,c
  3555  00062E  EC24  F005         	call	_set_time
  3556  000632                     i2l292:
  3557                           
  3558                           ;user.c: 352: return next;
  3559  000632  C0A1  F00E         	movff	_next,?_get_next_state
  3560  000636  C0A2  F00F         	movff	_next+1,?_get_next_state+1
  3561  00063A  0012               	return		;funcret
  3562  00063C                     __end_of_get_next_state:
  3563                           	opt stack 0
  3564                           pclatu	equ	0xFFB
  3565                           pclath	equ	0xFFA
  3566                           tblptru	equ	0xFF8
  3567                           tblptrh	equ	0xFF7
  3568                           tblptrl	equ	0xFF6
  3569                           tablat	equ	0xFF5
  3570                           prodh	equ	0xFF4
  3571                           prodl	equ	0xFF3
  3572                           intcon	equ	0xFF2
  3573                           intcon2	equ	0xFF1
  3574                           postinc0	equ	0xFEE
  3575                           fsr0h	equ	0xFEA
  3576                           fsr0l	equ	0xFE9
  3577                           wreg	equ	0xFE8
  3578                           indf1	equ	0xFE7
  3579                           fsr1h	equ	0xFE2
  3580                           fsr1l	equ	0xFE1
  3581                           indf2	equ	0xFDF
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _set_time *****************
  3587 ;; Defined at:
  3588 ;;		line 194 in file "user.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  seconds         1    wreg     unsigned char 
  3591 ;;  minutes         1    7[COMRAM] unsigned char 
  3592 ;;  hour            1    8[COMRAM] unsigned char 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  seconds         1    9[COMRAM] unsigned char 
  3595 ;;  hour_reg        1   12[COMRAM] unsigned char 
  3596 ;;  min_reg         1   11[COMRAM] unsigned char 
  3597 ;;  sec_reg         1   10[COMRAM] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3607 ;;      Params:         2       0       0       0       0       0       0       0       0
  3608 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        6 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    3
  3614 ;; This function calls:
  3615 ;;		_byte_write
  3616 ;;		_get_hour_reg
  3617 ;;		_get_seconds_reg
  3618 ;; This function is called by:
  3619 ;;		_get_next_state
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text22
  3624  000A48                     __ptext22:
  3625                           	opt stack 0
  3626  000A48                     _set_time:
  3627                           	opt stack 21
  3628                           
  3629                           ;incstack = 0
  3630                           ;set_time@seconds stored from wreg
  3631  000A48  6E0A               	movwf	set_time@seconds,c
  3632                           
  3633                           ;user.c: 197: char sec_reg = get_seconds_reg(seconds);
  3634  000A4A  500A               	movf	set_time@seconds,w,c
  3635  000A4C  ECD6  F004         	call	_get_seconds_reg
  3636  000A50  6E0B               	movwf	set_time@sec_reg,c
  3637                           
  3638                           ;user.c: 198: char min_reg = get_seconds_reg(minutes);
  3639  000A52  5008               	movf	set_time@minutes,w,c
  3640  000A54  ECD6  F004         	call	_get_seconds_reg
  3641  000A58  6E0C               	movwf	set_time@min_reg,c
  3642                           
  3643                           ;user.c: 199: char hour_reg = get_hour_reg(hour);
  3644  000A5A  5009               	movf	set_time@hour,w,c
  3645  000A5C  EC5C  F005         	call	_get_hour_reg
  3646  000A60  6E0D               	movwf	set_time@hour_reg,c
  3647                           
  3648                           ;user.c: 201: byte_write(0x80,sec_reg);
  3649  000A62  C00B  F006         	movff	set_time@sec_reg,byte_write@value
  3650  000A66  0E80               	movlw	128
  3651  000A68  EC7F  F005         	call	_byte_write
  3652                           
  3653                           ;user.c: 202: byte_write(0x82,min_reg);
  3654  000A6C  C00C  F006         	movff	set_time@min_reg,byte_write@value
  3655  000A70  0E82               	movlw	130
  3656  000A72  EC7F  F005         	call	_byte_write
  3657                           
  3658                           ;user.c: 203: byte_write(0x84,hour_reg);
  3659  000A76  C00D  F006         	movff	set_time@hour_reg,byte_write@value
  3660  000A7A  0E84               	movlw	132
  3661  000A7C  EC7F  F005         	call	_byte_write
  3662  000A80  0012               	return		;funcret
  3663  000A82                     __end_of_set_time:
  3664                           	opt stack 0
  3665                           pclatu	equ	0xFFB
  3666                           pclath	equ	0xFFA
  3667                           tblptru	equ	0xFF8
  3668                           tblptrh	equ	0xFF7
  3669                           tblptrl	equ	0xFF6
  3670                           tablat	equ	0xFF5
  3671                           prodh	equ	0xFF4
  3672                           prodl	equ	0xFF3
  3673                           intcon	equ	0xFF2
  3674                           intcon2	equ	0xFF1
  3675                           postinc0	equ	0xFEE
  3676                           fsr0h	equ	0xFEA
  3677                           fsr0l	equ	0xFE9
  3678                           wreg	equ	0xFE8
  3679                           indf1	equ	0xFE7
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           indf2	equ	0xFDF
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _get_seconds_reg *****************
  3688 ;; Defined at:
  3689 ;;		line 250 in file "user.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  seconds         1    wreg     unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  seconds         1    1[COMRAM] unsigned char 
  3694 ;;  res             1    0[COMRAM] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      unsigned char 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3704 ;;      Params:         0       0       0       0       0       0       0       0       0
  3705 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3707 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_set_time
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text23
  3718  0009AC                     __ptext23:
  3719                           	opt stack 0
  3720  0009AC                     _get_seconds_reg:
  3721                           	opt stack 23
  3722                           
  3723                           ;incstack = 0
  3724                           ;get_seconds_reg@seconds stored from wreg
  3725  0009AC  6E02               	movwf	get_seconds_reg@seconds,c
  3726                           
  3727                           ;user.c: 252: char res = 0;
  3728  0009AE  0E00               	movlw	0
  3729  0009B0  6E01               	movwf	get_seconds_reg@res,c
  3730                           
  3731                           ;user.c: 253: if(seconds<10)
  3732  0009B2  0E0A               	movlw	10
  3733  0009B4  6002               	cpfslt	get_seconds_reg@seconds,c
  3734  0009B6  D003               	goto	i2l2006
  3735                           
  3736                           ;user.c: 254: {
  3737                           ;user.c: 255: res = seconds;
  3738  0009B8  C002  F001         	movff	get_seconds_reg@seconds,get_seconds_reg@res
  3739                           
  3740                           ;user.c: 256: }
  3741  0009BC  D020               	goto	i2l2024
  3742  0009BE                     i2l2006:
  3743                           
  3744                           ;user.c: 257: else if(seconds <20)
  3745  0009BE  0E14               	movlw	20
  3746  0009C0  6002               	cpfslt	get_seconds_reg@seconds,c
  3747  0009C2  D004               	goto	i2l2010
  3748                           
  3749                           ;user.c: 258: {
  3750                           ;user.c: 259: res = 1<<4 | (seconds - 10);
  3751  0009C4  5002               	movf	get_seconds_reg@seconds,w,c
  3752  0009C6  0FF6               	addlw	246
  3753  0009C8  0910               	iorlw	16
  3754  0009CA  D018               	goto	L13
  3755  0009CC                     i2l2010:
  3756                           
  3757                           ;user.c: 261: else if(seconds <30)
  3758  0009CC  0E1E               	movlw	30
  3759  0009CE  6002               	cpfslt	get_seconds_reg@seconds,c
  3760  0009D0  D004               	goto	i2l2014
  3761                           
  3762                           ;user.c: 262: {
  3763                           ;user.c: 263: res = 2<<4 | (seconds -20);
  3764  0009D2  5002               	movf	get_seconds_reg@seconds,w,c
  3765  0009D4  0FEC               	addlw	236
  3766  0009D6  0920               	iorlw	32
  3767  0009D8  D011               	goto	L13
  3768  0009DA                     i2l2014:
  3769                           
  3770                           ;user.c: 265: else if(seconds <40)
  3771  0009DA  0E28               	movlw	40
  3772  0009DC  6002               	cpfslt	get_seconds_reg@seconds,c
  3773  0009DE  D004               	goto	i2l2018
  3774                           
  3775                           ;user.c: 266: {
  3776                           ;user.c: 267: res = 3<<4 | (seconds - 30);
  3777  0009E0  5002               	movf	get_seconds_reg@seconds,w,c
  3778  0009E2  0FE2               	addlw	226
  3779  0009E4  0930               	iorlw	48
  3780  0009E6  D00A               	goto	L13
  3781  0009E8                     i2l2018:
  3782                           
  3783                           ;user.c: 269: else if(seconds <50)
  3784  0009E8  0E32               	movlw	50
  3785  0009EA  6002               	cpfslt	get_seconds_reg@seconds,c
  3786  0009EC  D004               	goto	i2l2022
  3787                           
  3788                           ;user.c: 270: {
  3789                           ;user.c: 271: res = 4<<4 | (seconds - 40);
  3790  0009EE  5002               	movf	get_seconds_reg@seconds,w,c
  3791  0009F0  0FD8               	addlw	216
  3792  0009F2  0940               	iorlw	64
  3793  0009F4  D003               	goto	L13
  3794  0009F6                     i2l2022:
  3795                           
  3796                           ;user.c: 273: else
  3797                           ;user.c: 274: {
  3798                           ;user.c: 275: res = 5<<4 | (seconds -50);
  3799  0009F6  5002               	movf	get_seconds_reg@seconds,w,c
  3800  0009F8  0FCE               	addlw	206
  3801  0009FA  0950               	iorlw	80
  3802  0009FC                     L13:
  3803  0009FC  6E01               	movwf	get_seconds_reg@res,c
  3804  0009FE                     i2l2024:
  3805                           
  3806                           ;user.c: 276: }
  3807                           ;user.c: 278: return res;
  3808  0009FE  5001               	movf	get_seconds_reg@res,w,c
  3809  000A00  0012               	return	
  3810  000A02                     __end_of_get_seconds_reg:
  3811                           	opt stack 0
  3812                           pclatu	equ	0xFFB
  3813                           pclath	equ	0xFFA
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           intcon2	equ	0xFF1
  3822                           postinc0	equ	0xFEE
  3823                           fsr0h	equ	0xFEA
  3824                           fsr0l	equ	0xFE9
  3825                           wreg	equ	0xFE8
  3826                           indf1	equ	0xFE7
  3827                           fsr1h	equ	0xFE2
  3828                           fsr1l	equ	0xFE1
  3829                           indf2	equ	0xFDF
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8
  3833                           
  3834 ;; *************** function _get_hour_reg *****************
  3835 ;; Defined at:
  3836 ;;		line 280 in file "user.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  hour            1    wreg     unsigned char 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  hour            1    1[COMRAM] unsigned char 
  3841 ;;  res             1    0[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      unsigned char 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_set_time
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text24
  3865  000AB8                     __ptext24:
  3866                           	opt stack 0
  3867  000AB8                     _get_hour_reg:
  3868                           	opt stack 23
  3869                           
  3870                           ;incstack = 0
  3871                           ;get_hour_reg@hour stored from wreg
  3872  000AB8  6E02               	movwf	get_hour_reg@hour,c
  3873                           
  3874                           ;user.c: 282: char res = 0;
  3875  000ABA  0E00               	movlw	0
  3876  000ABC  6E01               	movwf	get_hour_reg@res,c
  3877                           
  3878                           ;user.c: 283: if(hour < 10)
  3879  000ABE  0E0A               	movlw	10
  3880  000AC0  6002               	cpfslt	get_hour_reg@hour,c
  3881  000AC2  D003               	goto	i2l2034
  3882                           
  3883                           ;user.c: 284: {
  3884                           ;user.c: 285: res = hour;
  3885  000AC4  C002  F001         	movff	get_hour_reg@hour,get_hour_reg@res
  3886                           
  3887                           ;user.c: 286: }
  3888  000AC8  D00B               	goto	i2l2040
  3889  000ACA                     i2l2034:
  3890                           
  3891                           ;user.c: 287: else if(hour < 20)
  3892  000ACA  0E14               	movlw	20
  3893  000ACC  6002               	cpfslt	get_hour_reg@hour,c
  3894  000ACE  D004               	goto	i2l2038
  3895                           
  3896                           ;user.c: 288: {
  3897                           ;user.c: 289: res = 1<<4 | (hour -10);
  3898  000AD0  5002               	movf	get_hour_reg@hour,w,c
  3899  000AD2  0FF6               	addlw	246
  3900  000AD4  0910               	iorlw	16
  3901  000AD6  D003               	goto	L14
  3902  000AD8                     i2l2038:
  3903                           
  3904                           ;user.c: 291: else
  3905                           ;user.c: 292: {
  3906                           ;user.c: 293: res = 2<<4 | (hour-20);
  3907  000AD8  5002               	movf	get_hour_reg@hour,w,c
  3908  000ADA  0FEC               	addlw	236
  3909  000ADC  0920               	iorlw	32
  3910  000ADE                     L14:
  3911  000ADE  6E01               	movwf	get_hour_reg@res,c
  3912  000AE0                     i2l2040:
  3913                           
  3914                           ;user.c: 294: }
  3915                           ;user.c: 296: return res;
  3916  000AE0  5001               	movf	get_hour_reg@res,w,c
  3917  000AE2  0012               	return	
  3918  000AE4                     __end_of_get_hour_reg:
  3919                           	opt stack 0
  3920                           pclatu	equ	0xFFB
  3921                           pclath	equ	0xFFA
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           prodh	equ	0xFF4
  3927                           prodl	equ	0xFF3
  3928                           intcon	equ	0xFF2
  3929                           intcon2	equ	0xFF1
  3930                           postinc0	equ	0xFEE
  3931                           fsr0h	equ	0xFEA
  3932                           fsr0l	equ	0xFE9
  3933                           wreg	equ	0xFE8
  3934                           indf1	equ	0xFE7
  3935                           fsr1h	equ	0xFE2
  3936                           fsr1l	equ	0xFE1
  3937                           indf2	equ	0xFDF
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8
  3941                           
  3942 ;; *************** function _byte_write *****************
  3943 ;; Defined at:
  3944 ;;		line 183 in file "user.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  address         1    wreg     unsigned char 
  3947 ;;  value           1    5[COMRAM] unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  address         1    6[COMRAM] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         1       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        2 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    2
  3966 ;; This function calls:
  3967 ;;		i2_ce_disable
  3968 ;;		i2_ce_enable
  3969 ;;		i2_send_command
  3970 ;; This function is called by:
  3971 ;;		_set_time
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text25
  3976  000AFE                     __ptext25:
  3977                           	opt stack 0
  3978  000AFE                     _byte_write:
  3979                           	opt stack 21
  3980                           
  3981                           ;incstack = 0
  3982                           ;byte_write@address stored from wreg
  3983  000AFE  6E07               	movwf	byte_write@address,c
  3984                           
  3985                           ;user.c: 185: ce_enable();
  3986  000B00  ECA8  F005         	call	i2_ce_enable	;wreg free
  3987                           
  3988                           ;user.c: 188: send_command(address);
  3989  000B04  5007               	movf	byte_write@address,w,c
  3990  000B06  EC52  F004         	call	i2_send_command
  3991                           
  3992                           ;user.c: 189: send_command(value);
  3993  000B0A  5006               	movf	byte_write@value,w,c
  3994  000B0C  EC52  F004         	call	i2_send_command
  3995                           
  3996                           ;user.c: 191: ce_disable();
  3997  000B10  EC95  F005         	call	i2_ce_disable	;wreg free
  3998  000B14  0012               	return		;funcret
  3999  000B16                     __end_of_byte_write:
  4000                           	opt stack 0
  4001                           pclatu	equ	0xFFB
  4002                           pclath	equ	0xFFA
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           intcon2	equ	0xFF1
  4011                           postinc0	equ	0xFEE
  4012                           fsr0h	equ	0xFEA
  4013                           fsr0l	equ	0xFE9
  4014                           wreg	equ	0xFE8
  4015                           indf1	equ	0xFE7
  4016                           fsr1h	equ	0xFE2
  4017                           fsr1l	equ	0xFE1
  4018                           indf2	equ	0xFDF
  4019                           fsr2h	equ	0xFDA
  4020                           fsr2l	equ	0xFD9
  4021                           status	equ	0xFD8
  4022                           
  4023 ;; *************** function i2_send_command *****************
  4024 ;; Defined at:
  4025 ;;		line 299 in file "user.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  command         1    wreg     unsigned char 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  command         1    2[COMRAM] unsigned char 
  4030 ;;  send_command    2    3[COMRAM] int 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0
  4041 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4042 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4043 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4044 ;;Total ram usage:        5 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    1
  4047 ;; This function calls:
  4048 ;;		i2_io_as_output
  4049 ;; This function is called by:
  4050 ;;		_byte_write
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text26
  4055  0008A4                     __ptext26:
  4056                           	opt stack 0
  4057  0008A4                     i2_send_command:
  4058                           	opt stack 21
  4059                           
  4060                           ;incstack = 0
  4061                           ;i2send_command@command stored from wreg
  4062  0008A4  6E03               	movwf	i2send_command@command,c
  4063                           
  4064                           ;user.c: 301: int i;
  4065                           ;user.c: 302: io_as_output();
  4066  0008A6  ECA6  F005         	call	i2_io_as_output	;wreg free
  4067                           
  4068                           ;user.c: 303: for(i=0; i<8; i++)
  4069  0008AA  0E00               	movlw	0
  4070  0008AC  6E05               	movwf	i2send_command@i+1,c
  4071  0008AE  0E00               	movlw	0
  4072  0008B0  6E04               	movwf	i2send_command@i,c
  4073  0008B2                     i2l1850:
  4074  0008B2  BE05               	btfsc	i2send_command@i+1,7,c
  4075  0008B4  D006               	goto	i2l1854
  4076  0008B6  5005               	movf	i2send_command@i+1,w,c
  4077  0008B8  E121               	bnz	i2l279
  4078  0008BA  0E08               	movlw	8
  4079  0008BC  5C04               	subwf	i2send_command@i,w,c
  4080  0008BE  B0D8               	btfsc	status,0,c
  4081  0008C0  0012               	return	
  4082  0008C2                     i2l1854:
  4083                           
  4084                           ;user.c: 304: {
  4085                           ;user.c: 305: RA3 = command>>i & 0x01;
  4086  0008C2  C004  F001         	movff	i2send_command@i,??i2_send_command
  4087  0008C6  C003  F002         	movff	i2send_command@command,??i2_send_command+1
  4088  0008CA  2A01               	incf	??i2_send_command,f,c
  4089  0008CC  D002               	goto	i2u89_44
  4090  0008CE                     i2u89_45:
  4091  0008CE  90D8               	bcf	status,0,c
  4092  0008D0  3202               	rrcf	??i2_send_command+1,f,c
  4093  0008D2                     i2u89_44:
  4094  0008D2  2E01               	decfsz	??i2_send_command,f,c
  4095  0008D4  D7FC               	goto	i2u89_45
  4096  0008D6  3002               	rrcf	??i2_send_command+1,w,c
  4097  0008D8  A0D8               	btfss	status,0,c
  4098  0008DA  D002               	goto	i2u90_40
  4099  0008DC  8680               	bsf	3968,3,c	;volatile
  4100  0008DE  D001               	goto	i2l1856
  4101  0008E0                     i2u90_40:
  4102  0008E0  9680               	bcf	3968,3,c	;volatile
  4103  0008E2                     i2l1856:
  4104                           
  4105                           ;user.c: 306: RA2 = 1;
  4106  0008E2  8480               	bsf	3968,2,c	;volatile
  4107                           
  4108                           ;user.c: 307: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  4109  0008E4  0E10               	movlw	16
  4110  0008E6                     i2u181_47:
  4111  0008E6  2EE8               	decfsz	wreg,f,c
  4112  0008E8  D7FE               	bra	i2u181_47
  4113  0008EA  D000               	nop2	
  4114                           
  4115                           ;user.c: 308: RA2 = 0;
  4116  0008EC  9480               	bcf	3968,2,c	;volatile
  4117                           
  4118                           ;user.c: 309: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  4119  0008EE  0E06               	movlw	6
  4120  0008F0                     i2u182_47:
  4121  0008F0  2EE8               	decfsz	wreg,f,c
  4122  0008F2  D7FE               	bra	i2u182_47
  4123  0008F4  D000               	nop2	
  4124  0008F6  4A04               	infsnz	i2send_command@i,f,c
  4125  0008F8  2A05               	incf	i2send_command@i+1,f,c
  4126  0008FA  D7DB               	goto	i2l1850
  4127  0008FC                     i2l279:
  4128  0008FC  0012               	return		;funcret
  4129  0008FE                     __end_ofi2_send_command:
  4130                           	opt stack 0
  4131                           pclatu	equ	0xFFB
  4132                           pclath	equ	0xFFA
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodh	equ	0xFF4
  4138                           prodl	equ	0xFF3
  4139                           intcon	equ	0xFF2
  4140                           intcon2	equ	0xFF1
  4141                           postinc0	equ	0xFEE
  4142                           fsr0h	equ	0xFEA
  4143                           fsr0l	equ	0xFE9
  4144                           wreg	equ	0xFE8
  4145                           indf1	equ	0xFE7
  4146                           fsr1h	equ	0xFE2
  4147                           fsr1l	equ	0xFE1
  4148                           indf2	equ	0xFDF
  4149                           fsr2h	equ	0xFDA
  4150                           fsr2l	equ	0xFD9
  4151                           status	equ	0xFD8
  4152                           
  4153 ;; *************** function i2_io_as_output *****************
  4154 ;; Defined at:
  4155 ;;		line 319 in file "user.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		None
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		i2_send_command
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text27
  4183  000B4C                     __ptext27:
  4184                           	opt stack 0
  4185  000B4C                     i2_io_as_output:
  4186                           	opt stack 21
  4187                           
  4188                           ;user.c: 321: TRISA3 = 0;
  4189                           
  4190                           ;incstack = 0
  4191  000B4C  9692               	bcf	3986,3,c	;volatile
  4192  000B4E  0012               	return		;funcret
  4193  000B50                     __end_ofi2_io_as_output:
  4194                           	opt stack 0
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           intcon2	equ	0xFF1
  4205                           postinc0	equ	0xFEE
  4206                           fsr0h	equ	0xFEA
  4207                           fsr0l	equ	0xFE9
  4208                           wreg	equ	0xFE8
  4209                           indf1	equ	0xFE7
  4210                           fsr1h	equ	0xFE2
  4211                           fsr1l	equ	0xFE1
  4212                           indf2	equ	0xFDF
  4213                           fsr2h	equ	0xFDA
  4214                           fsr2l	equ	0xFD9
  4215                           status	equ	0xFD8
  4216                           
  4217 ;; *************** function i2_ce_enable *****************
  4218 ;; Defined at:
  4219 ;;		line 150 in file "user.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		None
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4236 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_byte_write
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text28
  4247  000B50                     __ptext28:
  4248                           	opt stack 0
  4249  000B50                     i2_ce_enable:
  4250                           	opt stack 22
  4251                           
  4252                           ;user.c: 151: RA5 = 1;
  4253                           
  4254                           ;incstack = 0
  4255  000B50  8A80               	bsf	3968,5,c	;volatile
  4256  000B52  0012               	return		;funcret
  4257  000B54                     __end_ofi2_ce_enable:
  4258                           	opt stack 0
  4259                           pclatu	equ	0xFFB
  4260                           pclath	equ	0xFFA
  4261                           tblptru	equ	0xFF8
  4262                           tblptrh	equ	0xFF7
  4263                           tblptrl	equ	0xFF6
  4264                           tablat	equ	0xFF5
  4265                           prodh	equ	0xFF4
  4266                           prodl	equ	0xFF3
  4267                           intcon	equ	0xFF2
  4268                           intcon2	equ	0xFF1
  4269                           postinc0	equ	0xFEE
  4270                           fsr0h	equ	0xFEA
  4271                           fsr0l	equ	0xFE9
  4272                           wreg	equ	0xFE8
  4273                           indf1	equ	0xFE7
  4274                           fsr1h	equ	0xFE2
  4275                           fsr1l	equ	0xFE1
  4276                           indf2	equ	0xFDF
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function i2_ce_disable *****************
  4282 ;; Defined at:
  4283 ;;		line 153 in file "user.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		None
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_byte_write
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text29
  4311  000B2A                     __ptext29:
  4312                           	opt stack 0
  4313  000B2A                     i2_ce_disable:
  4314                           	opt stack 22
  4315                           
  4316                           ;user.c: 154: RA5 = 0;
  4317                           
  4318                           ;incstack = 0
  4319  000B2A  9A80               	bcf	3968,5,c	;volatile
  4320                           
  4321                           ;user.c: 155: RA2 = 0;
  4322  000B2C  9480               	bcf	3968,2,c	;volatile
  4323  000B2E  0012               	return		;funcret
  4324  000B30                     __end_ofi2_ce_disable:
  4325                           	opt stack 0
  4326                           pclatu	equ	0xFFB
  4327                           pclath	equ	0xFFA
  4328                           tblptru	equ	0xFF8
  4329                           tblptrh	equ	0xFF7
  4330                           tblptrl	equ	0xFF6
  4331                           tablat	equ	0xFF5
  4332                           prodh	equ	0xFF4
  4333                           prodl	equ	0xFF3
  4334                           intcon	equ	0xFF2
  4335                           intcon2	equ	0xFF1
  4336                           postinc0	equ	0xFEE
  4337                           fsr0h	equ	0xFEA
  4338                           fsr0l	equ	0xFE9
  4339                           wreg	equ	0xFE8
  4340                           indf1	equ	0xFE7
  4341                           fsr1h	equ	0xFE2
  4342                           fsr1l	equ	0xFE1
  4343                           indf2	equ	0xFDF
  4344                           fsr2h	equ	0xFDA
  4345                           fsr2l	equ	0xFD9
  4346                           status	equ	0xFD8
  4347                           
  4348 ;; *************** function _buzzer_enable *****************
  4349 ;; Defined at:
  4350 ;;		line 132 in file "user.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		None
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_high_isr
  4374 ;;		_buzzer_toggle
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text30
  4379  000B54                     __ptext30:
  4380                           	opt stack 0
  4381  000B54                     _buzzer_enable:
  4382                           	opt stack 25
  4383                           
  4384                           ;user.c: 134: RB0 = 1;
  4385                           
  4386                           ;incstack = 0
  4387  000B54  8081               	bsf	3969,0,c	;volatile
  4388  000B56  0012               	return		;funcret
  4389  000B58                     __end_of_buzzer_enable:
  4390                           	opt stack 0
  4391  0000                     pclatu	equ	0xFFB
  4392                           pclath	equ	0xFFA
  4393                           tblptru	equ	0xFF8
  4394                           tblptrh	equ	0xFF7
  4395                           tblptrl	equ	0xFF6
  4396                           tablat	equ	0xFF5
  4397                           prodh	equ	0xFF4
  4398                           prodl	equ	0xFF3
  4399                           intcon	equ	0xFF2
  4400                           intcon2	equ	0xFF1
  4401                           postinc0	equ	0xFEE
  4402                           fsr0h	equ	0xFEA
  4403                           fsr0l	equ	0xFE9
  4404                           wreg	equ	0xFE8
  4405                           indf1	equ	0xFE7
  4406                           fsr1h	equ	0xFE2
  4407                           fsr1l	equ	0xFE1
  4408                           indf2	equ	0xFDF
  4409                           fsr2h	equ	0xFDA
  4410                           fsr2l	equ	0xFD9
  4411                           status	equ	0xFD8
  4412                           pclatu	equ	0xFFB
  4413                           pclath	equ	0xFFA
  4414                           tblptru	equ	0xFF8
  4415                           tblptrh	equ	0xFF7
  4416                           tblptrl	equ	0xFF6
  4417                           tablat	equ	0xFF5
  4418                           prodh	equ	0xFF4
  4419                           prodl	equ	0xFF3
  4420                           intcon	equ	0xFF2
  4421                           intcon2	equ	0xFF1
  4422                           postinc0	equ	0xFEE
  4423                           fsr0h	equ	0xFEA
  4424                           fsr0l	equ	0xFE9
  4425                           wreg	equ	0xFE8
  4426                           indf1	equ	0xFE7
  4427                           fsr1h	equ	0xFE2
  4428                           fsr1l	equ	0xFE1
  4429                           indf2	equ	0xFDF
  4430                           fsr2h	equ	0xFDA
  4431                           fsr2l	equ	0xFD9
  4432                           status	equ	0xFD8
  4433                           
  4434                           	psect	rparam
  4435  0000                     pclatu	equ	0xFFB
  4436                           pclath	equ	0xFFA
  4437                           tblptru	equ	0xFF8
  4438                           tblptrh	equ	0xFF7
  4439                           tblptrl	equ	0xFF6
  4440                           tablat	equ	0xFF5
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           intcon2	equ	0xFF1
  4445                           postinc0	equ	0xFEE
  4446                           fsr0h	equ	0xFEA
  4447                           fsr0l	equ	0xFE9
  4448                           wreg	equ	0xFE8
  4449                           indf1	equ	0xFE7
  4450                           fsr1h	equ	0xFE2
  4451                           fsr1l	equ	0xFE1
  4452                           indf2	equ	0xFDF
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8
  4456                           
  4457                           	psect	temp
  4458  000039                     btemp:
  4459                           	opt stack 0
  4460  000039                     	ds	1
  4461  0000                     int$flags	set	btemp
  4462                           pclatu	equ	0xFFB
  4463                           pclath	equ	0xFFA
  4464                           tblptru	equ	0xFF8
  4465                           tblptrh	equ	0xFF7
  4466                           tblptrl	equ	0xFF6
  4467                           tablat	equ	0xFF5
  4468                           prodh	equ	0xFF4
  4469                           prodl	equ	0xFF3
  4470                           intcon	equ	0xFF2
  4471                           intcon2	equ	0xFF1
  4472                           postinc0	equ	0xFEE
  4473                           fsr0h	equ	0xFEA
  4474                           fsr0l	equ	0xFE9
  4475                           wreg	equ	0xFE8
  4476                           indf1	equ	0xFE7
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           indf2	equ	0xFDF
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      56
    BANK0           160     65      83
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    update_display@counter	PTR unsigned char  size(2) Largest target is 1
		 -> counter(BANK0[1]), 

    update_display@digits	PTR unsigned char  size(2) Largest target is 6
		 -> masked_digits(BANK0[6]), 

    get_time@data	PTR unsigned char  size(2) Largest target is 6
		 -> aux1(BANK0[6]), 

    put_nums@nums	PTR unsigned char  size(2) Largest target is 6
		 -> masked_digits(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_get_time
    _get_time->_byte_read
    _byte_read->_send_command

Critical Paths under _high_isr in COMRAM

    _high_isr->_get_next_state
    _update_display->_put_nums
    _put_nums->_put_num
    _get_next_state->_set_time
    _set_time->_byte_write
    _byte_write->i2_send_command

Critical Paths under _main in BANK0

    _main->_get_time

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1133
                                             63 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                     _buzzer_disable
                           _get_time
                  _ir_is_code_number
 ---------------------------------------------------------------------------------
 (1) _ir_is_code_number                                    1     1      0     220
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_time                                            11     8      3     913
                                             48 COMRAM     8     8      0
                                             60 BANK0      3     0      3
                          _byte_read
 ---------------------------------------------------------------------------------
 (2) _byte_read                                            6     6      0     204
                                             42 COMRAM     6     6      0
                         _ce_disable
                          _ce_enable
                        _io_as_input
                       _send_command
 ---------------------------------------------------------------------------------
 (3) _send_command                                         5     5      0      90
                                             37 COMRAM     5     5      0
                       _io_as_output
 ---------------------------------------------------------------------------------
 (4) _io_as_output                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _io_as_input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ce_enable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ce_disable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer_disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            77    77      0    2888
                                             20 COMRAM    17    17      0
                                              0 BANK0     60    60      0
                      _buzzer_enable
                     _get_next_state
                  _ir_get_human_code
                      _point_disable
                       _point_enable
                     _update_display
                   i2_buzzer_disable
 ---------------------------------------------------------------------------------
 (6) i2_buzzer_disable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _update_display                                       4     0      4     710
                                             11 COMRAM     4     0      4
                           _put_nums
 ---------------------------------------------------------------------------------
 (7) _put_nums                                             4     2      2     536
                                              7 COMRAM     4     2      2
                            _get_num
                            _put_num
 ---------------------------------------------------------------------------------
 (8) _put_num                                             17    17      0     348
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (8) _get_num                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _point_enable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _point_disable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ir_get_human_code                                    5     3      2     115
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _get_next_state                                       7     3      4    1607
                                             13 COMRAM     7     3      4
                           _set_time
 ---------------------------------------------------------------------------------
 (7) _set_time                                             6     4      2    1056
                                              7 COMRAM     6     4      2
                         _byte_write
                       _get_hour_reg
                    _get_seconds_reg
 ---------------------------------------------------------------------------------
 (8) _get_seconds_reg                                      2     2      0     271
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _get_hour_reg                                         2     2      0     136
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _byte_write                                           2     1      1     362
                                              5 COMRAM     2     1      1
                       i2_ce_disable
                        i2_ce_enable
                     i2_send_command
 ---------------------------------------------------------------------------------
 (9) i2_send_command                                       5     5      0      90
                                              0 COMRAM     5     5      0
                     i2_io_as_output
 ---------------------------------------------------------------------------------
 (10) i2_io_as_output                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_ce_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_ce_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _buzzer_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _buzzer_disable
   _get_time
     _byte_read
       _ce_disable
       _ce_enable
       _io_as_input
       _send_command
         _io_as_output
   _ir_is_code_number

 _high_isr (ROOT)
   _buzzer_enable
   _get_next_state
     _set_time
       _byte_write
         i2_ce_disable
         i2_ce_enable
         i2_send_command
           i2_io_as_output
       _get_hour_reg
       _get_seconds_reg
   _ir_get_human_code
   _point_disable
   _point_enable
   _update_display
     _put_nums
       _get_num
       _put_num
   i2_buzzer_disable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      53       5       51.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      38       1       59.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B      20        0.0%
DATA                 0      0      8B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon May 22 01:16:20 2017

                              l97 036C                       __CFG_BOR$ON 000000  
                 ??_point_disable 0001                       _put_num$857 0005  
                     __CFG_BORV$3 000000                    _update_display 0B16  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                     __CFG_LVP$ON 000000                    i2_send_command 08A4  
                     __CFG_WDT$ON 000000                               l239 0808  
                             l279 08A2                      __CFG_CPB$OFF 000000  
                             _RB0 007C08                               _RA2 007C02  
                             _RB1 007C09                               _RA3 007C03  
                             _RB3 007C0B                               _RA5 007C05  
                             _RB4 007C0C                               _RB5 007C0D  
                 ?_get_next_state 000E                      __CFG_CPD$OFF 000000  
                             wreg 000FE8                      __CFG_FOSC$HS 000000  
                    ?_io_as_input 0001                       high_isr@aux 0095  
           ir_get_human_code@code 0001                  ?_get_seconds_reg 0001  
                            l2300 09A8                              l2082 0842  
                            l2066 07F8                              l2270 06CA  
                            l2430 02FA                              l2272 06F4  
                            l2432 0304                              l2450 0364  
                            l2442 0340                              l2434 031C  
                            l2268 06A0                              l2444 0346  
                            l2294 09A4                              l2456 037A  
                            l2466 039E                              l2476 03C4  
                            l1980 0888                              l1974 0858  
                            l1978 0868                       get_time@aux 0037  
                            u1010 0886                              u1004 0878  
                            u1005 0874                              u1140 0820  
                            u1164 082A                              u1165 0826  
                            u1158 0822                              u1345 06B4  
                            u1757 080C                              u1767 0836  
           __size_ofi2_ce_disable 0006                              u1777 088C  
                            u1787 0896                              _RBIF 007F90  
                            i2l41 0164                              i2l53 01E8  
                            i2l65 028E                       i2_ce_enable 0B50  
                            _aux1 00AA                              _main 02CA  
                            _next 00A1                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0039  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                     __CFG_IESO$OFF 000000  
                  ??_get_hour_reg 0001                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                      high_isr@code 0060  
                 __end_of_InitApp 0A48            __end_of_update_display 0B24  
                   ?_io_as_output 0001            __end_ofi2_send_command 08FE  
     ir_is_code_number@human_code 0026                     __CFG_PLLDIV$1 000000  
                  __CFG_CCP2MX$ON 000000                             ?_main 0001  
                    get_time@data 009C                             _T0CON 000FD5  
                           i2l183 0AB6                             i2l178 0954  
                           i2l292 0632                             i2l279 08FC  
                   __CFG_USBDIV$1 000000                      i2_ce_disable 0B2A  
             _ConfigureOscillator 0B58                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                   __end_of_get_num 07DC  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _state 00B1                             pclath 000FFA  
                           tablat 000FF5                   __end_of_put_num 0956  
                           status 000FD8              ?_ConfigureOscillator 0001  
                ??i2_io_as_output 0001                   __initialization 0AE4  
                   high_isr@i_136 009A                      __end_of_main 03FA  
                  ??_io_as_output 0026                   ?_update_display 000C  
                 ?i2_send_command 0001                            ??_main 009F  
                   __activetblptr 000002             update_display@counter 000E  
                          _ADCON1 000FC1                  get_hour_reg@hour 0002  
                   get_time@hours 0038                            i2l2010 09CC  
                          i2l2100 0414                            i2l2022 09F6  
                          i2l2014 09DA                            i2l2006 09BE  
                          i2l2110 0432                            i2l2102 041A  
                          i2l2040 0AE0                            i2l2024 09FE  
                          i2l2120 0450                            i2l2112 0438  
                          i2l2104 0420                            i2l2034 0ACA  
                          i2l2018 09E8                            i2l2122 0456  
                          i2l2114 043E                            i2l2106 0426  
                          i2l2050 0A9A                            i2l2204 05EC  
                          i2l2124 045C                            i2l2116 0444  
                          i2l2108 042C                            i2l2132 0466  
                          i2l2038 0AD8                            i2l2126 0462  
                          i2l2118 044A                            i2l2046 0A8A  
                          i2l2400 024E                            i2l2320 008E  
                          i2l2402 0278                            i2l2330 00D2  
                          i2l2172 053E                            i2l2092 03FC  
                          i2l2340 0124                            i2l2316 0078  
                          i2l2190 05A2                            i2l2094 0402  
                          i2l2334 00E8                            i2l2184 0580  
                          i2l2096 0408                            i2l2352 0172  
                          i2l2328 00BE                            i2l2194 05BA  
                          i2l2178 055E                            i2l2098 040E  
                          i2l2362 01B4                            i2l2346 015E  
                          i2l2196 05C6                            i2l2380 0206  
                          i2l2356 0188                            i2l2710 04A2  
                          i2l1910 0744                            i2l1902 073C  
                          i2l2390 022E                            i2l2366 01C2  
                          i2l2720 04F8                            i2l2712 04B8  
                          i2l2392 0236                            i2l2376 01F4  
                          i2l2368 01D2                            i2l1850 08B2  
                          i2l2722 0502                            i2l2714 04C8  
                          i2l1930 0758                            i2l1922 0750  
                          i2l1914 0748                            i2l1906 0740  
                          i2l2394 023E                            i2l2386 0224  
                          i2l2724 0512                            i2l2716 04D8  
                          i2l2396 0246                            i2l1854 08C2  
                          i2l2718 04E2                            i2l1950 076C  
                          i2l1942 0764                            i2l1934 075C  
                          i2l1926 0754                            i2l1918 074C  
                          i2l1870 090C                            i2l1856 08E2  
                          i2l1954 0770                            i2l1946 0768  
                          i2l1938 0760                            i2l1882 0940  
                          i2l1874 091C                            i2l1964 0778  
                          i2l1958 0774                            i2l1894 0734  
                          i2l1898 0738                            _INTCON 000FF2  
                          _TMR0IF 007F92                            _TRISA2 007C92  
                          _TRISB1 007C99                            _TRISA3 007C93  
                          _TRISB3 007C9B                            _TRISA5 007C95  
                          _TRISB4 007C9C                         ??_InitApp 0026  
           ??_ConfigureOscillator 0026                    __CFG_XINST$OFF 000000  
                __end_of_high_isr 02CA                  __end_of_get_time 0730  
                 set_time@min_reg 000C                    __CFG_STVREN$ON 000000  
                 set_time@sec_reg 000B                   set_time@minutes 0008  
                 set_time@seconds 000A                            clear_0 0AEA  
               _ir_get_human_code 03FA                 ?i2_buzzer_disable 0001  
                       ??_get_num 0001                get_seconds_reg@res 0001  
              ?_ir_get_human_code 0001                ??i2_buzzer_disable 0001  
                __end_of_set_time 0A82                     _masked_digits 00A4  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8              __end_of_get_hour_reg 0AE4  
                __end_of_put_nums 0AB8                         ??_put_num 0001  
             ??_ir_get_human_code 0003              __size_of_io_as_input 0004  
                    put_nums@nums 0008                        __accesstop 0060  
         __end_of__initialization 0AF0                   __CFG_PBADEN$OFF 000000  
                ??_buzzer_disable 0026                     ___rparam_used 000001  
              __size_of_ce_enable 0004                    __pcstackCOMRAM 0001  
       __end_of_ir_get_human_code 0528                  ??_get_next_state 0012  
                  high_isr@digits 008F                        _ce_disable 0B24  
            __end_of_io_as_output 0B34                        __pbssBANK0 00A1  
                    ?i2_ce_enable 0001                __size_of_byte_read 006E  
              get_next_state@code 0010                get_next_state@hour 0014  
          __size_of_buzzer_enable 0004                     ?_send_command 0001  
                         _CCP2CON 000FBA                    get_time@format 009E  
           __end_of_point_disable 0B4C                           _INTCON2 000FF1  
               __end_of_ce_enable 0B3C                           i2u90_40 08E0  
                         i2u94_44 0930                           i2u94_45 092C  
                         i2u89_44 08D2                           i2u89_45 08CE  
                         i2u97_45 0948                           i2u97_46 094A  
                         _SSPCON1 000FC6                         ?_high_isr 0001  
                       ?_get_time 009C                   __CFG_VREGEN$OFF 000000  
                         _InitApp 0A02          __size_of_get_seconds_reg 0056  
                ??_update_display 0010                           __Hparam 0000  
                ??i2_send_command 0001                           __Lparam 0000  
                byte_read@address 002D                         ?_set_time 0008  
                    byte_read@res 002E                  get_time@aux_hour 0035  
                  ??_send_command 0026        __size_of_ir_get_human_code 012E  
                       ?_put_nums 0008                        _byte_write 0AFE  
                         __pcinit 0AE4                  set_time@hour_reg 000D  
                         __ramtop 0800                           __ptext0 02CA  
                         __ptext1 0956                           __ptext2 063C  
                         __ptext3 07DC                           __ptext4 084A  
                         __ptext5 0B30                           __ptext6 0B34  
                         __ptext7 0B38                           __ptext8 0B24  
                         __ptext9 0B3C             __size_of_get_hour_reg 002C  
                         _get_num 0730                           _counter 00B0  
               __end_of_byte_read 084A                       ?_ce_disable 0001  
                      _human_code 00A3                     _buzzer_enable 0B54  
                         _put_num 08FE                        ??_high_isr 0015  
                      ??_get_time 0031                    __pintcode_body 0012  
                   ?_point_enable 0001              end_of_initialization 0AF0  
                   __Lmediumconst 0000                           int_func 0012  
                      ??_set_time 000A                      _get_hour_reg 0AB8  
                         postinc0 000FEE                        ??_put_nums 000A  
                 byte_write@value 0006             __size_of_io_as_output 0004  
                  ?_buzzer_enable 0001  ir_get_human_code@human_read_code 0005  
                  ??_point_enable 0001       __end_of_ConfigureOscillator 0B5A  
                   send_command@i 0029         __size_ofi2_buzzer_disable 0004  
                      get_num@num 0001              __size_ofi2_ce_enable 0004  
             __size_of_ce_disable 0006                high_isr@final_code 0096  
               ??_get_seconds_reg 0001                      _io_as_output 0B30  
                     ?_byte_write 0006            get_seconds_reg@seconds 0002  
         __size_ofi2_io_as_output 0004               start_initialization 0AE4  
                   ??_io_as_input 0026              __end_of_send_command 08A4  
           i2send_command@command 0003              update_display@digits 000C  
                 get_hour_reg@res 0001                        byte_read@i 002F  
                __CFG_LPT1OSC$OFF 000000                       put_num@mask 0004  
                 ??_buzzer_enable 0001                     ?i2_ce_disable 0001  
                   __pcstackBANK0 0060                         _ce_enable 0B38  
             __size_of_byte_write 0018                 __size_of_high_isr 02C2  
             __end_of_io_as_input 0B38                 __size_of_get_time 00F4  
                        ?_InitApp 0001                         __pnvBANK0 00B1  
                       __pintcode 0008              __end_of_point_enable 0B48  
               __size_of_set_time 003A           __size_of_buzzer_disable 0004  
             get_next_state@state 000E                          ?_get_num 0001  
               __size_of_put_nums 0036                    ??i2_ce_disable 0001  
                    ??_ce_disable 0026           __size_of_get_next_state 0114  
                       _byte_read 07DC             get_next_state@minutes 0013  
           get_next_state@seconds 0012                          ?_put_num 0001  
                 get_time@minutes 0036                   get_time@seconds 0034  
                      ?_ce_enable 0001                  i2_buzzer_disable 0B40  
          __size_of_point_disable 0004                          i2u150_44 010C  
                        i2u150_45 0106                          i2u152_40 0132  
                        i2u180_47 00AC                          i2u181_47 08E6  
                        i2u182_47 08F0                          i2u179_47 0062  
              __end_of_ce_disable 0B2A                  __CFG_WDTPS$32768 000000  
                  i2_io_as_output 0B4C                         high_isr@i 0098  
           __size_of_send_command 005A                 _ir_is_code_number 0956  
                     _io_as_input 0B34                        ?_byte_read 0001  
              ?_ir_is_code_number 0001               send_command@command 0028  
                 _get_seconds_reg 09AC               ??_ir_is_code_number 0026  
                __size_of_InitApp 0046                          __Hrparam 0000  
                        __Lrparam 0000                        put_num@num 0003  
                    _send_command 084A                      ??_byte_write 0007  
          __end_ofi2_io_as_output 0B50           __size_of_update_display 000E  
         __size_ofi2_send_command 005A         __end_of_ir_is_code_number 09AC  
                   _point_disable 0B48                  __size_of_get_num 00AC  
                        __ptext10 0A02                          __ptext11 0B58  
                        __ptext20 03FA                          __ptext21 0528  
                        __ptext13 0B40                          __ptext30 0B54  
                        __ptext22 0A48                          __ptext14 0B16  
                        __ptext23 09AC                          __ptext15 0A82  
                        __ptext24 0AB8                          __ptext16 08FE  
                        __ptext25 0AFE                          __ptext17 0730  
                        __ptext26 08A4                          __ptext18 0B44  
                        __ptext27 0B4C                          __ptext19 0B48  
                        __ptext28 0B50                          __ptext29 0B2A  
                        _high_isr 0008                          _get_time 063C  
                __size_of_put_num 0058                     ??i2_ce_enable 0001  
                     ??_ce_enable 0026                     __size_of_main 0130  
              __end_of_byte_write 0B16              __end_ofi2_ce_disable 0B30  
    __size_of_ConfigureOscillator 0002             __size_of_point_enable 0004  
                        _set_time 0A48                          int$flags 0039  
                  _buzzer_disable 0B3C                          _put_nums 0A82  
                 ?i2_io_as_output 0001             __CFG_CPUDIV$OSC1_PLL2 000000  
                  ?_point_disable 0001                        _INTCONbits 000FF2  
                  _get_next_state 0528                      set_time@hour 0009  
         __end_of_get_seconds_reg 0A02                       ??_byte_read 002B  
                       put_nums@i 000A                          intlevel2 0000  
                    _point_enable 0B44               __end_ofi2_ce_enable 0B54  
                 i2send_command@i 0004                 byte_write@address 0007  
          __end_of_buzzer_disable 0B40          __end_ofi2_buzzer_disable 0B44  
                        put_num@i 0006            __end_of_get_next_state 063C  
      __size_of_ir_is_code_number 0056             __end_of_buzzer_enable 0B58  
                   ?_get_hour_reg 0001                   ?_buzzer_disable 0001  
