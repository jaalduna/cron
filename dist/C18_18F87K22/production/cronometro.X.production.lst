

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun May 21 01:42:28 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F2550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	nvCOMRAM
    69  000046                     __pnvCOMRAM:
    70                           	opt stack 0
    71  000046                     _state:
    72                           	opt stack 0
    73  000046                     	ds	2
    74  0000                     _INTCON	set	4082
    75  0000                     _ADCON1	set	4033
    76  0000                     _SSPCON1	set	4038
    77  0000                     _CCP2CON	set	4026
    78  0000                     _INTCONbits	set	4082
    79  0000                     _RA3	set	31747
    80  0000                     _RA2	set	31746
    81  0000                     _RA5	set	31749
    82  0000                     _RB0	set	31752
    83  0000                     _RB1	set	31753
    84  0000                     _RB4	set	31756
    85  0000                     _RB3	set	31755
    86  0000                     _TRISA3	set	31891
    87  0000                     _TRISA5	set	31893
    88  0000                     _TRISA2	set	31890
    89  0000                     _TRISB1	set	31897
    90  0000                     _TRISB4	set	31900
    91  0000                     _TRISB3	set	31899
    92  0000                     _RB5	set	31757
    93  0000                     _RBIF	set	32656
    94                           
    95                           ; #config settings
    96  0000                     
    97                           	psect	cinit
    98  000724                     __pcinit:
    99                           	opt stack 0
   100  000724                     start_initialization:
   101                           	opt stack 0
   102  000724                     __initialization:
   103                           	opt stack 0
   104                           
   105                           ; Clear objects allocated to BANK0 (2 bytes)
   106  000724  0100               	movlb	0
   107  000726  6B8C               	clrf	(__pbssBANK0+1)& (0+255),b
   108  000728  6B8B               	clrf	__pbssBANK0& (0+255),b
   109  00072A                     end_of_initialization:
   110                           	opt stack 0
   111  00072A                     __end_of__initialization:
   112                           	opt stack 0
   113  00072A  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   114  00072C  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   115  00072E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   116  000730  6EF8               	movwf	tblptru,c
   117  000732  0100               	movlb	0
   118  000734  EF5D  F001         	goto	_main	;jump to C main() function
   119                           tblptru	equ	0xFF8
   120                           
   121                           	psect	bssBANK0
   122  00008B                     __pbssBANK0:
   123                           	opt stack 0
   124  00008B                     _next:
   125                           	opt stack 0
   126  00008B                     	ds	2
   127                           tblptru	equ	0xFF8
   128                           
   129                           	psect	cstackBANK0
   130  000060                     __pcstackBANK0:
   131                           	opt stack 0
   132  000060                     ??_low_isr:
   133                           
   134                           ; 1 bytes @ 0x0
   135  000060                     	ds	17
   136  000071                     ??_send_command:
   137  000071                     ??_put_num:
   138  000071                     get_num@num:
   139                           	opt stack 0
   140                           
   141                           ; 1 bytes @ 0x11
   142  000071                     	ds	2
   143  000073                     put_num@num:
   144                           	opt stack 0
   145  000073                     send_command@command:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x13
   149  000073                     	ds	1
   150  000074                     put_num@mask:
   151                           	opt stack 0
   152  000074                     send_command@i:
   153                           	opt stack 0
   154                           
   155                           ; 2 bytes @ 0x14
   156  000074                     	ds	1
   157  000075                     _put_num$805:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x15
   161  000075                     	ds	1
   162  000076                     ??_byte_read:
   163  000076                     put_num@i:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x16
   167  000076                     	ds	2
   168  000078                     byte_read@address:
   169                           	opt stack 0
   170  000078                     put_nums@nums:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x18
   174  000078                     	ds	1
   175  000079                     byte_read@res:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x19
   179  000079                     	ds	1
   180  00007A                     put_nums@i:
   181                           	opt stack 0
   182  00007A                     byte_read@i:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x1A
   186  00007A                     	ds	2
   187  00007C                     get_time@data:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x1C
   191  00007C                     	ds	2
   192  00007E                     get_time@seconds:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x1E
   196  00007E                     	ds	1
   197  00007F                     get_time@minutes:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x1F
   201  00007F                     	ds	1
   202  000080                     get_time@hours:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0x20
   206  000080                     	ds	1
   207  000081                     get_time@aux:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x21
   211  000081                     	ds	1
   212  000082                     ??_main:
   213                           
   214                           ; 1 bytes @ 0x22
   215  000082                     	ds	2
   216  000084                     main@temp:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x24
   220  000084                     	ds	1
   221  000085                     main@aux1:
   222                           	opt stack 0
   223                           
   224                           ; 6 bytes @ 0x25
   225  000085                     	ds	6
   226                           tblptru	equ	0xFF8
   227                           
   228                           	psect	cstackCOMRAM
   229  000001                     __pcstackCOMRAM:
   230                           	opt stack 0
   231  000001                     ??_high_isr:
   232  000001                     
   233                           ; 1 bytes @ 0x0
   234  000001                     	ds	17
   235  000012                     high_isr@code:
   236                           	opt stack 0
   237                           
   238                           ; 47 bytes @ 0x11
   239  000012                     	ds	47
   240  000041                     high_isr@aux:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x40
   244  000041                     	ds	1
   245  000042                     high_isr@final_code:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x41
   249  000042                     	ds	2
   250  000044                     high_isr@i:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x43
   254  000044                     	ds	2
   255                           tblptru	equ	0xFF8
   256                           
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 37 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  aux1            6   37[BANK0 ] unsigned char [6]
   267 ;;  temp            1   36[BANK0 ] unsigned char 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   277 ;;      Params:         0       0       0       0       0       0       0       0       0
   278 ;;      Locals:         0       7       0       0       0       0       0       0       0
   279 ;;      Temps:          0       2       0       0       0       0       0       0       0
   280 ;;      Totals:         0       9       0       0       0       0       0       0       0
   281 ;;Total ram usage:        9 bytes
   282 ;; Hardware stack levels required when called:    6
   283 ;; This function calls:
   284 ;;		_ConfigureOscillator
   285 ;;		_InitApp
   286 ;;		_get_time
   287 ;;		_point_toggle
   288 ;;		_put_nums
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text0
   295  0002BA                     __ptext0:
   296                           	opt stack 0
   297  0002BA                     _main:
   298                           	opt stack 25
   299                           
   300                           ;main.c: 40: ConfigureOscillator();
   301                           
   302                           ;incstack = 0
   303  0002BA  ECB1  F003         	call	_ConfigureOscillator	;wreg free
   304                           
   305                           ;main.c: 43: InitApp();
   306  0002BE  EC7A  F003         	call	_InitApp	;wreg free
   307                           
   308                           ;main.c: 47: char aux1[6];
   309                           ;main.c: 48: aux1[0] = 1;
   310  0002C2  0E01               	movlw	1
   311  0002C4  0100               	movlb	0	; () banked
   312  0002C6  6F85               	movwf	main@aux1& (0+255),b
   313                           
   314                           ;main.c: 49: aux1[1] = 2;
   315  0002C8  0E02               	movlw	2
   316  0002CA  0100               	movlb	0	; () banked
   317  0002CC  6F86               	movwf	(main@aux1+1)& (0+255),b
   318                           
   319                           ;main.c: 50: aux1[2] = 3;
   320  0002CE  0E03               	movlw	3
   321  0002D0  0100               	movlb	0	; () banked
   322  0002D2  6F87               	movwf	(main@aux1+2)& (0+255),b
   323                           
   324                           ;main.c: 51: aux1[3] = 4;
   325  0002D4  0E04               	movlw	4
   326  0002D6  0100               	movlb	0	; () banked
   327  0002D8  6F88               	movwf	(main@aux1+3)& (0+255),b
   328                           
   329                           ;main.c: 52: aux1[4] = 5;
   330  0002DA  0E05               	movlw	5
   331  0002DC  0100               	movlb	0	; () banked
   332  0002DE  6F89               	movwf	(main@aux1+4)& (0+255),b
   333                           
   334                           ;main.c: 53: aux1[5] = 6;
   335  0002E0  0E06               	movlw	6
   336  0002E2  0100               	movlb	0	; () banked
   337  0002E4  6F8A               	movwf	(main@aux1+5)& (0+255),b
   338  0002E6                     l1589:
   339                           
   340                           ;main.c: 58: {
   341                           ;main.c: 59: state = next;
   342  0002E6  C08B  F046         	movff	_next,_state
   343  0002EA  C08C  F047         	movff	_next+1,_state+1
   344                           
   345                           ;main.c: 61: switch(state){
   346  0002EE  D064               	goto	l1613
   347  0002F0                     l1591:
   348                           
   349                           ;main.c: 63: get_time(aux1);
   350  0002F0  0E85               	movlw	low main@aux1
   351  0002F2  0100               	movlb	0	; () banked
   352  0002F4  6F7C               	movwf	get_time@data& (0+255),b
   353  0002F6  0E00               	movlw	high main@aux1
   354  0002F8  0100               	movlb	0	; () banked
   355  0002FA  6F7D               	movwf	(get_time@data+1)& (0+255),b
   356  0002FC  ECEE  F001         	call	_get_time	;wreg free
   357                           
   358                           ;main.c: 64: put_nums(aux1);
   359  000300  0E85               	movlw	low main@aux1
   360  000302  0100               	movlb	0	; () banked
   361  000304  6F78               	movwf	put_nums@nums& (0+255),b
   362  000306  0E00               	movlw	high main@aux1
   363  000308  0100               	movlb	0	; () banked
   364  00030A  6F79               	movwf	(put_nums@nums+1)& (0+255),b
   365  00030C  EC56  F003         	call	_put_nums	;wreg free
   366                           
   367                           ;main.c: 65: _delay((unsigned long)((200)*(20000000L/4000.0)));
   368  000310  0E06               	movlw	6
   369  000312  0100               	movlb	0	; () banked
   370  000314  6F83               	movwf	(??_main+1)& (0+255),b
   371  000316  0E13               	movlw	19
   372  000318  0100               	movlb	0	; () banked
   373  00031A  6F82               	movwf	??_main& (0+255),b
   374  00031C  0EAD               	movlw	173
   375  00031E                     u897:
   376  00031E  2EE8               	decfsz	wreg,f,c
   377  000320  D7FE               	bra	u897
   378  000322  2F82               	decfsz	??_main& (0+255),f,b
   379  000324  D7FC               	bra	u897
   380  000326  2F83               	decfsz	(??_main+1)& (0+255),f,b
   381  000328  D7FA               	bra	u897
   382  00032A  D000               	nop2	
   383                           
   384                           ;main.c: 66: point_toggle();
   385  00032C  EC9C  F003         	call	_point_toggle	;wreg free
   386                           
   387                           ;main.c: 68: _delay((unsigned long)((200)*(20000000L/4000.0)));
   388  000330  0E06               	movlw	6
   389  000332  0100               	movlb	0	; () banked
   390  000334  6F83               	movwf	(??_main+1)& (0+255),b
   391  000336  0E13               	movlw	19
   392  000338  0100               	movlb	0	; () banked
   393  00033A  6F82               	movwf	??_main& (0+255),b
   394  00033C  0EAD               	movlw	173
   395  00033E                     u907:
   396  00033E  2EE8               	decfsz	wreg,f,c
   397  000340  D7FE               	bra	u907
   398  000342  2F82               	decfsz	??_main& (0+255),f,b
   399  000344  D7FC               	bra	u907
   400  000346  2F83               	decfsz	(??_main+1)& (0+255),f,b
   401  000348  D7FA               	bra	u907
   402  00034A  D000               	nop2	
   403                           
   404                           ;main.c: 69: point_toggle();
   405  00034C  EC9C  F003         	call	_point_toggle	;wreg free
   406  000350                     l1601:
   407                           
   408                           ;main.c: 73: temp = aux1[3];
   409  000350  C088  F084         	movff	main@aux1+3,main@temp
   410                           
   411                           ;main.c: 74: put_nums(aux1);
   412  000354  0E85               	movlw	low main@aux1
   413  000356  0100               	movlb	0	; () banked
   414  000358  6F78               	movwf	put_nums@nums& (0+255),b
   415  00035A  0E00               	movlw	high main@aux1
   416  00035C  0100               	movlb	0	; () banked
   417  00035E  6F79               	movwf	(put_nums@nums+1)& (0+255),b
   418  000360  EC56  F003         	call	_put_nums	;wreg free
   419                           
   420                           ;main.c: 75: _delay((unsigned long)((500)*(20000000L/4000.0)));
   421  000364  0E0D               	movlw	13
   422  000366  0100               	movlb	0	; () banked
   423  000368  6F83               	movwf	(??_main+1)& (0+255),b
   424  00036A  0EAF               	movlw	175
   425  00036C  0100               	movlb	0	; () banked
   426  00036E  6F82               	movwf	??_main& (0+255),b
   427  000370  0EB6               	movlw	182
   428  000372                     u917:
   429  000372  2EE8               	decfsz	wreg,f,c
   430  000374  D7FE               	bra	u917
   431  000376  2F82               	decfsz	??_main& (0+255),f,b
   432  000378  D7FC               	bra	u917
   433  00037A  2F83               	decfsz	(??_main+1)& (0+255),f,b
   434  00037C  D7FA               	bra	u917
   435  00037E  F000               	nop	
   436                           
   437                           ;main.c: 76: aux1[3] = 0;
   438  000380  0E00               	movlw	0
   439  000382  0100               	movlb	0	; () banked
   440  000384  6F88               	movwf	(main@aux1+3)& (0+255),b
   441                           
   442                           ; BSR set to: 0
   443                           ;main.c: 77: put_nums(aux1);
   444  000386  0E85               	movlw	low main@aux1
   445  000388  0100               	movlb	0	; () banked
   446  00038A  6F78               	movwf	put_nums@nums& (0+255),b
   447  00038C  0E00               	movlw	high main@aux1
   448  00038E  0100               	movlb	0	; () banked
   449  000390  6F79               	movwf	(put_nums@nums+1)& (0+255),b
   450  000392  EC56  F003         	call	_put_nums	;wreg free
   451                           
   452                           ;main.c: 78: aux1[3] = temp;
   453  000396  C084  F088         	movff	main@temp,main@aux1+3
   454                           
   455                           ;main.c: 79: _delay((unsigned long)((500)*(20000000L/4000.0)));
   456  00039A  0E0D               	movlw	13
   457  00039C  0100               	movlb	0	; () banked
   458  00039E  6F83               	movwf	(??_main+1)& (0+255),b
   459  0003A0  0EAF               	movlw	175
   460  0003A2  0100               	movlb	0	; () banked
   461  0003A4  6F82               	movwf	??_main& (0+255),b
   462  0003A6  0EB6               	movlw	182
   463  0003A8                     u927:
   464  0003A8  2EE8               	decfsz	wreg,f,c
   465  0003AA  D7FE               	bra	u927
   466  0003AC  2F82               	decfsz	??_main& (0+255),f,b
   467  0003AE  D7FC               	bra	u927
   468  0003B0  2F83               	decfsz	(??_main+1)& (0+255),f,b
   469  0003B2  D7FA               	bra	u927
   470  0003B4  F000               	nop	
   471                           
   472                           ;main.c: 83: }
   473                           
   474                           ;main.c: 81: default: ;
   475  0003B6  D797               	goto	l1589
   476  0003B8                     l1613:
   477  0003B8  C046  F082         	movff	_state,??_main
   478  0003BC  C047  F083         	movff	_state+1,??_main+1
   479                           
   480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   481                           ; Switch size 1, requested type "space"
   482                           ; Number of cases is 1, Range of values is 0 to 0
   483                           ; switch strategies available:
   484                           ; Name         Instructions Cycles
   485                           ; simple_byte            4     3 (average)
   486                           ;	Chosen strategy is simple_byte
   487  0003C0  0100               	movlb	0	; () banked
   488  0003C2  5183               	movf	(??_main+1)& (0+255),w,b
   489  0003C4  0A00               	xorlw	0	; case 0
   490  0003C6  A4D8               	btfss	status,2,c
   491  0003C8  D78E               	goto	l1589
   492                           
   493                           ; BSR set to: 0
   494                           ; Switch size 1, requested type "space"
   495                           ; Number of cases is 2, Range of values is 0 to 1
   496                           ; switch strategies available:
   497                           ; Name         Instructions Cycles
   498                           ; simple_byte            7     4 (average)
   499                           ;	Chosen strategy is simple_byte
   500  0003CA  0100               	movlb	0	; () banked
   501  0003CC  5182               	movf	??_main& (0+255),w,b
   502  0003CE  0A00               	xorlw	0	; case 0
   503  0003D0  B4D8               	btfsc	status,2,c
   504  0003D2  D78E               	goto	l1591
   505  0003D4  0A01               	xorlw	1	; case 1
   506  0003D6  B4D8               	btfsc	status,2,c
   507  0003D8  D7BB               	goto	l1601
   508                           
   509                           ; BSR set to: 0
   510                           
   511                           ; BSR set to: 0
   512  0003DA  D785               	goto	l1589
   513  0003DC                     __end_of_main:
   514                           	opt stack 0
   515                           tblptru	equ	0xFF8
   516                           wreg	equ	0xFE8
   517                           status	equ	0xFD8
   518                           
   519 ;; *************** function _put_nums *****************
   520 ;; Defined at:
   521 ;;		line 63 in file "user.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  nums            2   24[BANK0 ] PTR unsigned char 
   524 ;;		 -> main@aux1(6), 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  i               2   26[BANK0 ] int 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   536 ;;      Params:         0       2       0       0       0       0       0       0       0
   537 ;;      Locals:         0       2       0       0       0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0
   539 ;;      Totals:         0       4       0       0       0       0       0       0       0
   540 ;;Total ram usage:        4 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    3
   543 ;; This function calls:
   544 ;;		_get_num
   545 ;;		_put_num
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text1
   552  0006AC                     __ptext1:
   553                           	opt stack 0
   554  0006AC                     _put_nums:
   555                           	opt stack 27
   556                           
   557                           ;user.c: 65: int i;
   558                           ;user.c: 66: for(i=0;i<6;i++)
   559                           
   560                           ; BSR set to: 0
   561                           ;incstack = 0
   562  0006AC  0E00               	movlw	0
   563  0006AE  0100               	movlb	0	; () banked
   564  0006B0  6F7B               	movwf	(put_nums@i+1)& (0+255),b
   565  0006B2  0E00               	movlw	0
   566  0006B4  6F7A               	movwf	put_nums@i& (0+255),b
   567  0006B6                     l1483:
   568                           
   569                           ; BSR set to: 0
   570  0006B6  0100               	movlb	0	; () banked
   571  0006B8  BF7B               	btfsc	(put_nums@i+1)& (0+255),7,b
   572  0006BA  D008               	goto	l1487
   573  0006BC  0100               	movlb	0	; () banked
   574  0006BE  517B               	movf	(put_nums@i+1)& (0+255),w,b
   575  0006C0  E118               	bnz	l132
   576  0006C2  0E06               	movlw	6
   577  0006C4  0100               	movlb	0	; () banked
   578  0006C6  5D7A               	subwf	put_nums@i& (0+255),w,b
   579  0006C8  B0D8               	btfsc	status,0,c
   580  0006CA  0012               	return	
   581  0006CC                     l1487:
   582                           
   583                           ; BSR set to: 0
   584                           ;user.c: 67: {
   585                           ;user.c: 68: put_num(get_num(nums[i]));
   586  0006CC  0100               	movlb	0	; () banked
   587  0006CE  517A               	movf	put_nums@i& (0+255),w,b
   588  0006D0  0100               	movlb	0	; () banked
   589  0006D2  2578               	addwf	put_nums@nums& (0+255),w,b
   590  0006D4  6ED9               	movwf	fsr2l,c
   591  0006D6  0100               	movlb	0	; () banked
   592  0006D8  517B               	movf	(put_nums@i+1)& (0+255),w,b
   593  0006DA  0100               	movlb	0	; () banked
   594  0006DC  2179               	addwfc	(put_nums@nums+1)& (0+255),w,b
   595  0006DE  6EDA               	movwf	fsr2h,c
   596  0006E0  50DF               	movf	indf2,w,c
   597  0006E2  EC47  F002         	call	_get_num
   598  0006E6  ECE1  F002         	call	_put_num
   599  0006EA  0100               	movlb	0	; () banked
   600  0006EC  4B7A               	infsnz	put_nums@i& (0+255),f,b
   601  0006EE  2B7B               	incf	(put_nums@i+1)& (0+255),f,b
   602  0006F0  D7E2               	goto	l1483
   603  0006F2                     l132:
   604                           
   605                           ; BSR set to: 0
   606  0006F2  0012               	return		;funcret
   607  0006F4                     __end_of_put_nums:
   608                           	opt stack 0
   609                           tblptru	equ	0xFF8
   610                           wreg	equ	0xFE8
   611                           indf2	equ	0xFDF
   612                           fsr2h	equ	0xFDA
   613                           fsr2l	equ	0xFD9
   614                           status	equ	0xFD8
   615                           
   616 ;; *************** function _put_num *****************
   617 ;; Defined at:
   618 ;;		line 51 in file "user.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  num             1    wreg     unsigned char 
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  num             1   19[BANK0 ] unsigned char 
   623 ;;  i               2   22[BANK0 ] int 
   624 ;;  mask            1   20[BANK0 ] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   634 ;;      Params:         0       0       0       0       0       0       0       0       0
   635 ;;      Locals:         0       5       0       0       0       0       0       0       0
   636 ;;      Temps:          0       2       0       0       0       0       0       0       0
   637 ;;      Totals:         0       7       0       0       0       0       0       0       0
   638 ;;Total ram usage:        7 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    2
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_put_nums
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649  0005C2                     __ptext2:
   650                           	opt stack 0
   651  0005C2                     _put_num:
   652                           	opt stack 27
   653                           
   654                           ; BSR set to: 0
   655                           ;incstack = 0
   656                           ;put_num@num stored from wreg
   657  0005C2  0100               	movlb	0	; () banked
   658  0005C4  6F73               	movwf	put_num@num& (0+255),b
   659                           
   660                           ;user.c: 53: char mask = 0x01;
   661  0005C6  0E01               	movlw	1
   662  0005C8  0100               	movlb	0	; () banked
   663  0005CA  6F74               	movwf	put_num@mask& (0+255),b
   664                           
   665                           ;user.c: 54: int i;
   666                           ;user.c: 55: for(i= 0; i<8; i++)
   667  0005CC  0E00               	movlw	0
   668  0005CE  0100               	movlb	0	; () banked
   669  0005D0  6F77               	movwf	(put_num@i+1)& (0+255),b
   670  0005D2  0E00               	movlw	0
   671  0005D4  6F76               	movwf	put_num@i& (0+255),b
   672  0005D6                     l1319:
   673                           
   674                           ; BSR set to: 0
   675  0005D6  0100               	movlb	0	; () banked
   676  0005D8  BF77               	btfsc	(put_num@i+1)& (0+255),7,b
   677  0005DA  D008               	goto	l1323
   678  0005DC  0100               	movlb	0	; () banked
   679  0005DE  5177               	movf	(put_num@i+1)& (0+255),w,b
   680  0005E0  E12C               	bnz	l127
   681  0005E2  0E08               	movlw	8
   682  0005E4  0100               	movlb	0	; () banked
   683  0005E6  5D76               	subwf	put_num@i& (0+255),w,b
   684  0005E8  B0D8               	btfsc	status,0,c
   685  0005EA  0012               	return	
   686  0005EC                     l1323:
   687                           
   688                           ; BSR set to: 0
   689                           ;user.c: 56: {
   690                           ;user.c: 57: RB3 = num>>i & mask;
   691  0005EC  0E00               	movlw	0
   692  0005EE  0100               	movlb	0	; () banked
   693  0005F0  6F75               	movwf	_put_num$805& (0+255),b
   694                           
   695                           ; BSR set to: 0
   696  0005F2  C076  F071         	movff	put_num@i,??_put_num
   697  0005F6  C073  F072         	movff	put_num@num,??_put_num+1
   698  0005FA  0100               	movlb	0	; () banked
   699  0005FC  2B71               	incf	??_put_num& (0+255),f,b
   700  0005FE  D003               	goto	u554
   701  000600                     u555:
   702  000600  0100               	movlb	0	; () banked
   703  000602  90D8               	bcf	status,0,c
   704  000604  3372               	rrcf	(??_put_num+1)& (0+255),f,b
   705  000606                     u554:
   706  000606  0100               	movlb	0	; () banked
   707  000608  2F71               	decfsz	??_put_num& (0+255),f,b
   708  00060A  D7FA               	goto	u555
   709  00060C  0100               	movlb	0	; () banked
   710  00060E  3172               	rrcf	(??_put_num+1)& (0+255),w,b
   711  000610  0100               	movlb	0	; () banked
   712  000612  A0D8               	btfss	status,0,c
   713  000614  D006               	goto	l1331
   714                           
   715                           ; BSR set to: 0
   716  000616  0100               	movlb	0	; () banked
   717  000618  A174               	btfss	put_num@mask& (0+255),0,b
   718  00061A  D003               	goto	l1331
   719                           
   720                           ; BSR set to: 0
   721  00061C  0E01               	movlw	1
   722  00061E  0100               	movlb	0	; () banked
   723  000620  6F75               	movwf	_put_num$805& (0+255),b
   724  000622                     l1331:
   725                           
   726                           ; BSR set to: 0
   727  000622  0100               	movlb	0	; () banked
   728  000624  B175               	btfsc	_put_num$805& (0+255),0,b
   729  000626  D002               	bra	u585
   730  000628  9681               	bcf	3969,3,c	;volatile
   731  00062A  D001               	bra	u586
   732  00062C                     u585:
   733  00062C  8681               	bsf	3969,3,c	;volatile
   734  00062E                     u586:
   735                           
   736                           ;user.c: 58: RB4 = 0;
   737  00062E  9881               	bcf	3969,4,c	;volatile
   738                           
   739                           ;user.c: 59: RB4 = 1;
   740  000630  8881               	bsf	3969,4,c	;volatile
   741  000632  0100               	movlb	0	; () banked
   742  000634  4B76               	infsnz	put_num@i& (0+255),f,b
   743  000636  2B77               	incf	(put_num@i+1)& (0+255),f,b
   744  000638  D7CE               	goto	l1319
   745  00063A                     l127:
   746                           
   747                           ; BSR set to: 0
   748  00063A  0012               	return		;funcret
   749  00063C                     __end_of_put_num:
   750                           	opt stack 0
   751                           tblptru	equ	0xFF8
   752                           wreg	equ	0xFE8
   753                           indf2	equ	0xFDF
   754                           fsr2h	equ	0xFDA
   755                           fsr2l	equ	0xFD9
   756                           status	equ	0xFD8
   757                           
   758 ;; *************** function _get_num *****************
   759 ;; Defined at:
   760 ;;		line 72 in file "user.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  num             1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  num             1   17[BANK0 ] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      unsigned char 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:         0       1       0       0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0
   777 ;;      Totals:         0       1       0       0       0       0       0       0       0
   778 ;;Total ram usage:        1 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    2
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_put_nums
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text3
   789  00048E                     __ptext3:
   790                           	opt stack 0
   791  00048E                     _get_num:
   792                           	opt stack 27
   793                           
   794                           ; BSR set to: 0
   795                           ;incstack = 0
   796                           ;get_num@num stored from wreg
   797  00048E  0100               	movlb	0	; () banked
   798  000490  6F71               	movwf	get_num@num& (0+255),b
   799                           
   800                           ;user.c: 74: switch(num)
   801  000492  D020               	goto	l1409
   802  000494                     l1343:
   803  000494  0E30               	movlw	48
   804  000496  0012               	return	
   805  000498                     l1347:
   806  000498  0E6D               	movlw	109
   807  00049A  0012               	return	
   808  00049C                     l1351:
   809  00049C  0E79               	movlw	121
   810  00049E  0012               	return	
   811  0004A0                     l1355:
   812  0004A0  0E33               	movlw	51
   813  0004A2  0012               	return	
   814  0004A4                     l1359:
   815  0004A4  0E5B               	movlw	91
   816  0004A6  0012               	return	
   817  0004A8                     l1363:
   818  0004A8  0E5F               	movlw	95
   819  0004AA  0012               	return	
   820  0004AC                     l1367:
   821  0004AC  0E70               	movlw	112
   822  0004AE  0012               	return	
   823  0004B0                     l1371:
   824  0004B0  0E7F               	movlw	127
   825  0004B2  0012               	return	
   826  0004B4                     l1375:
   827  0004B4  0E73               	movlw	115
   828  0004B6  0012               	return	
   829  0004B8                     l1379:
   830  0004B8  0E7E               	movlw	126
   831  0004BA  0012               	return	
   832  0004BC                     l1383:
   833  0004BC  0E3E               	movlw	62
   834  0004BE  0012               	return	
   835  0004C0                     l1387:
   836  0004C0  0E67               	movlw	103
   837  0004C2  0012               	return	
   838  0004C4                     l1391:
   839  0004C4  0E37               	movlw	55
   840  0004C6  0012               	return	
   841  0004C8                     l1395:
   842  0004C8  0E3D               	movlw	61
   843  0004CA  0012               	return	
   844  0004CC                     l1399:
   845  0004CC  0E15               	movlw	21
   846  0004CE  0012               	return	
   847  0004D0                     l1403:
   848  0004D0  0E7F               	movlw	127
   849                           
   850                           ;user.c: 92: }
   851  0004D2  0012               	return	
   852  0004D4                     l1409:
   853  0004D4  0100               	movlb	0	; () banked
   854  0004D6  5171               	movf	get_num@num& (0+255),w,b
   855                           
   856                           ; Switch size 1, requested type "space"
   857                           ; Number of cases is 15, Range of values is 0 to 85
   858                           ; switch strategies available:
   859                           ; Name         Instructions Cycles
   860                           ; simple_byte           46    24 (average)
   861                           ;	Chosen strategy is simple_byte
   862  0004D8  0A00               	xorlw	0	; case 0
   863  0004DA  B4D8               	btfsc	status,2,c
   864  0004DC  D7ED               	goto	l1379
   865  0004DE  0A01               	xorlw	1	; case 1
   866  0004E0  B4D8               	btfsc	status,2,c
   867  0004E2  D7D8               	goto	l1343
   868  0004E4  0A03               	xorlw	3	; case 2
   869  0004E6  B4D8               	btfsc	status,2,c
   870  0004E8  D7D7               	goto	l1347
   871  0004EA  0A01               	xorlw	1	; case 3
   872  0004EC  B4D8               	btfsc	status,2,c
   873  0004EE  D7D6               	goto	l1351
   874  0004F0  0A07               	xorlw	7	; case 4
   875  0004F2  B4D8               	btfsc	status,2,c
   876  0004F4  D7D5               	goto	l1355
   877  0004F6  0A01               	xorlw	1	; case 5
   878  0004F8  B4D8               	btfsc	status,2,c
   879  0004FA  D7D4               	goto	l1359
   880  0004FC  0A03               	xorlw	3	; case 6
   881  0004FE  B4D8               	btfsc	status,2,c
   882  000500  D7D3               	goto	l1363
   883  000502  0A01               	xorlw	1	; case 7
   884  000504  B4D8               	btfsc	status,2,c
   885  000506  D7D2               	goto	l1367
   886  000508  0A0F               	xorlw	15	; case 8
   887  00050A  B4D8               	btfsc	status,2,c
   888  00050C  D7D1               	goto	l1371
   889  00050E  0A01               	xorlw	1	; case 9
   890  000510  B4D8               	btfsc	status,2,c
   891  000512  D7D0               	goto	l1375
   892  000514  0A4D               	xorlw	77	; case 68
   893  000516  B4D8               	btfsc	status,2,c
   894  000518  D7D7               	goto	l1395
   895  00051A  0A0C               	xorlw	12	; case 72
   896  00051C  B4D8               	btfsc	status,2,c
   897  00051E  D7D2               	goto	l1391
   898  000520  0A06               	xorlw	6	; case 78
   899  000522  B4D8               	btfsc	status,2,c
   900  000524  D7D3               	goto	l1399
   901  000526  0A1E               	xorlw	30	; case 80
   902  000528  B4D8               	btfsc	status,2,c
   903  00052A  D7CA               	goto	l1387
   904  00052C  0A05               	xorlw	5	; case 85
   905  00052E  B4D8               	btfsc	status,2,c
   906  000530  D7C5               	goto	l1383
   907  000532  D7CE               	goto	l1403
   908  000534                     __end_of_get_num:
   909                           	opt stack 0
   910                           tblptru	equ	0xFF8
   911                           wreg	equ	0xFE8
   912                           indf2	equ	0xFDF
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8
   916                           
   917 ;; *************** function _point_toggle *****************
   918 ;; Defined at:
   919 ;;		line 105 in file "user.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   933 ;;      Params:         0       0       0       0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    3
   940 ;; This function calls:
   941 ;;		_point_disable
   942 ;;		_point_enable
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text4
   949  000738                     __ptext4:
   950                           	opt stack 0
   951  000738                     _point_toggle:
   952                           	opt stack 27
   953                           
   954                           ;user.c: 107: if(RB1 == 0)
   955                           
   956                           ;incstack = 0
   957  000738  B281               	btfsc	3969,1,c	;volatile
   958  00073A  D003               	goto	l1497
   959                           
   960                           ;user.c: 108: point_enable();
   961  00073C  ECA7  F003         	call	_point_enable	;wreg free
   962  000740  0012               	return	
   963  000742                     l1497:
   964                           
   965                           ;user.c: 109: else
   966                           ;user.c: 110: point_disable();
   967  000742  ECA9  F003         	call	_point_disable	;wreg free
   968  000746  0012               	return	
   969  000748                     __end_of_point_toggle:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           wreg	equ	0xFE8
   973                           indf2	equ	0xFDF
   974                           fsr2h	equ	0xFDA
   975                           fsr2l	equ	0xFD9
   976                           status	equ	0xFD8
   977                           
   978 ;; *************** function _point_enable *****************
   979 ;; Defined at:
   980 ;;		line 95 in file "user.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		None
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   994 ;;      Params:         0       0       0       0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    2
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_point_toggle
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text5
  1009  00074E                     __ptext5:
  1010                           	opt stack 0
  1011  00074E                     _point_enable:
  1012                           	opt stack 27
  1013                           
  1014                           ;user.c: 97: RB1 = 1;
  1015                           
  1016                           ;incstack = 0
  1017  00074E  8281               	bsf	3969,1,c	;volatile
  1018  000750  0012               	return		;funcret
  1019  000752                     __end_of_point_enable:
  1020                           	opt stack 0
  1021                           tblptru	equ	0xFF8
  1022                           wreg	equ	0xFE8
  1023                           indf2	equ	0xFDF
  1024                           fsr2h	equ	0xFDA
  1025                           fsr2l	equ	0xFD9
  1026                           status	equ	0xFD8
  1027                           
  1028 ;; *************** function _point_disable *****************
  1029 ;; Defined at:
  1030 ;;		line 100 in file "user.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		None
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1047 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    2
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_point_toggle
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text6
  1059  000752                     __ptext6:
  1060                           	opt stack 0
  1061  000752                     _point_disable:
  1062                           	opt stack 27
  1063                           
  1064                           ;user.c: 102: RB1 = 0;
  1065                           
  1066                           ;incstack = 0
  1067  000752  9281               	bcf	3969,1,c	;volatile
  1068  000754  0012               	return		;funcret
  1069  000756                     __end_of_point_disable:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           wreg	equ	0xFE8
  1073                           indf2	equ	0xFDF
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function _get_time *****************
  1079 ;; Defined at:
  1080 ;;		line 188 in file "user.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  data            2   28[BANK0 ] PTR unsigned char 
  1083 ;;		 -> main@aux1(6), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  aux             1   33[BANK0 ] unsigned char 
  1086 ;;  hours           1   32[BANK0 ] unsigned char 
  1087 ;;  minutes         1   31[BANK0 ] unsigned char 
  1088 ;;  seconds         1   30[BANK0 ] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         0       2       0       0       0       0       0       0       0
  1099 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1102 ;;Total ram usage:        6 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    5
  1105 ;; This function calls:
  1106 ;;		_byte_read
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text7
  1113  0003DC                     __ptext7:
  1114                           	opt stack 0
  1115  0003DC                     _get_time:
  1116                           	opt stack 25
  1117                           
  1118                           ;user.c: 190: char aux = 0x81;
  1119                           
  1120                           ;incstack = 0
  1121  0003DC  0E81               	movlw	129
  1122  0003DE  0100               	movlb	0	; () banked
  1123  0003E0  6F81               	movwf	get_time@aux& (0+255),b
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;user.c: 191: char seconds = byte_read(aux);
  1127  0003E2  0100               	movlb	0	; () banked
  1128  0003E4  5181               	movf	get_time@aux& (0+255),w,b
  1129  0003E6  EC9A  F002         	call	_byte_read
  1130  0003EA  0100               	movlb	0	; () banked
  1131  0003EC  6F7E               	movwf	get_time@seconds& (0+255),b
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;user.c: 192: aux = 0x83;
  1135  0003EE  0E83               	movlw	131
  1136  0003F0  0100               	movlb	0	; () banked
  1137  0003F2  6F81               	movwf	get_time@aux& (0+255),b
  1138                           
  1139                           ;user.c: 193: char minutes = byte_read(aux);
  1140  0003F4  0100               	movlb	0	; () banked
  1141  0003F6  5181               	movf	get_time@aux& (0+255),w,b
  1142  0003F8  EC9A  F002         	call	_byte_read
  1143  0003FC  0100               	movlb	0	; () banked
  1144  0003FE  6F7F               	movwf	get_time@minutes& (0+255),b
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;user.c: 194: aux = 0x85;
  1148  000400  0E85               	movlw	133
  1149  000402  0100               	movlb	0	; () banked
  1150  000404  6F81               	movwf	get_time@aux& (0+255),b
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;user.c: 195: char hours = byte_read(aux);
  1154  000406  0100               	movlb	0	; () banked
  1155  000408  5181               	movf	get_time@aux& (0+255),w,b
  1156  00040A  EC9A  F002         	call	_byte_read
  1157  00040E  0100               	movlb	0	; () banked
  1158  000410  6F80               	movwf	get_time@hours& (0+255),b
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;user.c: 197: data[0] = minutes & 0x0f;
  1162  000412  0100               	movlb	0	; () banked
  1163  000414  517F               	movf	get_time@minutes& (0+255),w,b
  1164  000416  0B0F               	andlw	15
  1165  000418  C07C  FFD9         	movff	get_time@data,fsr2l
  1166  00041C  C07D  FFDA         	movff	get_time@data+1,fsr2h
  1167  000420  6EDF               	movwf	indf2,c
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;user.c: 198: data[1] = (minutes & 0xf0)>>4;
  1171  000422  0100               	movlb	0	; () banked
  1172  000424  EE20 F001          	lfsr	2,1
  1173  000428  517C               	movf	get_time@data& (0+255),w,b
  1174  00042A  26D9               	addwf	fsr2l,f,c
  1175  00042C  517D               	movf	(get_time@data+1)& (0+255),w,b
  1176  00042E  22DA               	addwfc	fsr2h,f,c
  1177  000430  0100               	movlb	0	; () banked
  1178  000432  397F               	swapf	get_time@minutes& (0+255),w,b
  1179  000434  0B0F               	andlw	15
  1180  000436  0B0F               	andlw	15
  1181  000438  6EDF               	movwf	indf2,c
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;user.c: 199: data[2] = hours & 0x0f;
  1185  00043A  0100               	movlb	0	; () banked
  1186  00043C  EE20 F002          	lfsr	2,2
  1187  000440  517C               	movf	get_time@data& (0+255),w,b
  1188  000442  26D9               	addwf	fsr2l,f,c
  1189  000444  517D               	movf	(get_time@data+1)& (0+255),w,b
  1190  000446  22DA               	addwfc	fsr2h,f,c
  1191  000448  0100               	movlb	0	; () banked
  1192  00044A  5180               	movf	get_time@hours& (0+255),w,b
  1193  00044C  0B0F               	andlw	15
  1194  00044E  6EDF               	movwf	indf2,c
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;user.c: 200: data[3] = (hours & 0xf0)>>4;
  1198  000450  0100               	movlb	0	; () banked
  1199  000452  EE20 F003          	lfsr	2,3
  1200  000456  517C               	movf	get_time@data& (0+255),w,b
  1201  000458  26D9               	addwf	fsr2l,f,c
  1202  00045A  517D               	movf	(get_time@data+1)& (0+255),w,b
  1203  00045C  22DA               	addwfc	fsr2h,f,c
  1204  00045E  0100               	movlb	0	; () banked
  1205  000460  3980               	swapf	get_time@hours& (0+255),w,b
  1206  000462  0B0F               	andlw	15
  1207  000464  0B0F               	andlw	15
  1208  000466  6EDF               	movwf	indf2,c
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;user.c: 201: data[4] = 1;
  1212  000468  0100               	movlb	0	; () banked
  1213  00046A  EE20 F004          	lfsr	2,4
  1214  00046E  517C               	movf	get_time@data& (0+255),w,b
  1215  000470  26D9               	addwf	fsr2l,f,c
  1216  000472  517D               	movf	(get_time@data+1)& (0+255),w,b
  1217  000474  22DA               	addwfc	fsr2h,f,c
  1218  000476  0E01               	movlw	1
  1219  000478  6EDF               	movwf	indf2,c
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;user.c: 202: data[5] = 'H';
  1223  00047A  0100               	movlb	0	; () banked
  1224  00047C  EE20 F005          	lfsr	2,5
  1225  000480  517C               	movf	get_time@data& (0+255),w,b
  1226  000482  26D9               	addwf	fsr2l,f,c
  1227  000484  517D               	movf	(get_time@data+1)& (0+255),w,b
  1228  000486  22DA               	addwfc	fsr2h,f,c
  1229  000488  0E48               	movlw	72
  1230  00048A  6EDF               	movwf	indf2,c
  1231                           
  1232                           ; BSR set to: 0
  1233  00048C  0012               	return		;funcret
  1234  00048E                     __end_of_get_time:
  1235                           	opt stack 0
  1236                           tblptru	equ	0xFF8
  1237                           wreg	equ	0xFE8
  1238                           indf2	equ	0xFDF
  1239                           fsr2h	equ	0xFDA
  1240                           fsr2l	equ	0xFD9
  1241                           status	equ	0xFD8
  1242                           
  1243 ;; *************** function _byte_read *****************
  1244 ;; Defined at:
  1245 ;;		line 139 in file "user.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  address         1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  address         1   24[BANK0 ] unsigned char 
  1250 ;;  i               2   26[BANK0 ] int 
  1251 ;;  res             1   25[BANK0 ] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      unsigned char 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0
  1262 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1263 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1264 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        6 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    4
  1268 ;; This function calls:
  1269 ;;		_ce_disable
  1270 ;;		_ce_enable
  1271 ;;		_io_as_input
  1272 ;;		_send_command
  1273 ;; This function is called by:
  1274 ;;		_get_time
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text8
  1279  000534                     __ptext8:
  1280                           	opt stack 0
  1281  000534                     _byte_read:
  1282                           	opt stack 25
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;incstack = 0
  1286                           ;byte_read@address stored from wreg
  1287  000534  0100               	movlb	0	; () banked
  1288  000536  6F78               	movwf	byte_read@address& (0+255),b
  1289                           
  1290                           ;user.c: 140: char res = 0;
  1291  000538  0E00               	movlw	0
  1292  00053A  0100               	movlb	0	; () banked
  1293  00053C  6F79               	movwf	byte_read@res& (0+255),b
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;user.c: 143: ce_enable();
  1297  00053E  ECAF  F003         	call	_ce_enable	;wreg free
  1298                           
  1299                           ;user.c: 145: send_command(address);
  1300  000542  0100               	movlb	0	; () banked
  1301  000544  5178               	movf	byte_read@address& (0+255),w,b
  1302  000546  EC1E  F003         	call	_send_command
  1303                           
  1304                           ;user.c: 146: io_as_input();
  1305  00054A  ECAD  F003         	call	_io_as_input	;wreg free
  1306                           
  1307                           ;user.c: 147: int i;
  1308                           ;user.c: 148: for(i=0;i<8;i++)
  1309  00054E  0E00               	movlw	0
  1310  000550  0100               	movlb	0	; () banked
  1311  000552  6F7B               	movwf	(byte_read@i+1)& (0+255),b
  1312  000554  0E00               	movlw	0
  1313  000556  6F7A               	movwf	byte_read@i& (0+255),b
  1314  000558                     l1425:
  1315                           
  1316                           ; BSR set to: 0
  1317  000558  0100               	movlb	0	; () banked
  1318  00055A  BF7B               	btfsc	(byte_read@i+1)& (0+255),7,b
  1319  00055C  D008               	goto	l184
  1320  00055E  0100               	movlb	0	; () banked
  1321  000560  517B               	movf	(byte_read@i+1)& (0+255),w,b
  1322  000562  E12A               	bnz	l1441
  1323  000564  0E08               	movlw	8
  1324  000566  0100               	movlb	0	; () banked
  1325  000568  5D7A               	subwf	byte_read@i& (0+255),w,b
  1326  00056A  B0D8               	btfsc	status,0,c
  1327  00056C  D025               	goto	l1441
  1328  00056E                     l184:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;user.c: 149: {
  1332                           ;user.c: 150: RA2 = 0;
  1333  00056E  9480               	bcf	3968,2,c	;volatile
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;user.c: 151: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  1337  000570  0E06               	movlw	6
  1338  000572                     u937:
  1339  000572  2EE8               	decfsz	wreg,f,c
  1340  000574  D7FE               	bra	u937
  1341  000576  D000               	nop2	
  1342                           
  1343                           ;user.c: 152: res |= RA3<<i;
  1344  000578  C07A  F076         	movff	byte_read@i,??_byte_read
  1345  00057C  A680               	btfss	3968,3,c	;volatile
  1346  00057E  D004               	goto	u610
  1347  000580  0100               	movlb	0	; () banked
  1348  000582  6B77               	clrf	(??_byte_read+1)& (0+255),b
  1349  000584  2B77               	incf	(??_byte_read+1)& (0+255),f,b
  1350  000586  D002               	goto	u628
  1351  000588                     u610:
  1352  000588  0100               	movlb	0	; () banked
  1353  00058A  6B77               	clrf	(??_byte_read+1)& (0+255),b
  1354  00058C                     u628:
  1355  00058C  0100               	movlb	0	; () banked
  1356  00058E  2B76               	incf	??_byte_read& (0+255),f,b
  1357  000590  D003               	goto	u634
  1358  000592                     u635:
  1359  000592  0100               	movlb	0	; () banked
  1360  000594  90D8               	bcf	status,0,c
  1361  000596  3777               	rlcf	(??_byte_read+1)& (0+255),f,b
  1362  000598                     u634:
  1363  000598  0100               	movlb	0	; () banked
  1364  00059A  2F76               	decfsz	??_byte_read& (0+255),f,b
  1365  00059C  D7FA               	goto	u635
  1366  00059E  0100               	movlb	0	; () banked
  1367  0005A0  5177               	movf	(??_byte_read+1)& (0+255),w,b
  1368  0005A2  0100               	movlb	0	; () banked
  1369  0005A4  1379               	iorwf	byte_read@res& (0+255),f,b
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;user.c: 153: RA2 = 1;
  1373  0005A6  8480               	bsf	3968,2,c	;volatile
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;user.c: 154: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  1377  0005A8  0E10               	movlw	16
  1378  0005AA                     u947:
  1379  0005AA  2EE8               	decfsz	wreg,f,c
  1380  0005AC  D7FE               	bra	u947
  1381  0005AE  D000               	nop2	
  1382  0005B0  0100               	movlb	0	; () banked
  1383  0005B2  4B7A               	infsnz	byte_read@i& (0+255),f,b
  1384  0005B4  2B7B               	incf	(byte_read@i+1)& (0+255),f,b
  1385  0005B6  D7D0               	goto	l1425
  1386  0005B8                     l1441:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;user.c: 156: }
  1390                           ;user.c: 158: ce_disable();
  1391  0005B8  ECA4  F003         	call	_ce_disable	;wreg free
  1392                           
  1393                           ;user.c: 161: return res;
  1394  0005BC  0100               	movlb	0	; () banked
  1395  0005BE  5179               	movf	byte_read@res& (0+255),w,b
  1396  0005C0  0012               	return	
  1397  0005C2                     __end_of_byte_read:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           wreg	equ	0xFE8
  1401                           indf2	equ	0xFDF
  1402                           fsr2h	equ	0xFDA
  1403                           fsr2l	equ	0xFD9
  1404                           status	equ	0xFD8
  1405                           
  1406 ;; *************** function _send_command *****************
  1407 ;; Defined at:
  1408 ;;		line 254 in file "user.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  command         1    wreg     unsigned char 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  command         1   19[BANK0 ] unsigned char 
  1413 ;;  i               2   20[BANK0 ] int 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0
  1424 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1425 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1426 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1427 ;;Total ram usage:        5 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    3
  1430 ;; This function calls:
  1431 ;;		_io_as_output
  1432 ;; This function is called by:
  1433 ;;		_byte_read
  1434 ;;		_byte_write
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text9
  1439  00063C                     __ptext9:
  1440                           	opt stack 0
  1441  00063C                     _send_command:
  1442                           	opt stack 25
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;incstack = 0
  1446                           ;send_command@command stored from wreg
  1447  00063C  0100               	movlb	0	; () banked
  1448  00063E  6F73               	movwf	send_command@command& (0+255),b
  1449                           
  1450                           ;user.c: 256: int i;
  1451                           ;user.c: 257: io_as_output();
  1452  000640  ECAB  F003         	call	_io_as_output	;wreg free
  1453                           
  1454                           ;user.c: 258: for(i=0; i<8; i++)
  1455  000644  0E00               	movlw	0
  1456  000646  0100               	movlb	0	; () banked
  1457  000648  6F75               	movwf	(send_command@i+1)& (0+255),b
  1458  00064A  0E00               	movlw	0
  1459  00064C  6F74               	movwf	send_command@i& (0+255),b
  1460  00064E                     l1297:
  1461                           
  1462                           ; BSR set to: 0
  1463  00064E  0100               	movlb	0	; () banked
  1464  000650  BF75               	btfsc	(send_command@i+1)& (0+255),7,b
  1465  000652  D008               	goto	l1301
  1466  000654  0100               	movlb	0	; () banked
  1467  000656  5175               	movf	(send_command@i+1)& (0+255),w,b
  1468  000658  E128               	bnz	l220
  1469  00065A  0E08               	movlw	8
  1470  00065C  0100               	movlb	0	; () banked
  1471  00065E  5D74               	subwf	send_command@i& (0+255),w,b
  1472  000660  B0D8               	btfsc	status,0,c
  1473  000662  0012               	return	
  1474  000664                     l1301:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;user.c: 259: {
  1478                           ;user.c: 260: RA3 = command>>i & 0x01;
  1479  000664  C074  F071         	movff	send_command@i,??_send_command
  1480  000668  C073  F072         	movff	send_command@command,??_send_command+1
  1481  00066C  0100               	movlb	0	; () banked
  1482  00066E  2B71               	incf	??_send_command& (0+255),f,b
  1483  000670  D003               	goto	u504
  1484  000672                     u505:
  1485  000672  0100               	movlb	0	; () banked
  1486  000674  90D8               	bcf	status,0,c
  1487  000676  3372               	rrcf	(??_send_command+1)& (0+255),f,b
  1488  000678                     u504:
  1489  000678  0100               	movlb	0	; () banked
  1490  00067A  2F71               	decfsz	??_send_command& (0+255),f,b
  1491  00067C  D7FA               	goto	u505
  1492  00067E  0100               	movlb	0	; () banked
  1493  000680  3172               	rrcf	(??_send_command+1)& (0+255),w,b
  1494  000682  0100               	movlb	0	; () banked
  1495  000684  A0D8               	btfss	status,0,c
  1496  000686  D002               	goto	u510
  1497  000688  8680               	bsf	3968,3,c	;volatile
  1498  00068A  D001               	goto	l1303
  1499  00068C                     u510:
  1500  00068C  9680               	bcf	3968,3,c	;volatile
  1501  00068E                     l1303:
  1502                           
  1503                           ;user.c: 261: RA2 = 1;
  1504  00068E  8480               	bsf	3968,2,c	;volatile
  1505                           
  1506                           ;user.c: 262: _delay((unsigned long)((10)*(20000000L/4000000.0)));
  1507  000690  0E10               	movlw	16
  1508  000692                     u957:
  1509  000692  2EE8               	decfsz	wreg,f,c
  1510  000694  D7FE               	bra	u957
  1511  000696  D000               	nop2	
  1512                           
  1513                           ;user.c: 263: RA2 = 0;
  1514  000698  9480               	bcf	3968,2,c	;volatile
  1515                           
  1516                           ;user.c: 264: _delay((unsigned long)((4)*(20000000L/4000000.0)));
  1517  00069A  0E06               	movlw	6
  1518  00069C                     u967:
  1519  00069C  2EE8               	decfsz	wreg,f,c
  1520  00069E  D7FE               	bra	u967
  1521  0006A0  D000               	nop2	
  1522  0006A2  0100               	movlb	0	; () banked
  1523  0006A4  4B74               	infsnz	send_command@i& (0+255),f,b
  1524  0006A6  2B75               	incf	(send_command@i+1)& (0+255),f,b
  1525  0006A8  D7D2               	goto	l1297
  1526  0006AA                     l220:
  1527                           
  1528                           ; BSR set to: 0
  1529  0006AA  0012               	return		;funcret
  1530  0006AC                     __end_of_send_command:
  1531                           	opt stack 0
  1532                           tblptru	equ	0xFF8
  1533                           wreg	equ	0xFE8
  1534                           indf2	equ	0xFDF
  1535                           fsr2h	equ	0xFDA
  1536                           fsr2l	equ	0xFD9
  1537                           status	equ	0xFD8
  1538                           
  1539 ;; *************** function _io_as_output *****************
  1540 ;; Defined at:
  1541 ;;		line 274 in file "user.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		None
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    2
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_send_command
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text10
  1570  000756                     __ptext10:
  1571                           	opt stack 0
  1572  000756                     _io_as_output:
  1573                           	opt stack 25
  1574                           
  1575                           ;user.c: 276: TRISA3 = 0;
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;incstack = 0
  1579  000756  9692               	bcf	3986,3,c	;volatile
  1580  000758  0012               	return		;funcret
  1581  00075A                     __end_of_io_as_output:
  1582                           	opt stack 0
  1583                           tblptru	equ	0xFF8
  1584                           wreg	equ	0xFE8
  1585                           indf2	equ	0xFDF
  1586                           fsr2h	equ	0xFDA
  1587                           fsr2l	equ	0xFD9
  1588                           status	equ	0xFD8
  1589                           
  1590 ;; *************** function _io_as_input *****************
  1591 ;; Defined at:
  1592 ;;		line 269 in file "user.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		None
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1609 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    2
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_byte_read
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text11
  1621  00075A                     __ptext11:
  1622                           	opt stack 0
  1623  00075A                     _io_as_input:
  1624                           	opt stack 26
  1625                           
  1626                           ;user.c: 271: TRISA3 = 1;
  1627                           
  1628                           ;incstack = 0
  1629  00075A  8692               	bsf	3986,3,c	;volatile
  1630  00075C  0012               	return		;funcret
  1631  00075E                     __end_of_io_as_input:
  1632                           	opt stack 0
  1633                           tblptru	equ	0xFF8
  1634                           wreg	equ	0xFE8
  1635                           indf2	equ	0xFDF
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _ce_enable *****************
  1641 ;; Defined at:
  1642 ;;		line 131 in file "user.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		None
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    2
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_byte_read
  1667 ;;		_byte_write
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text12
  1672  00075E                     __ptext12:
  1673                           	opt stack 0
  1674  00075E                     _ce_enable:
  1675                           	opt stack 26
  1676                           
  1677                           ;user.c: 132: RA5 = 1;
  1678                           
  1679                           ;incstack = 0
  1680  00075E  8A80               	bsf	3968,5,c	;volatile
  1681  000760  0012               	return		;funcret
  1682  000762                     __end_of_ce_enable:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           wreg	equ	0xFE8
  1686                           indf2	equ	0xFDF
  1687                           fsr2h	equ	0xFDA
  1688                           fsr2l	equ	0xFD9
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _ce_disable *****************
  1692 ;; Defined at:
  1693 ;;		line 134 in file "user.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		None
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    2
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_byte_read
  1718 ;;		_byte_write
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text13
  1723  000748                     __ptext13:
  1724                           	opt stack 0
  1725  000748                     _ce_disable:
  1726                           	opt stack 26
  1727                           
  1728                           ;user.c: 135: RA5 = 0;
  1729                           
  1730                           ;incstack = 0
  1731  000748  9A80               	bcf	3968,5,c	;volatile
  1732                           
  1733                           ;user.c: 136: RA2 = 0;
  1734  00074A  9480               	bcf	3968,2,c	;volatile
  1735  00074C  0012               	return		;funcret
  1736  00074E                     __end_of_ce_disable:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           wreg	equ	0xFE8
  1740                           indf2	equ	0xFDF
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _InitApp *****************
  1746 ;; Defined at:
  1747 ;;		line 28 in file "user.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    2
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text14
  1776  0006F4                     __ptext14:
  1777                           	opt stack 0
  1778  0006F4                     _InitApp:
  1779                           	opt stack 28
  1780                           
  1781                           ;user.c: 32: TRISB3 = 0;
  1782                           
  1783                           ;incstack = 0
  1784  0006F4  9693               	bcf	3987,3,c	;volatile
  1785                           
  1786                           ;user.c: 33: TRISB4 = 0;
  1787  0006F6  9893               	bcf	3987,4,c	;volatile
  1788                           
  1789                           ;user.c: 35: CCP2CON = 0x00;
  1790  0006F8  0E00               	movlw	0
  1791  0006FA  6EBA               	movwf	4026,c	;volatile
  1792                           
  1793                           ;user.c: 36: SSPCON1 = 0X00;
  1794  0006FC  0E00               	movlw	0
  1795  0006FE  6EC6               	movwf	4038,c	;volatile
  1796                           
  1797                           ;user.c: 37: ADCON1 = 0X0F;
  1798  000700  0E0F               	movlw	15
  1799  000702  6EC1               	movwf	4033,c	;volatile
  1800                           
  1801                           ;user.c: 38: INTCON = 0b10001000;
  1802  000704  0E88               	movlw	136
  1803  000706  6EF2               	movwf	intcon,c	;volatile
  1804                           
  1805                           ;user.c: 39: TRISB1 = 0;
  1806  000708  9293               	bcf	3987,1,c	;volatile
  1807                           
  1808                           ;user.c: 40: TRISA2 = 0;
  1809  00070A  9492               	bcf	3986,2,c	;volatile
  1810                           
  1811                           ;user.c: 41: TRISA5 = 0;
  1812  00070C  9A92               	bcf	3986,5,c	;volatile
  1813                           
  1814                           ;user.c: 42: TRISA3 = 0;
  1815  00070E  9692               	bcf	3986,3,c	;volatile
  1816                           
  1817                           ;user.c: 46: state = 0;
  1818  000710  0E00               	movlw	0
  1819  000712  6E47               	movwf	_state+1,c
  1820  000714  0E00               	movlw	0
  1821  000716  6E46               	movwf	_state,c
  1822                           
  1823                           ;user.c: 47: next = 0;
  1824  000718  0E00               	movlw	0
  1825  00071A  0100               	movlb	0	; () banked
  1826  00071C  6F8C               	movwf	(_next+1)& (0+255),b
  1827  00071E  0E00               	movlw	0
  1828  000720  6F8B               	movwf	_next& (0+255),b
  1829                           
  1830                           ; BSR set to: 0
  1831  000722  0012               	return		;funcret
  1832  000724                     __end_of_InitApp:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           intcon	equ	0xFF2
  1836                           wreg	equ	0xFE8
  1837                           indf2	equ	0xFDF
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           
  1842 ;; *************** function _ConfigureOscillator *****************
  1843 ;; Defined at:
  1844 ;;		line 24 in file "system.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		None
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1861 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    2
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text15
  1873  000762                     __ptext15:
  1874                           	opt stack 0
  1875  000762                     _ConfigureOscillator:
  1876                           	opt stack 28
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;incstack = 0
  1880  000762  0012               	return		;funcret
  1881  000764                     __end_of_ConfigureOscillator:
  1882                           	opt stack 0
  1883                           tblptru	equ	0xFF8
  1884                           intcon	equ	0xFF2
  1885                           wreg	equ	0xFE8
  1886                           indf2	equ	0xFDF
  1887                           fsr2h	equ	0xFDA
  1888                           fsr2l	equ	0xFD9
  1889                           status	equ	0xFD8
  1890                           
  1891 ;; *************** function _low_isr *****************
  1892 ;; Defined at:
  1893 ;;		line 106 in file "interrupts.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		None
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1909 ;;      Temps:          0      17       0       0       0       0       0       0       0
  1910 ;;      Totals:         0      17       0       0       0       0       0       0       0
  1911 ;;Total ram usage:       17 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		Interrupt level 1
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	intcodelo
  1922  000018                     __pintcodelo:
  1923                           	opt stack 0
  1924  000018                     _low_isr:
  1925                           	opt stack 25
  1926                           
  1927                           ;incstack = 0
  1928  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1929  00001A  CFD8 F060          	movff	status,??_low_isr
  1930  00001E  CFE8 F061          	movff	wreg,??_low_isr+1
  1931  000022  CFE0 F062          	movff	bsr,??_low_isr+2
  1932  000026  CFFA F063          	movff	pclath,??_low_isr+3
  1933  00002A  CFFB F064          	movff	pclatu,??_low_isr+4
  1934  00002E  CFE9 F065          	movff	fsr0l,??_low_isr+5
  1935  000032  CFEA F066          	movff	fsr0h,??_low_isr+6
  1936  000036  CFE1 F067          	movff	fsr1l,??_low_isr+7
  1937  00003A  CFE2 F068          	movff	fsr1h,??_low_isr+8
  1938  00003E  CFD9 F069          	movff	fsr2l,??_low_isr+9
  1939  000042  CFDA F06A          	movff	fsr2h,??_low_isr+10
  1940  000046  CFF3 F06B          	movff	prodl,??_low_isr+11
  1941  00004A  CFF4 F06C          	movff	prodh,??_low_isr+12
  1942  00004E  CFF6 F06D          	movff	tblptrl,??_low_isr+13
  1943  000052  CFF7 F06E          	movff	tblptrh,??_low_isr+14
  1944  000056  CFF8 F06F          	movff	tblptru,??_low_isr+15
  1945  00005A  CFF5 F070          	movff	tablat,??_low_isr+16
  1946  00005E  C070  FFF5         	movff	??_low_isr+16,tablat
  1947  000062  C06F  FFF8         	movff	??_low_isr+15,tblptru
  1948  000066  C06E  FFF7         	movff	??_low_isr+14,tblptrh
  1949  00006A  C06D  FFF6         	movff	??_low_isr+13,tblptrl
  1950  00006E  C06C  FFF4         	movff	??_low_isr+12,prodh
  1951  000072  C06B  FFF3         	movff	??_low_isr+11,prodl
  1952  000076  C06A  FFDA         	movff	??_low_isr+10,fsr2h
  1953  00007A  C069  FFD9         	movff	??_low_isr+9,fsr2l
  1954  00007E  C068  FFE2         	movff	??_low_isr+8,fsr1h
  1955  000082  C067  FFE1         	movff	??_low_isr+7,fsr1l
  1956  000086  C066  FFEA         	movff	??_low_isr+6,fsr0h
  1957  00008A  C065  FFE9         	movff	??_low_isr+5,fsr0l
  1958  00008E  C064  FFFB         	movff	??_low_isr+4,pclatu
  1959  000092  C063  FFFA         	movff	??_low_isr+3,pclath
  1960  000096  C062  FFE0         	movff	??_low_isr+2,bsr
  1961  00009A  C061  FFE8         	movff	??_low_isr+1,wreg
  1962  00009E  C060  FFD8         	movff	??_low_isr,status
  1963  0000A2  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1964  0000A4  0010               	retfie	
  1965  0000A6                     __end_of_low_isr:
  1966                           	opt stack 0
  1967                           pclatu	equ	0xFFB
  1968                           pclath	equ	0xFFA
  1969                           tblptru	equ	0xFF8
  1970                           tblptrh	equ	0xFF7
  1971                           tblptrl	equ	0xFF6
  1972                           tablat	equ	0xFF5
  1973                           prodh	equ	0xFF4
  1974                           prodl	equ	0xFF3
  1975                           intcon	equ	0xFF2
  1976                           fsr0h	equ	0xFEA
  1977                           fsr0l	equ	0xFE9
  1978                           wreg	equ	0xFE8
  1979                           fsr1h	equ	0xFE2
  1980                           fsr1l	equ	0xFE1
  1981                           bsr	equ	0xFE0
  1982                           indf2	equ	0xFDF
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987 ;; *************** function _high_isr *****************
  1988 ;; Defined at:
  1989 ;;		line 30 in file "interrupts.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  code           47   17[COMRAM] unsigned char [47]
  1994 ;;  i               2   67[COMRAM] int 
  1995 ;;  final_code      2   65[COMRAM] int 
  1996 ;;  aux             1   64[COMRAM] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0
  2007 ;;      Locals:        52       0       0       0       0       0       0       0       0
  2008 ;;      Temps:         17       0       0       0       0       0       0       0       0
  2009 ;;      Totals:        69       0       0       0       0       0       0       0       0
  2010 ;;Total ram usage:       69 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		Interrupt level 2
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	intcode
  2020  000008                     __pintcode:
  2021                           	opt stack 0
  2022  000008                     _high_isr:
  2023                           	opt stack 25
  2024                           
  2025                           ;incstack = 0
  2026  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2027  00000A  ED55  F000         	call	int_func,f	;refresh shadow registers
  2028                           pclatu	equ	0xFFB
  2029                           pclath	equ	0xFFA
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           intcon	equ	0xFF2
  2037                           fsr0h	equ	0xFEA
  2038                           fsr0l	equ	0xFE9
  2039                           wreg	equ	0xFE8
  2040                           fsr1h	equ	0xFE2
  2041                           fsr1l	equ	0xFE1
  2042                           bsr	equ	0xFE0
  2043                           indf2	equ	0xFDF
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8
  2047                           
  2048                           	psect	intcode_body
  2049  0000AA                     __pintcode_body:
  2050                           	opt stack 25
  2051  0000AA                     int_func:
  2052                           	opt stack 25
  2053  0000AA  0006               	pop		; remove dummy address from shadow register refresh
  2054  0000AC  CFFA F004          	movff	pclath,??_high_isr+3
  2055  0000B0  CFFB F005          	movff	pclatu,??_high_isr+4
  2056  0000B4  CFE9 F006          	movff	fsr0l,??_high_isr+5
  2057  0000B8  CFEA F007          	movff	fsr0h,??_high_isr+6
  2058  0000BC  CFE1 F008          	movff	fsr1l,??_high_isr+7
  2059  0000C0  CFE2 F009          	movff	fsr1h,??_high_isr+8
  2060  0000C4  CFD9 F00A          	movff	fsr2l,??_high_isr+9
  2061  0000C8  CFDA F00B          	movff	fsr2h,??_high_isr+10
  2062  0000CC  CFF3 F00C          	movff	prodl,??_high_isr+11
  2063  0000D0  CFF4 F00D          	movff	prodh,??_high_isr+12
  2064  0000D4  CFF6 F00E          	movff	tblptrl,??_high_isr+13
  2065  0000D8  CFF7 F00F          	movff	tblptrh,??_high_isr+14
  2066  0000DC  CFF8 F010          	movff	tblptru,??_high_isr+15
  2067  0000E0  CFF5 F011          	movff	tablat,??_high_isr+16
  2068                           
  2069                           ;interrupts.c: 66: if (RBIF == 1)
  2070  0000E4  A0F2               	btfss	intcon,0,c	;volatile
  2071  0000E6  D0CB               	goto	i2l30
  2072                           
  2073                           ;interrupts.c: 67: {
  2074                           ;interrupts.c: 69: INTCONbits.GIE = 0;
  2075  0000E8  9EF2               	bcf	intcon,7,c	;volatile
  2076                           
  2077                           ;interrupts.c: 70: char aux = 0;
  2078  0000EA  0E00               	movlw	0
  2079  0000EC  6E41               	movwf	high_isr@aux,c
  2080                           
  2081                           ;interrupts.c: 72: int i;
  2082                           ;interrupts.c: 73: char code[47];
  2083                           ;interrupts.c: 75: _delay((unsigned long)((40.6)*(20000000L/4000.0)));
  2084  0000EE  0E02               	movlw	2
  2085  0000F0  6E02               	movwf	(??_high_isr+1)& (0+255),c
  2086  0000F2  0E08               	movlw	8
  2087  0000F4  6E01               	movwf	??_high_isr& (0+255),c
  2088  0000F6  0EA0               	movlw	160
  2089  0000F8                     i2u97_47:
  2090  0000F8  2EE8               	decfsz	wreg,f,c
  2091  0000FA  D7FE               	bra	i2u97_47
  2092  0000FC  2E01               	decfsz	??_high_isr& (0+255),f,c
  2093  0000FE  D7FC               	bra	i2u97_47
  2094  000100  2E02               	decfsz	(??_high_isr+1)& (0+255),f,c
  2095  000102  D7FA               	bra	i2u97_47
  2096                           
  2097                           ;interrupts.c: 76: for(i = 0; i < 47 ; i ++)
  2098  000104  0E00               	movlw	0
  2099  000106  6E45               	movwf	high_isr@i+1,c
  2100  000108  0E00               	movlw	0
  2101  00010A  6E44               	movwf	high_isr@i,c
  2102  00010C                     i2l1515:
  2103  00010C  BE45               	btfsc	high_isr@i+1,7,c
  2104  00010E  D006               	goto	i2l1519
  2105  000110  5045               	movf	high_isr@i+1,w,c
  2106  000112  E118               	bnz	i2l1527
  2107  000114  0E2F               	movlw	47
  2108  000116  5C44               	subwf	high_isr@i,w,c
  2109  000118  B0D8               	btfsc	status,0,c
  2110  00011A  D014               	goto	i2l1527
  2111  00011C                     i2l1519:
  2112                           
  2113                           ;interrupts.c: 77: {
  2114                           ;interrupts.c: 78: code[i] = RB5;
  2115  00011C  0E12               	movlw	low high_isr@code
  2116  00011E  2444               	addwf	high_isr@i,w,c
  2117  000120  6ED9               	movwf	fsr2l,c
  2118  000122  0E00               	movlw	high high_isr@code
  2119  000124  2045               	addwfc	high_isr@i+1,w,c
  2120  000126  6EDA               	movwf	fsr2h,c
  2121  000128  0E00               	movlw	0
  2122  00012A  BA81               	btfsc	3969,5,c	;volatile
  2123  00012C  0E01               	movlw	1
  2124  00012E  6EDF               	movwf	indf2,c
  2125                           
  2126                           ;interrupts.c: 79: _delay((unsigned long)((590)*(20000000L/4000000.0)));
  2127  000130  0E04               	movlw	4
  2128  000132  6E01               	movwf	??_high_isr& (0+255),c
  2129  000134  0ED4               	movlw	212
  2130  000136                     i2u98_47:
  2131  000136  2EE8               	decfsz	wreg,f,c
  2132  000138  D7FE               	bra	i2u98_47
  2133  00013A  2E01               	decfsz	??_high_isr& (0+255),f,c
  2134  00013C  D7FC               	bra	i2u98_47
  2135  00013E  4A44               	infsnz	high_isr@i,f,c
  2136  000140  2A45               	incf	high_isr@i+1,f,c
  2137  000142  D7E4               	goto	i2l1515
  2138  000144                     i2l1527:
  2139                           
  2140                           ;interrupts.c: 80: }
  2141                           ;interrupts.c: 81: int final_code = 0;
  2142  000144  0E00               	movlw	0
  2143  000146  6E43               	movwf	high_isr@final_code+1,c
  2144  000148  0E00               	movlw	0
  2145  00014A  6E42               	movwf	high_isr@final_code,c
  2146                           
  2147                           ;interrupts.c: 82: for(i = 0; i<16;i++)
  2148  00014C  0E00               	movlw	0
  2149  00014E  6E45               	movwf	high_isr@i+1,c
  2150  000150  0E00               	movlw	0
  2151  000152  6E44               	movwf	high_isr@i,c
  2152  000154                     i2l1529:
  2153  000154  BE45               	btfsc	high_isr@i+1,7,c
  2154  000156  D006               	goto	i2l1533
  2155  000158  5045               	movf	high_isr@i+1,w,c
  2156  00015A  E11D               	bnz	i2l1539
  2157  00015C  0E10               	movlw	16
  2158  00015E  5C44               	subwf	high_isr@i,w,c
  2159  000160  B0D8               	btfsc	status,0,c
  2160  000162  D019               	goto	i2l1539
  2161  000164                     i2l1533:
  2162                           
  2163                           ;interrupts.c: 83: {
  2164                           ;interrupts.c: 84: final_code |= code[i]<<i;
  2165  000164  C044  F001         	movff	high_isr@i,??_high_isr
  2166  000168  0E12               	movlw	low high_isr@code
  2167  00016A  2444               	addwf	high_isr@i,w,c
  2168  00016C  6ED9               	movwf	fsr2l,c
  2169  00016E  0E00               	movlw	high high_isr@code
  2170  000170  2045               	addwfc	high_isr@i+1,w,c
  2171  000172  6EDA               	movwf	fsr2h,c
  2172  000174  50DF               	movf	indf2,w,c
  2173  000176  6E02               	movwf	(??_high_isr+1)& (0+255),c
  2174  000178  6A03               	clrf	(??_high_isr+2)& (0+255),c
  2175  00017A  2A01               	incf	??_high_isr,f,c
  2176  00017C  D003               	goto	i2u72_44
  2177  00017E                     i2u72_45:
  2178  00017E  90D8               	bcf	status,0,c
  2179  000180  3602               	rlcf	??_high_isr+1,f,c
  2180  000182  3603               	rlcf	??_high_isr+2,f,c
  2181  000184                     i2u72_44:
  2182  000184  2E01               	decfsz	??_high_isr,f,c
  2183  000186  D7FB               	goto	i2u72_45
  2184  000188  5002               	movf	??_high_isr+1,w,c
  2185  00018A  1242               	iorwf	high_isr@final_code,f,c
  2186  00018C  5003               	movf	??_high_isr+2,w,c
  2187  00018E  1243               	iorwf	high_isr@final_code+1,f,c
  2188  000190  4A44               	infsnz	high_isr@i,f,c
  2189  000192  2A45               	incf	high_isr@i+1,f,c
  2190  000194  D7DF               	goto	i2l1529
  2191  000196                     i2l1539:
  2192                           
  2193                           ;interrupts.c: 85: }
  2194                           ;interrupts.c: 88: if(state == 0 & final_code == 0xAEBA) next = 1;
  2195  000196  5046               	movf	_state,w,c
  2196  000198  1047               	iorwf	_state+1,w,c
  2197  00019A  A4D8               	btfss	status,2,c
  2198  00019C  D00C               	goto	i2l1545
  2199  00019E  0EBA               	movlw	186
  2200  0001A0  1842               	xorwf	high_isr@final_code,w,c
  2201  0001A2  E109               	bnz	i2l1545
  2202  0001A4  0EAE               	movlw	174
  2203  0001A6  1843               	xorwf	high_isr@final_code+1,w,c
  2204  0001A8  A4D8               	btfss	status,2,c
  2205  0001AA  D005               	goto	i2l1545
  2206  0001AC  0E00               	movlw	0
  2207  0001AE  0100               	movlb	0	; () banked
  2208  0001B0  6F8C               	movwf	(_next+1)& (0+255),b
  2209  0001B2  0E01               	movlw	1
  2210  0001B4  6F8B               	movwf	_next& (0+255),b
  2211  0001B6                     i2l1545:
  2212                           
  2213                           ;interrupts.c: 90: if(state == 1 && final_code == 0xAAEE) next = 2;
  2214  0001B6  0446               	decf	_state,w,c
  2215  0001B8  1047               	iorwf	_state+1,w,c
  2216  0001BA  A4D8               	btfss	status,2,c
  2217  0001BC  D00C               	goto	i2l1551
  2218  0001BE  0EEE               	movlw	238
  2219  0001C0  1842               	xorwf	high_isr@final_code,w,c
  2220  0001C2  E109               	bnz	i2l1551
  2221  0001C4  0EAA               	movlw	170
  2222  0001C6  1843               	xorwf	high_isr@final_code+1,w,c
  2223  0001C8  A4D8               	btfss	status,2,c
  2224  0001CA  D005               	goto	i2l1551
  2225  0001CC  0E00               	movlw	0
  2226  0001CE  0100               	movlb	0	; () banked
  2227  0001D0  6F8C               	movwf	(_next+1)& (0+255),b
  2228  0001D2  0E02               	movlw	2
  2229  0001D4  6F8B               	movwf	_next& (0+255),b
  2230  0001D6                     i2l1551:
  2231                           
  2232                           ;interrupts.c: 91: if(state == 2 && final_code == 0xAAEE) next = 3;
  2233  0001D6  0E02               	movlw	2
  2234  0001D8  1846               	xorwf	_state,w,c
  2235  0001DA  1047               	iorwf	_state+1,w,c
  2236  0001DC  A4D8               	btfss	status,2,c
  2237  0001DE  D00C               	goto	i2l1557
  2238  0001E0  0EEE               	movlw	238
  2239  0001E2  1842               	xorwf	high_isr@final_code,w,c
  2240  0001E4  E109               	bnz	i2l1557
  2241  0001E6  0EAA               	movlw	170
  2242  0001E8  1843               	xorwf	high_isr@final_code+1,w,c
  2243  0001EA  A4D8               	btfss	status,2,c
  2244  0001EC  D005               	goto	i2l1557
  2245  0001EE  0E00               	movlw	0
  2246  0001F0  0100               	movlb	0	; () banked
  2247  0001F2  6F8C               	movwf	(_next+1)& (0+255),b
  2248  0001F4  0E03               	movlw	3
  2249  0001F6  6F8B               	movwf	_next& (0+255),b
  2250  0001F8                     i2l1557:
  2251                           
  2252                           ;interrupts.c: 92: if(state == 3 && final_code == 0xAAEE) next = 4;
  2253  0001F8  0E03               	movlw	3
  2254  0001FA  1846               	xorwf	_state,w,c
  2255  0001FC  1047               	iorwf	_state+1,w,c
  2256  0001FE  A4D8               	btfss	status,2,c
  2257  000200  D00C               	goto	i2l1563
  2258  000202  0EEE               	movlw	238
  2259  000204  1842               	xorwf	high_isr@final_code,w,c
  2260  000206  E109               	bnz	i2l1563
  2261  000208  0EAA               	movlw	170
  2262  00020A  1843               	xorwf	high_isr@final_code+1,w,c
  2263  00020C  A4D8               	btfss	status,2,c
  2264  00020E  D005               	goto	i2l1563
  2265  000210  0E00               	movlw	0
  2266  000212  0100               	movlb	0	; () banked
  2267  000214  6F8C               	movwf	(_next+1)& (0+255),b
  2268  000216  0E04               	movlw	4
  2269  000218  6F8B               	movwf	_next& (0+255),b
  2270  00021A                     i2l1563:
  2271                           
  2272                           ;interrupts.c: 93: if(state == 4 && final_code == 0xAAEE) next = 1;
  2273  00021A  0E04               	movlw	4
  2274  00021C  1846               	xorwf	_state,w,c
  2275  00021E  1047               	iorwf	_state+1,w,c
  2276  000220  A4D8               	btfss	status,2,c
  2277  000222  D00C               	goto	i2l1569
  2278  000224  0EEE               	movlw	238
  2279  000226  1842               	xorwf	high_isr@final_code,w,c
  2280  000228  E109               	bnz	i2l1569
  2281  00022A  0EAA               	movlw	170
  2282  00022C  1843               	xorwf	high_isr@final_code+1,w,c
  2283  00022E  A4D8               	btfss	status,2,c
  2284  000230  D005               	goto	i2l1569
  2285  000232  0E00               	movlw	0
  2286  000234  0100               	movlb	0	; () banked
  2287  000236  6F8C               	movwf	(_next+1)& (0+255),b
  2288  000238  0E01               	movlw	1
  2289  00023A  6F8B               	movwf	_next& (0+255),b
  2290  00023C                     i2l1569:
  2291                           
  2292                           ;interrupts.c: 94: if((state == 1 || state == 2 || state == 3 || state == 4) && final_co
      +                          de == 0xAABA) next = 0;
  2293  00023C  0446               	decf	_state,w,c
  2294  00023E  1047               	iorwf	_state+1,w,c
  2295  000240  B4D8               	btfsc	status,2,c
  2296  000242  D00F               	goto	i2l1577
  2297  000244  0E02               	movlw	2
  2298  000246  1846               	xorwf	_state,w,c
  2299  000248  1047               	iorwf	_state+1,w,c
  2300  00024A  B4D8               	btfsc	status,2,c
  2301  00024C  D00A               	goto	i2l1577
  2302  00024E  0E03               	movlw	3
  2303  000250  1846               	xorwf	_state,w,c
  2304  000252  1047               	iorwf	_state+1,w,c
  2305  000254  B4D8               	btfsc	status,2,c
  2306  000256  D005               	goto	i2l1577
  2307  000258  0E04               	movlw	4
  2308  00025A  1846               	xorwf	_state,w,c
  2309  00025C  1047               	iorwf	_state+1,w,c
  2310  00025E  A4D8               	btfss	status,2,c
  2311  000260  D00C               	goto	i2l1581
  2312  000262                     i2l1577:
  2313  000262  0EBA               	movlw	186
  2314  000264  1842               	xorwf	high_isr@final_code,w,c
  2315  000266  E109               	bnz	i2l1581
  2316  000268  0EAA               	movlw	170
  2317  00026A  1843               	xorwf	high_isr@final_code+1,w,c
  2318  00026C  A4D8               	btfss	status,2,c
  2319  00026E  D005               	goto	i2l1581
  2320  000270  0E00               	movlw	0
  2321  000272  0100               	movlb	0	; () banked
  2322  000274  6F8C               	movwf	(_next+1)& (0+255),b
  2323  000276  0E00               	movlw	0
  2324  000278  6F8B               	movwf	_next& (0+255),b
  2325  00027A                     i2l1581:
  2326                           
  2327                           ;interrupts.c: 97: RBIF = 0;
  2328  00027A  90F2               	bcf	intcon,0,c	;volatile
  2329                           
  2330                           ;interrupts.c: 98: INTCONbits.GIE = 1;
  2331  00027C  8EF2               	bsf	intcon,7,c	;volatile
  2332  00027E                     i2l30:
  2333  00027E  C011  FFF5         	movff	??_high_isr+16,tablat
  2334  000282  C010  FFF8         	movff	??_high_isr+15,tblptru
  2335  000286  C00F  FFF7         	movff	??_high_isr+14,tblptrh
  2336  00028A  C00E  FFF6         	movff	??_high_isr+13,tblptrl
  2337  00028E  C00D  FFF4         	movff	??_high_isr+12,prodh
  2338  000292  C00C  FFF3         	movff	??_high_isr+11,prodl
  2339  000296  C00B  FFDA         	movff	??_high_isr+10,fsr2h
  2340  00029A  C00A  FFD9         	movff	??_high_isr+9,fsr2l
  2341  00029E  C009  FFE2         	movff	??_high_isr+8,fsr1h
  2342  0002A2  C008  FFE1         	movff	??_high_isr+7,fsr1l
  2343  0002A6  C007  FFEA         	movff	??_high_isr+6,fsr0h
  2344  0002AA  C006  FFE9         	movff	??_high_isr+5,fsr0l
  2345  0002AE  C005  FFFB         	movff	??_high_isr+4,pclatu
  2346  0002B2  C004  FFFA         	movff	??_high_isr+3,pclath
  2347  0002B6  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2348  0002B8  0011               	retfie		f
  2349  0002BA                     __end_of_high_isr:
  2350                           	opt stack 0
  2351  0000                     pclatu	equ	0xFFB
  2352                           pclath	equ	0xFFA
  2353                           tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           prodh	equ	0xFF4
  2358                           prodl	equ	0xFF3
  2359                           intcon	equ	0xFF2
  2360                           fsr0h	equ	0xFEA
  2361                           fsr0l	equ	0xFE9
  2362                           wreg	equ	0xFE8
  2363                           fsr1h	equ	0xFE2
  2364                           fsr1l	equ	0xFE1
  2365                           bsr	equ	0xFE0
  2366                           indf2	equ	0xFDF
  2367                           fsr2h	equ	0xFDA
  2368                           fsr2l	equ	0xFD9
  2369                           status	equ	0xFD8
  2370                           pclatu	equ	0xFFB
  2371                           pclath	equ	0xFFA
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           prodh	equ	0xFF4
  2377                           prodl	equ	0xFF3
  2378                           intcon	equ	0xFF2
  2379                           fsr0h	equ	0xFEA
  2380                           fsr0l	equ	0xFE9
  2381                           wreg	equ	0xFE8
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           bsr	equ	0xFE0
  2385                           indf2	equ	0xFDF
  2386                           fsr2h	equ	0xFDA
  2387                           fsr2l	equ	0xFD9
  2388                           status	equ	0xFD8
  2389                           
  2390                           	psect	rparam
  2391  0000                     pclatu	equ	0xFFB
  2392                           pclath	equ	0xFFA
  2393                           tblptru	equ	0xFF8
  2394                           tblptrh	equ	0xFF7
  2395                           tblptrl	equ	0xFF6
  2396                           tablat	equ	0xFF5
  2397                           prodh	equ	0xFF4
  2398                           prodl	equ	0xFF3
  2399                           intcon	equ	0xFF2
  2400                           fsr0h	equ	0xFEA
  2401                           fsr0l	equ	0xFE9
  2402                           wreg	equ	0xFE8
  2403                           fsr1h	equ	0xFE2
  2404                           fsr1l	equ	0xFE1
  2405                           bsr	equ	0xFE0
  2406                           indf2	equ	0xFDF
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411                           	psect	temp
  2412  000048                     btemp:
  2413                           	opt stack 0
  2414  000048                     	ds	1
  2415  0000                     int$flags	set	btemp
  2416                           pclatu	equ	0xFFB
  2417                           pclath	equ	0xFFA
  2418                           tblptru	equ	0xFF8
  2419                           tblptrh	equ	0xFF7
  2420                           tblptrl	equ	0xFF6
  2421                           tablat	equ	0xFF5
  2422                           prodh	equ	0xFF4
  2423                           prodl	equ	0xFF3
  2424                           intcon	equ	0xFF2
  2425                           fsr0h	equ	0xFEA
  2426                           fsr0l	equ	0xFE9
  2427                           wreg	equ	0xFE8
  2428                           fsr1h	equ	0xFE2
  2429                           fsr1l	equ	0xFE1
  2430                           bsr	equ	0xFE0
  2431                           indf2	equ	0xFDF
  2432                           fsr2h	equ	0xFDA
  2433                           fsr2l	equ	0xFD9
  2434                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      71
    BANK0           160     43      45
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    get_time@data	PTR unsigned char  size(2) Largest target is 6
		 -> main@aux1(BANK0[6]), 

    put_nums@nums	PTR unsigned char  size(2) Largest target is 6
		 -> main@aux1(BANK0[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_get_time
    _put_nums->_put_num
    _get_time->_byte_read
    _byte_read->_send_command

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1576
                                             34 BANK0      9     9      0
                _ConfigureOscillator
                            _InitApp
                           _get_time
                       _point_toggle
                           _put_nums
 ---------------------------------------------------------------------------------
 (1) _put_nums                                             4     2      2     688
                                             24 BANK0      4     2      2
                            _get_num
                            _put_num
 ---------------------------------------------------------------------------------
 (2) _put_num                                             17    17      0     348
                                             17 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _get_num                                              1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _point_toggle                                         0     0      0       0
                      _point_disable
                       _point_enable
 ---------------------------------------------------------------------------------
 (2) _point_enable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _point_disable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             6     4      2     572
                                             28 BANK0      6     4      2
                          _byte_read
 ---------------------------------------------------------------------------------
 (2) _byte_read                                            6     6      0     204
                                             22 BANK0      6     6      0
                         _ce_disable
                          _ce_enable
                        _io_as_input
                       _send_command
 ---------------------------------------------------------------------------------
 (3) _send_command                                         5     5      0      90
                                             17 BANK0      5     5      0
                       _io_as_output
 ---------------------------------------------------------------------------------
 (4) _io_as_output                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _io_as_input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ce_enable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ce_disable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            69    69      0     340
                                              0 COMRAM    69    69      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _get_time
     _byte_read
       _ce_disable
       _ce_enable
       _io_as_input
       _send_command
         _io_as_output
   _point_toggle
     _point_disable
     _point_enable
   _put_nums
     _get_num
     _put_num

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2B      2D       5       28.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      47       1       75.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74      20        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun May 21 01:42:28 2017

                 __CFG_BOR$ON 000000               ??_point_disable 0071                            bsr 000FE0  
                 _put_num$805 0075                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000                           l220 06AA  
                         l132 06F2                           l127 063A                           l184 056E  
                __CFG_CPB$OFF 000000                           _RB0 007C08                           _RA2 007C02  
                         _RB1 007C09                           _RA3 007C03                           _RB3 007C0B  
                         _RA5 007C05                           _RB4 007C0C                           _RB5 007C0D  
                         u510 068C                           u504 0678                           u505 0672  
                         u610 0588                  __CFG_CPD$OFF 000000                           u634 0598  
                         u554 0606                           u635 0592                           u555 0600  
                         u628 058C                           u585 062C                           u586 062E  
                         u907 033E                           u917 0372                           u927 03A8  
                         u937 0572                           u947 05AA                           u957 0692  
                         u967 069C                           u897 031E                           wreg 000FE8  
                __CFG_FOSC$HS 000000                  ?_io_as_input 0001                   high_isr@aux 0041  
                        l1301 0664                          l1303 068E                          l1403 04D0  
                        l1331 0622                          l1323 05EC                          l1351 049C  
                        l1343 0494                          l1319 05D6                          l1441 05B8  
                        l1425 0558                          l1409 04D4                          l1601 0350  
                        l1371 04B0                          l1363 04A8                          l1355 04A0  
                        l1347 0498                          l1613 03B8                          l1391 04C4  
                        l1383 04BC                          l1375 04B4                          l1367 04AC  
                        l1359 04A4                          l1297 064E                          l1395 04C8  
                        l1387 04C0                          l1379 04B8                          l1483 06B6  
                        l1399 04CC                          l1487 06CC                          l1591 02F0  
                        l1497 0742                          l1589 02E6                   get_time@aux 0081  
                        _RBIF 007F90                          i2l30 027E                          _main 02BA  
                        _next 008B                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0048  
                        prodh 000FF4                          prodl 000FF3                          start 00A6  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
                high_isr@code 0012               __end_of_InitApp 0724                 ?_io_as_output 0001  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0001  
                get_time@data 007C                 __CFG_USBDIV$1 000000           _ConfigureOscillator 0762  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000               __end_of_get_num 0534                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _state 0046               __end_of_low_isr 00A6                         pclath 000FFA  
                       tablat 000FF5               __end_of_put_num 063C                         status 000FD8  
        ?_ConfigureOscillator 0001               __initialization 0724                  __end_of_main 03DC  
              ??_io_as_output 0071                        ??_main 0082                 __activetblptr 000002  
                      _ADCON1 000FC1                 get_time@hours 0080                        i2l1515 010C  
                      i2l1533 0164                        i2l1551 01D6                        i2l1527 0144  
                      i2l1519 011C                        i2l1545 01B6                        i2l1529 0154  
                      i2l1563 021A                        i2l1539 0196                        i2l1581 027A  
                      i2l1557 01F8                        i2l1577 0262                        i2l1569 023C  
                      _INTCON 000FF2                        _TRISA2 007C92                        _TRISB1 007C99  
                      _TRISA3 007C93                        _TRISB3 007C9B                        _TRISA5 007C95  
                      _TRISB4 007C9C                     ??_InitApp 0071         ??_ConfigureOscillator 0071  
              __CFG_XINST$OFF 000000              __end_of_high_isr 02BA              __end_of_get_time 048E  
              __CFG_STVREN$ON 000000                     ??_get_num 0071                     ??_low_isr 0060  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
            __end_of_put_nums 06F4                     ??_put_num 0071          __size_of_io_as_input 0004  
                put_nums@nums 0078                    __accesstop 0060       __end_of__initialization 072A  
             __CFG_PBADEN$OFF 000000                 ___rparam_used 000001            __size_of_ce_enable 0004  
              __pcstackCOMRAM 0001                    _ce_disable 0748          __end_of_io_as_output 075A  
                  __pbssBANK0 008B                    __pnvCOMRAM 0046            __size_of_byte_read 008E  
               ?_send_command 0001                       _CCP2CON 000FBA         __end_of_point_disable 0756  
           __end_of_ce_enable 0762                       i2u72_44 0184                       i2u72_45 017E  
                     i2u97_47 00F8                       i2u98_47 0136                       _SSPCON1 000FC6  
                   ?_high_isr 0001                     ?_get_time 007C               __CFG_VREGEN$OFF 000000  
                     _InitApp 06F4                       __Hparam 0000                       __Lparam 0000  
            byte_read@address 0078                  byte_read@res 0079                ??_send_command 0071  
                   ?_put_nums 0078                       __pcinit 0724                       __ramtop 0800  
                     __ptext0 02BA                       __ptext1 06AC                       __ptext2 05C2  
                     __ptext3 048E                       __ptext4 0738                       __ptext5 074E  
                     __ptext6 0752                       __ptext7 03DC                       __ptext8 0534  
                     __ptext9 063C                       _get_num 048E             __end_of_byte_read 05C2  
                 ?_ce_disable 0001                       _low_isr 0018                       _put_num 05C2  
                  ??_high_isr 0001                    ??_get_time 007E                __pintcode_body 00AA  
               ?_point_enable 0001          end_of_initialization 072A                 __Lmediumconst 0000  
               ?_point_toggle 0001                       int_func 00AA                    ??_put_nums 007A  
       __size_of_io_as_output 0004                ??_point_enable 0071   __end_of_ConfigureOscillator 0764  
               send_command@i 0074                ??_point_toggle 0071                    get_num@num 0071  
         __size_of_ce_disable 0006            high_isr@final_code 0042                  _io_as_output 0756  
         start_initialization 0724                 ??_io_as_input 0071          __end_of_send_command 06AC  
                  byte_read@i 007A              __CFG_LPT1OSC$OFF 000000                   put_num@mask 0074  
               __pcstackBANK0 0060                     _ce_enable 075E             __size_of_high_isr 02B2  
         __end_of_io_as_input 075E             __size_of_get_time 00B2                      ?_InitApp 0001  
                   __pintcode 0008          __end_of_point_enable 0752                   __pintcodelo 0018  
        __end_of_point_toggle 0748                      ?_get_num 0001             __size_of_put_nums 0048  
                ??_ce_disable 0071                      ?_low_isr 0001                     _byte_read 0534  
                    ?_put_num 0001               get_time@minutes 007F               get_time@seconds 007E  
                  ?_ce_enable 0001        __size_of_point_disable 0004            __end_of_ce_disable 074E  
            __CFG_WDTPS$32768 000000                     high_isr@i 0044         __size_of_send_command 0070  
                 _io_as_input 075A                    ?_byte_read 0001           send_command@command 0073  
            __size_of_InitApp 0030                      __Hrparam 0000                      __Lrparam 0000  
                  put_num@num 0073                  _send_command 063C                 _point_disable 0752  
            __size_of_get_num 00A6              __size_of_low_isr 008E                      __ptext10 0756  
                    __ptext11 075A                      __ptext12 075E                      __ptext13 0748  
                    __ptext14 06F4                      __ptext15 0762                      _high_isr 0008  
                    _get_time 03DC              __size_of_put_num 007A                   ??_ce_enable 0071  
               __size_of_main 0122  __size_of_ConfigureOscillator 0002         __size_of_point_enable 0004  
       __size_of_point_toggle 0010                      int$flags 0048                      _put_nums 06AC  
                    main@aux1 0085                      main@temp 0084         __CFG_CPUDIV$OSC1_PLL2 000000  
              ?_point_disable 0001                    _INTCONbits 000FF2                   ??_byte_read 0076  
                   put_nums@i 007A                      intlevel1 0000                      intlevel2 0000  
                _point_enable 074E                  _point_toggle 0738                      put_num@i 0076  
